<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>项脊轩</title>
  <subtitle>项脊轩，旧南阁子也</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.mindcont.com/"/>
  <updated>2017-07-27T08:37:29.382Z</updated>
  <id>http://blog.mindcont.com/</id>
  
  <author>
    <name>猿族</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Caffe 入门-MNIST 实验</title>
    <link href="http://blog.mindcont.com/2017/04/25/how-to-do-mnist-demo/"/>
    <id>http://blog.mindcont.com/2017/04/25/how-to-do-mnist-demo/</id>
    <published>2017-04-25T03:45:16.000Z</published>
    <updated>2017-07-27T08:37:29.382Z</updated>
    
    <content type="html">&lt;p&gt;MNIST 是一个包含各种手写数字（0-9）图片(images)和对应标签(label)的数据集，下面我们将介绍如何利用 &lt;a href=&quot;https://github.com/bvlc/caffe/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caffe&lt;/a&gt;框架对手写数字识别一个完整的流程，本实验代码可以&lt;a href=&quot;https://github.com/mindcont/caffe/blob/master/examples/mnist&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;下载。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/asamples.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;数据集准备&quot;&gt;数据集准备&lt;/h2&gt;
&lt;h3 id=&quot;下载数据集&quot;&gt;下载数据集&lt;/h3&gt;
&lt;p&gt;You will first need to download and convert the data format from the MNIST website. To do this, simply run the following commands:&lt;/p&gt;
&lt;p&gt;We will assume that you have Caffe successfully compiled. If not, please refer to the &lt;a href=&quot;&quot;&gt;Installation page&lt;/a&gt;. In this tutorial, we will assume that your Caffe installation is located at CAFFE_ROOT.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$CAFFE_ROOT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 下载数据集并解压&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./data/mnist/get_mnist.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pi&lt;span class=&quot;meta&quot;&gt;@DEEPMIND&lt;/span&gt;:~/caffe$ ./data/mnist/get_mnist.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Downloading...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;04&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;59&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;--  http:&lt;span class=&quot;comment&quot;&gt;//yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;正在解析主机 yann.lecun.com (yann.lecun.com)... &lt;span class=&quot;number&quot;&gt;216.165&lt;/span&gt;.22.6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;正在连接 yann.lecun.com (yann.lecun.com)|&lt;span class=&quot;number&quot;&gt;216.165&lt;/span&gt;.22.6|:&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;... 已连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;已发出 HTTP 请求，正在等待回应... &lt;span class=&quot;number&quot;&gt;302&lt;/span&gt; Found&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;位置：http:&lt;span class=&quot;comment&quot;&gt;//10.10.10.50/files/4107000000008DA0/yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz [跟随至新的 URL]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;04&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;59&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;--  http:&lt;span class=&quot;comment&quot;&gt;//10.10.10.50/files/4107000000008DA0/yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;正在连接 &lt;span class=&quot;number&quot;&gt;10.10&lt;/span&gt;.10.50:&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;... 已连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;已发出 HTTP 请求，正在等待回应... &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;长度： &lt;span class=&quot;number&quot;&gt;9912422&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;9.5&lt;/span&gt;M) [application/octet-stream]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;正在保存至: “train-images-idx3-ubyte.gz”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%[======================================&amp;gt;] &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;912&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;422&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;479&lt;/span&gt;KB/s   用时 &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;s  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;04&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;59&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;37&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;485&lt;/span&gt; KB/s) - 已保存 “train-images-idx3-ubyte.gz” [&lt;span class=&quot;number&quot;&gt;9912422&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;9912422&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;长度： &lt;span class=&quot;number&quot;&gt;4542&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;4.4&lt;/span&gt;K) [application/x-gzip]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;正在保存至: “t10k-labels-idx1-ubyte.gz”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%[======================================&amp;gt;] &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;542&lt;/span&gt;       --.-K/s   用时 &lt;span class=&quot;number&quot;&gt;0.001&lt;/span&gt;s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;04&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;59&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;44&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;7.86&lt;/span&gt; MB/s) - 已保存 “t10k-labels-idx1-ubyte.gz” [&lt;span class=&quot;number&quot;&gt;4542&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;4542&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;数据存储格式&quot;&gt;数据存储格式&lt;/h3&gt;
&lt;p&gt;There are 4 files:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;训练集&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;train-images-idx3-ubyte: training &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; images&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;train-labels-idx1-ubyte: training &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; labels&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;验证集&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t10k-images-idx3-ubyte:  &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; images&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t10k-labels-idx1-ubyte:  &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; labels&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The training set contains 60000 examples, and the test set 10000 examples.&lt;/p&gt;
&lt;p&gt;The first 5000 examples of the test set are taken from the original NIST training set. The last 5000 are taken from the original NIST test set. The first 5000 are cleaner and easier than the last 5000.&lt;/p&gt;
&lt;p&gt;对于每个文件的存储格式，以train-images-idx3-ubyte 训练集图片：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;TRAINING SET IMAGE FILE (train-images-idx3-ubyte):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[offset] [type]          [value]          [description]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000     32 bit integer  0x00000803(2051) magic number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0004     32 bit integer  60000            number of images&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0008     32 bit integer  28               number of rows&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0012     32 bit integer  28               number of columns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0016     unsigned byte   ??               pixel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0017     unsigned byte   ??               pixel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;........&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xxxx     unsigned byte   ??               pixel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Pixels are organized row-wise. Pixel values are 0 to 255. 0 means background (white), 255 means foreground (black).&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;头部信息存储 整个文件信息（magic_number,number of images,image_width,image_hight），按字节偏移地址依次存储 每个像素的信息，对于单副图片我们要依次遍历28*28个像素，更多参见&lt;a href=&quot;http://yann.lecun.com/exdb/mnist/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mnist&lt;/a&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;可视化mnist-数据集&quot;&gt;可视化MNIST 数据集&lt;/h3&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /data/mnist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir train&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python visual_mnist_data.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从 &lt;code&gt;data/mnist/train/&lt;/code&gt;下，我们可以看到刚才将 rain-images-idx3-ubyte 提取出来的训练集图像，可以看到训练集中单个图片是28*28 单通道灰度图像，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;标签文件按图片名称顺序代表图片中数字。如 &lt;code&gt;0.png&lt;/code&gt; 对应label.txt 第一个字符 5。&lt;/p&gt;
&lt;h3 id=&quot;转化为lmdb-格式&quot;&gt;转化为lmdb 格式&lt;/h3&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./examples/mnist/create_mnist.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pi&lt;span class=&quot;meta&quot;&gt;@DEEPMIND&lt;/span&gt;:~/caffe$ ./examples/mnist/create_mnist.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Creating lmdb...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;11.133980&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2966&lt;/span&gt; db_lmdb.cpp:&lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;] Opened lmdb examples/mnist/mnist_train_lmdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;11.134397&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2966&lt;/span&gt; convert_mnist_data.cpp:&lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;] A total of &lt;span class=&quot;number&quot;&gt;60000&lt;/span&gt; items.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;11.134409&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2966&lt;/span&gt; convert_mnist_data.cpp:&lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;] Rows: &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt; Cols: &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15.408113&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2966&lt;/span&gt; convert_mnist_data.cpp:&lt;span class=&quot;number&quot;&gt;108&lt;/span&gt;] Processed &lt;span class=&quot;number&quot;&gt;60000&lt;/span&gt; files.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15.553190&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2969&lt;/span&gt; db_lmdb.cpp:&lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;] Opened lmdb examples/mnist/mnist_test_lmdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15.553597&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2969&lt;/span&gt; convert_mnist_data.cpp:&lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;] A total of &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt; items.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15.553642&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2969&lt;/span&gt; convert_mnist_data.cpp:&lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;] Rows: &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt; Cols: &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;16.184403&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2969&lt;/span&gt; convert_mnist_data.cpp:&lt;span class=&quot;number&quot;&gt;108&lt;/span&gt;] Processed &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt; files.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Done.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;定义mnist-网络&quot;&gt;定义MNIST 网络&lt;/h2&gt;
&lt;p&gt;这一部分，官方教程比较好，移步&lt;a href=&quot;https://github.com/bvlc/caffe/blob/master/examples/mnist/readme.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Training LeNet on MNIST with Caffe&lt;/a&gt;。&lt;br&gt;
值得注意的是：本本所使用的LeNet模型 ，和原始的有所不同，我们使用Relu 代替 sigmoid,在&lt;code&gt;examples/mnist/lenet_train_test.prototxt&lt;/code&gt;下。&lt;/p&gt;
&lt;h3 id=&quot;可视化网络&quot;&gt;可视化网络&lt;/h3&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;  examples/mnist/trian&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bash ./vis_net.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;训练网络&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/lenet_train_test.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;测试／部署网络，即用于测试，和训练网络区别在于没有标签的输入，只有前向传播过程。&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/lenet.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;训练&quot;&gt;训练&lt;/h2&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /examples/mnist/train&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./train_lenet.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中&lt;code&gt;train_lenet.sh&lt;/code&gt;内容如下&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set -e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log_path=&quot;logs/&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir -p $log_path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;save_model_path=&quot;caffemodel/&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir -p $save_model_path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# training log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file_prefix=&quot;mnist_&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log_file=$(date -d &quot;today&quot; +&quot;%Y-%m-%d-%H:%M:%S&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log_file=$log_path$file_prefix$log_file&quot;.log&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# caffe execute file path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;caffe_bin=&quot;../../../build/tools/caffe&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$caffe_bin train --solver=lenet_solver.prototxt  2&amp;gt;&amp;amp;1  | tee -a $log_file&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;观察训练日志输出，保存在&lt;code&gt;logs/&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:10:01.759721  4049 caffe.cpp:211] Use CPU.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:10:01.785264  4049 solver.cpp:44] Initializing solver from parameters:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test_iter: 100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test_interval: 500&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;base_lr: 0.01&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;display: 100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max_iter: 10000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lr_policy: &quot;inv&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gamma: 0.0001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;power: 0.75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;momentum: 0.9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;weight_decay: 0.0005&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;snapshot: 5000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;snapshot_prefix: &quot;caffemodel/lenet&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;solver_mode: CPU&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;net: &quot;lenet_train_test.prototxt&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;train_state &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  level: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  stage: &quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:10:01.785367  4049 solver.cpp:87] Creating training net from net file: lenet_train_test.prototxt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:10:01.785703  4049 net.cpp:294] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:10:01.785719  4049 net.cpp:294] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:10:01.785794  4049 net.cpp:51] Initializing net from parameters:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name: &quot;LeNet&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;state &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  phase: TRAIN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  level: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  stage: &quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;layer &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: &quot;mnist&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: &quot;Data&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  top: &quot;data&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  top: &quot;label&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  include &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    phase: TRAIN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  transform_param &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scale: 0.00390625&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  data_param &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    source: &quot;../mnist_train_lmdb&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    batch_size: 64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    backend: LMDB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:22:48.831621  4049 solver.cpp:218] Iteration 9900 (14.7601 iter/s, 6.775s/100 iters), loss = 0.00511876&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:22:48.831665  4049 solver.cpp:237]     Train net output #0: loss = 0.00511864 (* 1 = 0.00511864 loss)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:22:48.831676  4049 sgd_solver.cpp:105] Iteration 9900, lr = 0.00596843&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:22:55.538620  4049 solver.cpp:447] Snapshotting to binary proto file caffemodel/lenet_iter_10000.caffemodel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:22:55.543390  4049 sgd_solver.cpp:273] Snapshotting solver state to binary proto file caffemodel/lenet_iter_10000.solverstate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:22:55.578083  4049 solver.cpp:310] Iteration 10000, loss = 0.00350995&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:22:55.578119  4049 solver.cpp:330] Iteration 10000, Testing net (#0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:22:59.965965  4054 data_layer.cpp:73] Restarting data prefetching from start.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:23:00.153450  4049 solver.cpp:397]     Test net output #0: accuracy = 0.9912&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:23:00.153553  4049 solver.cpp:397]     Test net output #1: loss = 0.0277065 (* 1 = 0.0277065 loss)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:23:00.153568  4049 solver.cpp:315] Optimization Done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 11:23:00.153573  4049 caffe.cpp:259] Optimization Done.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此，我们就完成了利用Lenet 网络模型在mnist数据集上进行训练，如何评价训练结果呢？我们可以输入一张新的图片，使用刚才训练的模型进行预测，来评价我们训练结果的好坏。&lt;/p&gt;
&lt;h2 id=&quot;预测一张新的图片&quot;&gt;预测一张新的图片&lt;/h2&gt;
&lt;p&gt;假设待预测图片为下图&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; examples/mnist/&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python mnist_test.py 2.png&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pi&lt;span class=&quot;meta&quot;&gt;@DEEPMIND&lt;/span&gt;:~/caffe/examples/mnist/test$ python mnist_test.py test.jpg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WARNING: &lt;span class=&quot;function&quot;&gt;Logging before &lt;span class=&quot;title&quot;&gt;InitGoogleLogging&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; is written to STDERR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W0424 14:23:46.789387  6313 _caffe.cpp:139] DEPRECATION WARNING - deprecated use of Python interface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W0424 14:23:46.789423  6313 _caffe.cpp:140] Use &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;instead&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(with the named &lt;span class=&quot;string&quot;&gt;&quot;weights&quot;&lt;/span&gt; parameter)&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W0424 14:23:46.789428  6313 _caffe.cpp:142] &lt;span class=&quot;title&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&#39;../train/lenet.prototxt&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, weights=&lt;span class=&quot;string&quot;&gt;&#39;../train/caffemodel/lenet_iter_10000.caffemodel&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 14:23:46.883805  6313 net.cpp:51] Initializing net from parameters:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name: &quot;LeNet&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;state &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  phase: TEST&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  level: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;layer &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: &lt;span class=&quot;string&quot;&gt;&quot;Input&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  top: &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  input_param &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    shape &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dim: &lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dim: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dim: &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dim: &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;layer &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: &lt;span class=&quot;string&quot;&gt;&quot;conv1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: &lt;span class=&quot;string&quot;&gt;&quot;Convolution&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bottom: &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  top: &lt;span class=&quot;string&quot;&gt;&quot;conv1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  param &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lr_mult: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  param &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lr_mult: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  convolution_param &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num_output: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kernel_size: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stride: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    weight_filler &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      type: &lt;span class=&quot;string&quot;&gt;&quot;xavier&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bias_filler &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      type: &lt;span class=&quot;string&quot;&gt;&quot;constant&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;40.851599&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;7883&lt;/span&gt; net.cpp:&lt;span class=&quot;number&quot;&gt;242&lt;/span&gt;] This network produces output prob&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;40.851608&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;7883&lt;/span&gt; net.cpp:&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;] Network initialization done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;40.854398&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;7883&lt;/span&gt; net.cpp:&lt;span class=&quot;number&quot;&gt;744&lt;/span&gt;] Ignoring source layer mnist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I0424 &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;40.854982&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;7883&lt;/span&gt; net.cpp:&lt;span class=&quot;number&quot;&gt;744&lt;/span&gt;] Ignoring source layer loss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[  &lt;span class=&quot;number&quot;&gt;5.44423534e-11&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;2.36225206e-11&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;1.00000000e+00&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;6.40073061e-09&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;1.00278713e-18&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;2.31217930e-18&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;2.05065188e-17&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;6.41556852e-09&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;5.65470171e-10&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;1.42476214e-13&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到网络输出10分类各自的概率，最后取最大的概率所对应的标签作为预测结果，即&lt;code&gt;2&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;通过上面的步骤，我们就完成了一个机器学习的通用步骤，即数据集的预处理、训练网络的定义，训练，预测和评估。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bvlc/caffe/blob/master/examples/mnist/readme.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Training LeNet on MNIST with Caffe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yann.lecun.com/exdb/lenet/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MNIST Demos on Yann LeCun’s website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;MNIST 是一个包含各种手写数字（0-9）图片(images)和对应标签(label)的数据集，下面我们将介绍如何利用 &lt;a href=&quot;https://github.com/bvlc/caffe/&quot;&gt;Caffe&lt;/a&gt;框架对手写数字识别一个完整的流程，本实验代码可以&lt;a href=&quot;https://github.com/mindcont/caffe/blob/master/examples/mnist&quot;&gt;github&lt;/a&gt;下载。&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://blog.mindcont.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>调试安卓的小技巧</title>
    <link href="http://blog.mindcont.com/2017/02/25/debug-android-win/"/>
    <id>http://blog.mindcont.com/2017/02/25/debug-android-win/</id>
    <published>2017-02-25T01:26:57.000Z</published>
    <updated>2017-07-27T09:08:01.485Z</updated>
    
    <content type="html">&lt;p&gt;在win10下开发安卓小程序使用物理机调试的时候，USB数据线接触不好，总是很容易断开链接，害的处女座的强迫症都要犯了。&lt;/p&gt;
&lt;h2 id=&quot;使用wifi来调试你的应用&quot;&gt;使用wifi来调试你的应用&lt;/h2&gt;
&lt;h3 id=&quot;使用方法&quot;&gt;使用方法&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1.测试手机和开发PC要在同一wifi局域网内&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;IP地址&lt;/th&gt;
&lt;th&gt;能否访问Internet&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;PC(开发者)&lt;/td&gt;
&lt;td&gt;192.168.1.123&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;测试手机&lt;/td&gt;
&lt;td&gt;192.168.1.100&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;2.确保你正确配置了adb（Android Debug Bridge）环境变量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当你打开命令行，输入’adb version’，看到类似如下信息，就说明adb配置成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/coding/android/adb.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.设置手机以侦听端口 5555 上的 TCP/IP 连接&lt;/strong&gt;&lt;br&gt;
第一次的时候需要用手机USB连接到你的电脑，之后运行下面国外大牛写的shell脚本，脚本在mac或者Linux肯定是ok的，windows上需要安装一些如msysgit或者&lt;a href=&quot;https://www.cygwin.com/setup-x86.exe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cygwin&lt;/a&gt;才可运行以上Linux shell。&lt;/p&gt;
&lt;p&gt;下载&lt;a href=&quot;https://gist.github.com/stormzhang/6fa157ceb7980a25fbf0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;adbwifi.sh&lt;/a&gt; 放到cygwin 目录下 例如我’C:\cygwin64\home\fenxi\&lt;a href=&quot;http://adbwifi.sh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;adbwifi.sh&lt;/a&gt;’&lt;br&gt;
运行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sh adbwifi.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;4. 连接&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;断开手机和PC相连的usb数据线&lt;/p&gt;
&lt;p&gt;查找 Android 设备的 IP 地址。例如，在 Nexus 设备上，您可以通过访问 Settings &amp;gt; About tablet（或 About phone) &amp;gt; Status &amp;gt; IP address 查找 IP 地址。例如我的手机地址为’192.168.1.100’,打开命令行，输入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb connect 192.168.1.100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#查看已连接设备&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb devices&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在，您可以开始操作了！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;br&gt;
手机重启后需要使用数据线再连接一遍，重复以上步骤才可使用无线调试模式。&lt;br&gt;
这属于安卓系统安全策略，不然任何时候局域网内其他PC都可以远程控制你的手机了&lt;/p&gt;
&lt;h2 id=&quot;使用dryrun&quot;&gt;使用dryrun&lt;/h2&gt;
&lt;p&gt;github是个大宝藏，对于 Android 开发者来说，除了阅读还有运行 demo 看下项目效果等。&lt;/p&gt;
&lt;p&gt;来看下一般人的阅读开源项目的姿势是怎么样的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;找到项目地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;点击「download zip」&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;解压到一个目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;打开 Android Studio&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;导入项目&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sync gradle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;运行项目&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;选择运行的设备&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;删除下载的 zip 文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;只要安装dryrun这个工具，直接执行一个命令：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/coding/android/usage_v4.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;使用方法-v2&quot;&gt;使用方法&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1.安装ruby&lt;/strong&gt;&lt;br&gt;
这里我推荐使用&lt;a href=&quot;http://railsinstaller.org/en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RailsInstaller&lt;/a&gt;自动配置好ruby、rails、Devkit等&lt;br&gt;
，记得勾选添加到环境变量。&lt;/p&gt;
&lt;p&gt;检查ruby安装是否成功，‘ruby -v’&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.安装dryrun&lt;/strong&gt;&lt;br&gt;
&lt;a href=&quot;https://github.com/cesarferreira/dryrun&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dryrun Try the demo project of any Android Library&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gem install dryrun&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;3.运行demo&lt;/strong&gt;&lt;br&gt;
值得注意的是，先用usb连接到手机，这里好像不支持无线调试的方式&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dryrun git@github.com:cesarferreira/android-helloworld.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/coding/android/dryrun-success.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;附上我一张图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/coding/android/hello-world.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;有用的链接&quot;&gt;有用的链接&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://stormzhang.com/friends/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stormzhang的博客&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://stormzhang.com/android/2014/08/27/adb-over-wifi/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ANDROID通过WIFI来调试你的应用&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://developer.android.com/studio/command-line/adb.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 调试桥&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://stormzhang.com/2016/10/19/how-to-read-and-run-the-demo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;教你一招最屌的阅读开源项目的姿势&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在win10下开发安卓小程序使用物理机调试的时候，USB数据线接触不好，总是很容易断开链接，害的处女座的强迫症都要犯了。&lt;/p&gt;
&lt;h2 id=&quot;使用wifi来调试你的应用&quot;&gt;使用wifi来调试你的应用&lt;/h2&gt;
&lt;h3 id=&quot;使用方法&quot;&gt;使用方法&lt;/h3&gt;
&lt;p&gt;&lt;st
    
    </summary>
    
    
      <category term="coding" scheme="http://blog.mindcont.com/tags/coding/"/>
    
  </entry>
  
  <entry>
    <title>给初做科研的一些建议</title>
    <link href="http://blog.mindcont.com/2017/02/22/some-advice-for-research-beginners/"/>
    <id>http://blog.mindcont.com/2017/02/22/some-advice-for-research-beginners/</id>
    <published>2017-02-22T01:19:45.000Z</published>
    <updated>2017-07-27T09:08:01.487Z</updated>
    
    <content type="html">&lt;p&gt;这是我回顾一年多来的研究心得，写给那些初入研究生生涯人的，以求启迪后者，少走些弯路，但从方法论中来说有些弯路是不可逾越的并不会因你看了我的文章而改变。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/do-research.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p align=&quot;right&quot;&gt;--图片来源 wikihow&lt;/p&gt;
&lt;p&gt;一个东西不理解，很陌生，我们可以通过一种方法去尝试着研究它，去解剖它。但怎样去解剖呢？&lt;/p&gt;
&lt;p&gt;我想一个人，能做的对自己的研究方向和自己所研究的问题有清晰的理解，并能通过搜索加学习，自己给出该问题的一个答案或者一个不错的结果，那就是搞科研去了门，也下了一定的功夫了。&lt;/p&gt;
&lt;h3 id=&quot;了解问题的性质&quot;&gt;了解问题的性质&lt;/h3&gt;
&lt;p&gt;先了解自己研究的是什么问题？&lt;br&gt;
结合自己的志趣，实验室主攻方向，就业等，去寻找一个结合小点作为自己的研究方向，比如实验室做机器人，而你想做计算机视觉，那能不能做机器人场景下，一些物体的识别，检测，诸如此类&lt;/p&gt;
&lt;p&gt;有什么实际作用？&lt;br&gt;
如自然语言处理可以去机器翻译，计算机视觉可以结合安防，结合工业机器人的机械臂，结合自动驾驶中人，灯，车复杂车况的处理，多传感器融合&lt;/p&gt;
&lt;p&gt;心理要清楚，研究它有什么用，有什么价值&lt;/p&gt;
&lt;h3 id=&quot;问题的解决方法&quot;&gt;问题的解决方法&lt;/h3&gt;
&lt;p&gt;有几种解决方法的思路？&lt;br&gt;
对于要研究的问题，有几种处理方法，国内外的&lt;/p&gt;
&lt;p&gt;从点到面的寻找资源？&lt;br&gt;
从顶级论文中选论文，从大局入手，先看他做了什么，取得了什么结果，用什么方法做的，不要着眼于具体的公式推导，你可能说无法理解他的算法，我们这一步不需要理解算法，只需要找到他的算法思想，以及他如何产生的这种思想&lt;/p&gt;
&lt;p&gt;再看看他引用的文章，大牛论文的引用都是干货，能不能找到一些代码和demo，从点到面，顺藤摸瓜，逐渐的对这个问题有几种处理方法，以及他们之间又是如何改进的你会有一个概念&lt;/p&gt;
&lt;p&gt;而后才是反过来，看具体的算法实现，具体的公式，适量就好，资质不足，看不明白也不要紧，有了思想，再找代码，结合代码看数据的输入和输出，数据的处理流程，实验的设计与结果的评估&lt;/p&gt;
&lt;p&gt;这样从点，到思想，到更多的思想和方法，再到一篇完整的思想和代码实现，完整的实验设计和处理流程，你就有了清晰的理解。&lt;/p&gt;
&lt;p&gt;当然这是凭国内的搜索引擎，你可能搜不到你想要的东西，这也是我下面想说的&lt;/p&gt;
&lt;h3 id=&quot;学会搜索&quot;&gt;学会搜索&lt;/h3&gt;
&lt;p&gt;学会使用谷歌&lt;br&gt;
google +对问题描述英文的关键词&lt;br&gt;
一个好的搜索引擎，加上对问题恰当的关键词，能快速得到你想要的，所需的资料&lt;/p&gt;
&lt;p&gt;谷歌学术也很好，人物加年份，加方向&lt;br&gt;
（研究点）关键词&lt;/p&gt;
&lt;h3 id=&quot;思维碰撞&quot;&gt;思维碰撞&lt;/h3&gt;
&lt;p&gt;我觉得研究生就是应该相互讨论，一个好实验室的氛围大抵如此。&lt;br&gt;
思想相互碰撞，实践&lt;/p&gt;
&lt;h3 id=&quot;下工夫&quot;&gt;下工夫&lt;/h3&gt;
&lt;p&gt;最重要也是最后说的，&lt;br&gt;
就是多下功夫，避免效率低下，高效的使用时间，并行的处理事情&lt;/p&gt;
&lt;p&gt;最后，祝愿大家都能通过研究生阶段的学习，有所收获，有所启发。&lt;/p&gt;
&lt;h2 id=&quot;有用的链接&quot;&gt;有用的链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wikihow.com/Main-Page&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wikihow - how to do anything&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.coursera.org/learn/chuangxin-siwei/lecture/GDsGk/3-6-ru-he-kuai-su-liao-jie-ge-ling-yu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何快速了解一个领域&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.uanswer.me/?/question/508&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何写好研究生小论文？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这是我回顾一年多来的研究心得，写给那些初入研究生生涯人的，以求启迪后者，少走些弯路，但从方法论中来说有些弯路是不可逾越的并不会因你看了我的文章而改变。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resou
    
    </summary>
    
      <category term="随笔日记" scheme="http://blog.mindcont.com/categories/%E9%9A%8F%E7%AC%94%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>从视网膜到视皮层——视觉系统知多少</title>
    <link href="http://blog.mindcont.com/2017/02/20/visual-cortex/"/>
    <id>http://blog.mindcont.com/2017/02/20/visual-cortex/</id>
    <published>2017-02-20T02:25:35.000Z</published>
    <updated>2017-07-27T09:08:01.487Z</updated>
    
    <content type="html">&lt;p&gt;“诸位的眼睛，可以观赏你们喜爱的任何一幕戏。而我不知道，到底会有多少人在观看一幕戏、一场电影或任何一个场面时，意识到让你们可以享受到色彩、美景与动感的视觉是个奇迹，并对此抱有感激之情呢？”&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p align=&quot;right&quot;&gt;　——《假如给我三天光明》 [美国] 海伦•凯勒 &lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;如果说几十亿年前生命的诞生是地球上迄今为止最美的奇迹，那么生物体的神经系统堪称这个奇迹中最耀眼的巅峰之作。重量约为1.3千克，体积约为1200立方厘米，包含大约860亿个神经元（即神经细胞，是神经系统的结构与功能单位）以及同样数量的非神经元细胞（例如对神经元提供支撑和保护作用的胶质细胞，运输氧气和养料的血管组织等），人类大脑的复杂程度与奥妙之处被很多神经科学家认为并不亚于广袤无垠充满未知的浩瀚宇宙。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/visual-cortex/1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;center&gt;图1 大鼠脑部（左）和人脑（右）的结构示意图&lt;/center&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/visual-cortex/2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;center&gt;图2 大脑皮层左半球侧面视角的主要脑区和结构&lt;/center&gt;
&lt;p&gt;神经系统的功能，概括来说就是根据生物个体的需要以及外部环境的变化来控制或调节自身的行为以及内环境的稳态。这个过程抽象下来实际就是获取信息、处理信息以及输出信息。就像我们在使用计算机时，通过键盘鼠标将信息输入，在计算机进行相应的运算之后通过显示器来输出结果。我们生活在一个丰富多彩的世界里，而即便是从最基本的生存层面来看，每一个生物个体都需要感知周围环境并对外界的变化做出相应的反应。例如，野外生活的动物敏锐地发现猎物才能进行捕食，及时地察觉天敌才能躲避危险。&lt;/p&gt;
&lt;p&gt;外界环境信息的获取及处理主要由感觉系统来负责，包括视觉系统、听觉系统、嗅觉系统、味觉系统和触觉系统等。在生物体获取的所有外界信息中，视觉信息占有很大的比例，尤其是对于高等动物这一现象更为明显。对于一个正常人，视觉信息占全部感觉信息的70%以上。我们在生活中也很容易体会到视觉是多么重要的一种感觉。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/visual-cortex/3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;center&gt;图3 人体的主要感觉&lt;/center&gt;
&lt;p&gt;视觉系统在结构上主要包括眼睛（主要指视网膜）、外侧膝状体（简称外膝体）以及视皮层（包括初级视皮层以及纹外皮层）等，在功能上主要负责视觉信息的获取和处理进而形成视觉，同时也与其他脑区一同参与到一些和视觉成像无关的行为控制中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/visual-cortex/4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;center&gt;图4 视网膜神经节细胞投射的主要脑区和结构&lt;/center&gt;
&lt;p&gt;视觉系统是目前为止研究得最为广泛也最为深入的感觉系统之一。一方面是由于视觉的重要性，另一方面则是基于视觉系统本身的特点和研究优势。上文中提到过神经系统的基本功能就是获取、处理并输出信息。因此对神经系统进行研究的关键点之一就是精确了解和控制它获取的信息。而这在视觉系统的研究中是非常容易做到的：研究人员可根据不同的研究目的设计出各种静态及运动图形作为视觉刺激。这些由计算机在时间和空间上精确控制的视觉刺激使得研究人员在实验过程中可以完全了解实验动物视觉系统的输入信息是什么。&lt;/p&gt;
&lt;p&gt;视觉信息的获取过程主要发生在视网膜中，而对这些信息进一步的加工处理则发生在视网膜、外膝体、视皮层等。因此对视觉系统功能上的研究也主要集中在这些区域。电活动是神经系统最主要的信息载体，而视网膜中一部分细胞的任务就是将光信号转变为电信号（即光电转化）。这些电信号经过视网膜其他细胞的加工后向脑内的外膝体传递，之后传递给视皮层进行更进一步的信息处理与整合，进而形成视觉。为了便于理解，这个过程可以类比于日常生活中的写信寄信：在写信时信息由写信人的思想转换成文字，而信纸则是载体，这就如同视网膜中的光电转化过程；然后信件被投递至邮箱中，这就如同视觉信息从视网膜传递到外膝体；最后在邮局根据信件的不同类型以及目的地进行归类处理以便转运至收信人所在地，这就如同视皮层的功能。&lt;/p&gt;
&lt;p&gt;对于视觉系统的探索，长期以来大量的实验主要集中在对猫、猕猴等实验动物的视皮层以及外膝体的研究，尤其是对视皮层功能的了解。近些年来随着转基因技术在实验小鼠上的成熟推广，很多视觉研究领域的实验室都开始用小鼠开展相关的课题研究并取得了一系列的成果。人们对视网膜的研究同样起步很早。早期的研究材料大多是兔子、猫、蝾螈等实验动物的视网膜，类似地近些年越来越多的实验集中在对小鼠视网膜的研究上，也有关于猕猴和狨猴视网膜的研究报导。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;视网膜——视觉第一站&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们之所以能够看到外界的物体，是因为它们反射的光经过眼部的角膜、瞳孔、晶状体、玻璃体等最后聚焦到视网膜上，在这里发生了一次神奇的光电转换，即将光信号转换成电信号。因此，视网膜是接收视觉信息的第一站，对于高等动物来讲视网膜也是唯一的视觉信息来源。&lt;/p&gt;
&lt;p&gt;视网膜中的神经元，根据不同的形态和功能主要分为五大类：光感受器负责光电转换，双极神经元负责接收光感受器输出的信号并传递给下游的视网膜神经节细胞，而信息从光感受器到双极细胞以及从双极细胞到神经节细胞的传递过程分别受到水平细胞和无长突细胞的调节，视网膜神经节细胞则是视觉信息在视网膜中的最后一站，其对信息进行加工整合后将电信号向下一级脑区外膝体的中继细胞进行传递。神经元之间的信息传递主要通过化学突触来完成。简单来说，前一级神经元的电活动促使其分泌特定的化学物质（即神经递质）并作用在下一级神经元上进而引起下一级神经元电活动的变化。有的神经递质可以增强下一级神经元的电活动，有的神经递质则会抑制下一级神经元的电活动，比如双极神经元释放的神经递质可以增强神经节细胞的电活动，而无长突细胞释放的递质可以抑制神经节细胞的电活动。&lt;/p&gt;
&lt;p&gt;近年来发现的一些不完全依赖于光感受器而是自身就具备感光功能可以进行光电转换的神经节细胞越来越引起人们的注意和兴趣。目前的研究表明这些感光神经节细胞可能并不参与视觉成像而是与生物个体的昼夜节律的调节相关。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/visual-cortex/5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;center&gt;图5 视网膜结构及其神经元组成示意图&lt;/center&gt;
&lt;p&gt;上面这些只是最基本的情况，而视网膜中各种细胞之间的结构和功能上的连接实际上是极其复杂的，虽然这些连接遵循着一些基本的规律。首先，上面讲到的五种类型的神经元可以进一步的被分成多个亚型，不同的物种之间在亚型的具体数目上有些差异，但总的趋势是一致的。以小鼠的视网膜为例，目前的研究表明光感受器共有三个亚型，双极细胞则有十多个亚型，无长突细胞和神经节细胞各自更是可以分为二十个亚型以上。其次，每个神经元可以和多个神经元、多亚型神经元、多类型神经元形成突触连接，同时一些神经元具有释放多种化学递质的能力。另外，神经元之间除了化学突触连接之外还存在电突触等连接方式。这些情况综合起来使得视网膜神经环路呈现难以想象的复杂程度。一些研究视皮层功能的科研人员通常会假设视网膜只负责信息采集而不进行加工处理。这一点当然是有一定道理的:尤其是对于越高级的生物，主要的视觉信息处理过程都集中在视皮层；同时适当地忽略次要因素也是科学研究的方法之一。但是显然，作为这样一个复杂的系统，很难想象视网膜实际的功能会只局限于简单的像素采集。&lt;/p&gt;
&lt;p&gt;通过对视网膜功能的深入研究也证明了这一点。即便是在视觉信息的第一站，在光感受器进行光电转换将光信号转变为电信号之后，接下来一系列的神经元对这些信息进行了或多或少的加工处理，最终由神经节细胞向其他脑区传递。虽然视网膜是这么复杂的系统，但是也可以相对简单地来理解。一种简单的模型是说，光感受器将信息传递给十多个亚型的双极细胞，可以理解为十多条并行的通路，这十多条通路在对视觉信息进行平行传递时由水平细胞和无长突细胞进行加工处理，最终将视觉信息的不同要素（比如明暗变化，颜色，运动速度与方向等）抽提出来传递给不同亚型的神经节细胞。在某种程度上，不同亚型的神经节细胞具有的功能特征多样性反映了视网膜环路功能的复杂性。也是因为这个原因，同时考虑到临床意义，目前为止神经节细胞是视网膜中被研究得最多、了解得最深入的神经元，。而即便如此，我们对它们的了解也还是很不全面，甚至多数还停留在根据形态和功能对细胞进行分类的阶段。更不用说在形态和功能的一些最基本的方面才刚刚开始进行系统研究的双极神经元，以及其他种类的神经元。为了理解视网膜对视觉信息的加工处理过程与机制，对所有这些神经元进行系统而精细的研究都是必须的过程。而很多科学问题的研究和解决依赖于相关技术的进步。例如近些年来转基因小鼠在神经生物学领域的广泛应用，对科学研究起到了极大的促进作用。在视网膜的研究中，结合分子生物学制作的各种不同品系的转基因小鼠，使得实验人员可以针对某一种或者某几种细胞进行深入的功能研究，取得了很多的成果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/visual-cortex/6.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;center&gt;图6 视网膜平行通道信息处理模型示意图 &lt;/center&gt;
&lt;p&gt;&lt;strong&gt;外膝体——信息中转站&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;外膝体的英文是“lateral geniculate nucleus”，其中的“geniculate”就是“形状似膝”的意思。&lt;/p&gt;
&lt;p&gt;外膝体类似于视网膜，其中的神经元也是规则地分层排列，不同类型的神经元分布在不同分层，接收不同亚型的视网膜神经节细胞的输入，再将这些信息传输给初级视皮层。在视网膜、外膝体、视皮层以及其他很多脑区，细胞有序的分层排列是很普遍的结构特征。&lt;/p&gt;
&lt;p&gt;视网膜神经节细胞投射到外膝体各层是有规律可循的。外膝体每层都与对测视野相应的半个视网膜之间形成一定的视网膜投射图关系，即视网膜中相邻区域投射到外膝体时也是相邻或重叠的。这一点的重要性在于可以将空间位置信息在视觉信息传递的过程中得以保留。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/visual-cortex/7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;center&gt;图7 猕猴外侧膝状体在脑内位置以及切片结构示意图；下图为视网膜到外侧膝状体投射的空间位置拓扑关系&lt;/center&gt;
&lt;p&gt;传统的研究结果使人们倾向于认为，外膝体的中继细胞主要接收一个或极少数的几个视网膜神经节细胞的输入，并把这些视网膜神经节细胞的输入忠实地传递给下一级的视皮层神经元。因此外膝体被认为是视觉信息的中转站，对视觉信息的加工并不复杂。这个结论对于某些物种的某些外膝体神经元或许是适用的，但可能并不是全部。最新的一些研究结果暗示，在小鼠、猕猴等动物的外膝体中，单个神经元是可能接收多个视网膜神经节细胞的输入的。如果事实真的是这样，我们可能就需要重新考虑外膝体在视觉信息传递中的作用了。它是如何整合多个视网膜神经节细胞的输入的？它是仅仅负责分流传递视觉信息么？&lt;/p&gt;
&lt;p&gt;如果再考虑到外膝体中除了这些中继细胞外，还有大约25%的中间神经元，那么外膝体在功能上的复杂性可能就更高了。这些中间神经元一方面接收视网膜神经节细胞的指令，另一方面同时接收视皮层的反馈，作用则是调节其他神经元的电活动。这里就出现了另外一个科学家们在20世纪晚期才注意到的重要现象，视皮层接收外膝体中继细胞的信息之后，会反过来就外膝体进行负反馈的调节。就像一个系统，有兴奋就需要有抑制，有正反馈就需要有负反馈，这样才有可能使系统保持相对的稳定而不至于能量无限的增益直至衰竭崩溃。所以，像前文提到过的中间神经元可以抑制其他神经元的电活动、高级皮层可以对低级脑区进行负反馈调节，这些都是使得神经系统可以正常工作的重要功能。&lt;/p&gt;
&lt;p&gt;视网膜应用多条平行通路进行信息的传递和处理，同样的，视觉信息在脑内的处理过程也有类似的平行模式，即不同性质的视觉信息成分经不同的神经环路通道预处理，最终由不同性质的皮层细胞来分别进行分析处理与整合。目前的证据表明，中枢视觉信息的处理既是由低级向高级逐步升级的过程，又遵循着平行处理的原则。而外膝体作为视觉信息的中转站，在平行信息处理通道中起到了关键的作用，将不同细胞种类的平行通道、左右眼信息通道、空间频率通道、颜色信息处理通道、空间方位信息通道、运动方位信息通道等分别传送到专门处理这些信息的皮层神经元。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;视皮层——中央处理器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在神经系统这部“巅峰之作”中，大脑皮层的形成可称为“画龙点睛之笔”。进化过程中哺乳动物才开始出现的皮层结构，在学习记忆、语言思考以及知觉意识等高级功能方面发挥着至关重要的作用，且越是高等的生物，其皮层的结构和功能则越是发达。&lt;/p&gt;
&lt;p&gt;通常所说的视皮层主要包括初级视皮层（又称作纹状皮层或视觉第一区域，即V1）和纹外皮层（例如视觉第二、第三、第四、第五区域等，即V2、V3、V4、V5）。实际上，根据神经解剖学和生理学的研究，现在已经知道的猴皮层上至少有35个区域与视觉功能有关。视皮层和其他皮层区域一样，根据组织染色的结果以及神经元的种类与连接方式等，通常分为6层，有些层次的细胞接收皮层下区域或者其他皮层的输入，有些层次的细胞则负责向皮层下或者其他皮层输出信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/visual-cortex/8.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;center&gt;图8 外侧膝状体至初级视皮层各层的投射关系、初级视皮层内部的投射关系及初级视皮层向外侧膝状体、上丘及其他皮层区域的投射关系&lt;/center&gt;
&lt;p&gt;初级视皮层接收来自外侧膝状体的信息，然后通过V2和V3传递给V4、V5（即MT区）以及更高的脑区。有一种模型认为，整个的皮层信息处理过程由两条并行的通路完成：V1、V2、V4等组成的腹侧通路主要处理物体形状、颜色等信息；V1、V2、V5等组成的背侧通路主要负责对运动等信息的感知。当然，还有其他的模型同样来阐述视觉皮层的工作机制，它们各自都有一定的优缺点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/visual-cortex/9.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;center&gt;图9 视觉通路的平行处理模型。主要分为背侧通路和腹侧通路&lt;/center&gt;
&lt;p&gt;20世纪50年代末David Hubel(1926–2013)和Torsten Wiesel(1924–)首次开展了对视皮层细胞的研究，可以说他们的探索开创了视皮层结构和功能研究的新纪元。一方面，他们大量的基础工作为视觉神经生物学的后续发展奠定了基础，描述了视觉信息在皮层水平的处理机制的模型；另一方面，他们从发育的角度对皮层功能的可塑性等方面也进行了观察和阐述。因此，他们共同获得了1981年的诺贝尔生理学或医学奖（还有另外一位科学家Roger Sperry同时获得了当年的诺贝尔生理学或医学奖）。&lt;/p&gt;
&lt;p&gt;Hubel和Wiesel根据对视觉刺激的反应特征，在视皮层发现了多种神经元，分别叫做简单细胞、复杂细胞以及超复杂细胞。他们后续的研究以及后来大量科研工作者的实验对这些不同细胞的功能进行了深入的探索。他们的另外一项重要发现则是在视皮层中证实了之前由Vernon Mountcastle(1918–2015)根据其在躯体感觉皮层的研究提出的皮层功能柱的结构。他们的发现可以简单描述为许多具有相同特性的皮层细胞，在视皮层内按照一定的规则在空间上排列起来，这种按功能排列的皮层结构，即皮层的功能构筑，沿着皮层的不同层次呈现柱状分布，例如方向柱、方位柱、眼优势柱、空间频率柱以及颜色柱等。这一结构的形成对于皮层内感觉信息的处理具有重要的影响。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/visual-cortex/10.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;center&gt;图10 初级视皮层功能住模型示意图。X轴代表眼优势功能柱（即柱内细胞接收左眼或右眼输入），Y轴代表方位功能柱（即柱内细胞偏好相应颜色代表的朝向）&lt;/center&gt;
&lt;p&gt;上面这些仅仅是对视觉系统的非常基本的简单介绍，但从中我们不难发现一些在结构和功能方面的共同原则。同样地，除了那些对各个组织不同之处的继续研究之外，很多有待解决的问题也是共通的并且并不局限于视觉系统，比如对神经元在结构功能等的分类与研究、神经环路的构成、神经环路中信息的处理等，再考虑到发育、疾病以及高级功能的相关问题，基本上就涵盖了接下来可预见时期内的重要研究方向。&lt;/p&gt;
&lt;p&gt;到这里，关于视觉系统的介绍基本就结束了。那么让我们回到最原始的问题:我们到底是如何看到外面丰富多彩的世界的。上面的介绍可以让我们大致了解其中的过程，但是对于故事的开头和结尾却并没有涉及。视网膜进行光电转换，那么为什么就获得了外界的图像信息了呢？其实，光最主要的特征就是亮度和波长，亮度代表黑白，波长则决定了颜色。所以外界物体不同位置反射的光投射到视网膜上不同的细胞上时，每个细胞获得的信息是相应的光强变化和波长，而从群体的角度来看视网膜上所有的光感受器所获得的信息就构成了视野中的明暗和颜色。至于故事的结尾，视皮层对视觉信息进行加工处理与整合后如何形成视知觉，对于这个问题的认识目前为止还比较初步，暂时可能并没有确切的答案。我们目前对于视觉系统、神经系统、生物系统的认识与曾经相比已经获得巨大的飞跃，但是还远不足以回答所有的问题，甚至于若要把我们已经了解的内容说是“冰山一角”也并不知道这样讲是否算作言过其实。但是，这也正是所有这一切的魅力所在，小至分子细胞，大至自然宇宙，好奇心通过科学的力量不断地获得满足，而这个过程又为我们不断地带来愉悦。&lt;/p&gt;
&lt;h2 id=&quot;出处&quot;&gt;出处&lt;/h2&gt;
&lt;p&gt;“路漫漫其修远兮，吾将上下而求索。”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;:&lt;a href=&quot;http://www.sibs.cas.cn/kp/kptw/201606/t20160620_4623663.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;王博 中国科学院上海生命科学研究院神经科学研究所&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;原文链接&lt;/strong&gt;： &lt;a href=&quot;http://www.sibs.cas.cn/kp/kptw/201606/t20160620_4623663.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.sibs.cas.cn/kp/kptw/201606/t20160620_4623663.html&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;“诸位的眼睛，可以观赏你们喜爱的任何一幕戏。而我不知道，到底会有多少人在观看一幕戏、一场电影或任何一个场面时，意识到让你们可以享受到色彩、美景与动感的视觉是个奇迹，并对此抱有感激之情呢？”&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p align=&quot;right&quot;&gt;　——《假如给我三天光明》 
    
    </summary>
    
    
      <category term="转载" scheme="http://blog.mindcont.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>2016 , 我的年终总结</title>
    <link href="http://blog.mindcont.com/2017/02/16/my-review-2016/"/>
    <id>http://blog.mindcont.com/2017/02/16/my-review-2016/</id>
    <published>2017-02-16T08:27:20.000Z</published>
    <updated>2017-07-27T09:08:01.485Z</updated>
    
    <content type="html">&lt;p&gt;转眼间，24岁我的本命年如风卷云涌般飘了过去，总感觉日子过得飞快，一不留神一年就过去了，也才想着趁现在做做年终总结，回顾一下自己的2016，并给2017的自己❤️&lt;strong&gt;订个小目标&lt;/strong&gt;❤️ 。&lt;/p&gt;
&lt;h2 id=&quot;比赛篇💪&quot;&gt;比赛篇💪&lt;/h2&gt;
&lt;h3 id=&quot;解魔方&quot;&gt;解魔方&lt;/h3&gt;
&lt;p&gt;2016年寒假刚过🐒，我就早早地来了学校，为年前和兵哥和恒参加的一个比赛做最后的工作，并争取去珠海参加总决赛。当时做的是一个解三阶魔方的机器人，各自分工，队长兵哥做的最多，从机械结构的设计，到蓝牙模块通信，还有解算算法的优化，我和恒哥则打打下手，总算在比赛截止日提交了作品。&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/20160306.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
比赛方又要微信组织投票（朋友圈里小到幼儿园小朋友演出，大到省市优秀青年评选都喜欢微信投票😂）计入所谓的大众评分👽。&lt;/p&gt;
&lt;p&gt;4月初，我们如愿以偿的✈️广州，兵哥带我去了华南理工见到了景海，我们围着华工转了转，传统的建筑和现代的教学楼，湖水给人的感觉很有气息，来来往往的学生和周围的环境很协调。之后我们转车到了珠海，安排入住，比赛展示和答辩，一切顺乎自然。比赛后，主办方全志科技的副总裁带我们参观了公司大楼，也给我们分享了他的创业历程，公司的定位和产品上下游链条以及公司未来的思考方向等等，总得感觉深圳和珠海的电子行业有实力也比其他地区有得天独厚的优势。&lt;/p&gt;
&lt;p&gt;这次珠海行，对我的启发很大，无论从比赛本身还是眼界的扩展😂&lt;/p&gt;
&lt;h3 id=&quot;bot计算机视觉&quot;&gt;BOT计算机视觉&lt;/h3&gt;
&lt;p&gt;9月份，实验室的小涛告诉我BOT 有个计算机视觉的比赛，初赛是图片分类，让计算机预测新图片这个是猫还是狗，是选手利用卷积神经网络配合比赛主办方提供的数据集进行训练和预测，正好我们可以练练手。在余下的一个月时间里，我们就开始了不停训练、预测、提交的流程。那时候我们使用的NVIDIA K2200 4g 的显卡，用caffe 来做训练。印象中那一个月就是等待训练结果，然后下载新的预测集进行预测，提交和等待排名更新。最好的一次在12种分类中我们达到80%几，然后最高的已经到97%识别正确率了，结果显而易见我们没有进入复赛。&lt;/p&gt;
&lt;p&gt;至于收获嘛，大体就是尝试将自己对卷积网络的理解，caffe平台的搭建，数据集的处理和网络构建和训练，最后部署预测，整个流程做了一遍。之后就是除比赛之外，我搞科研的故事了或者说我的研究方向的确定(听起来好屌的样子😆)。&lt;/p&gt;
&lt;h2 id=&quot;科研篇👊&quot;&gt;科研篇👊&lt;/h2&gt;
&lt;p&gt;比赛回来，转眼到了5月份，自己就开始选定研究方向了。一开始我打算利用 Kinect识别人体动作，然后和Nao robot 进行人机交互。嗯，就是打算做下面这种效果，&lt;strong&gt;机器人和人做同样的动作&lt;/strong&gt;。蒽，对，我们实验室有Nao robot。&lt;/p&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/kinect-nao.jpg&quot; width=&quot;720&quot;&gt;
&lt;p&gt;大体的思路是：kinect 输出人体关节点，计算机将人体的动作转化为Nao robot 各个关节电机参数，利用nao robot提供的API 驱动它。&lt;/p&gt;
&lt;p&gt;之后我就顺着这个思路开始，先了解微软官方提供的Kinect v2 sdk 到他们的&lt;a href=&quot;https://mva.microsoft.com/zh-cn/training-courses/-kinect-for-windows-v2--8743?l=15BQDzV1_4504984382&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;讲解视频&lt;/a&gt;，然后又搜相关的开源程序和代码，慢慢得就到了&lt;a href=&quot;https://structure.io/openni&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenNI&lt;/a&gt; 和 &lt;a href=&quot;https://openkinect.org/wiki/Main_Page/zh-hans&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;openKinect&lt;/a&gt; ，由于是 kinect v2 版本，所以当时颇费周章的弄，逐渐弄到了ubuntu平台下。下面是使用 ubuntu 下配合&lt;a href=&quot;https://github.com/OpenKinect/libfreenect2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;libfreenect2&lt;/a&gt;成功读取到了信息。💩&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/openkinect_v2_ubuntu.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;后面越做发现自己的编程能力不够，尤其涉及linux下 c和 c++ 相互调用还有视频的缩放和处理部分帧的问题，越往后越多的问题发现。看来一个人做不下去了，然后转变思路，就想基于depth image 做一些东西，后面就搜到了 &lt;a href=&quot;http://vision.princeton.edu/people/shurans/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Shuran Song&lt;/a&gt; 的&lt;a href=&quot;http://videolectures.net/eccv2014_song_depth_images/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;室内场景下的3D 目标检测&lt;/a&gt;。根据她开放的数据集和代码，运行了demo如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/reproduce-shuransong-results.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;还是没思路，7月份的时候，慢慢得就走向了 &lt;a href=&quot;http://cs231n.stanford.edu/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;卷积人工神经网络&lt;/a&gt; 和 &lt;a href=&quot;http://blog.mindcont.com/2017/02/15/caffe-guide-book/&quot;&gt;Caffe: a fast open framework for deep learning&lt;/a&gt;，就是用深度学习的方法去解决视觉方面的一些问题。先是安装 caffe,然后读了目标检测方面一些论文，动手实践了&lt;a href=&quot;https://github.com/ShaoqingRen/faster_rcnn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;faster-rcnn&lt;/a&gt;、&lt;a href=&quot;http://pjreddie.com/darknet/yolo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YoLo&lt;/a&gt;、&lt;a href=&quot;https://github.com/weiliu89/caffe/tree/ssd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SSD&lt;/a&gt;等。下面是faster-rcnn 当时运行的demo&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/faster-rcnn.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;9月份-10月份 参加了上海BOT大数据应用大赛是国内首个专业化AI大赛，“计算机视觉” 类的题目，见上面第二个比赛。11月初就开始弄开题报告，当时定的题目是&lt;strong&gt;复杂场景下的交通信号灯识别研究&lt;/strong&gt;。思路是：近年来卷积神经网络方面一些新的网络模型和传统的图形学方法模板匹配和色域转换相结合来解决这个问题，其中清华大学&lt;a href=&quot;http://cg.cs.tsinghua.edu.cn/traffic-sign/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;朱哲&lt;/a&gt;博士的论文&lt;a href=&quot;http://cg.cs.tsinghua.edu.cn/traffic-sign/0682.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Traffic-Sign Detection and Classification in the Wild&lt;/a&gt;给了我很大的启发，多次向他发邮件，都给予了回答和解释在此向他表示感谢。&lt;/p&gt;
&lt;p&gt;下面是两个当时答辩做的PPT&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/tlr-research-status.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;拟研究思路，可能有理论问题，不要被我带入坑😜&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/idea-of-traffic-signal-recognition.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;答辩完,我们组组长zhou老大说这个问题和实验室大方向不符合😂,让我换到人体姿态估计上,类似下面这种识别人体姿势的效果，于是我就开始了这方面的学习🐶。&lt;/p&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/resources/amdo2012andriluka.jpg&quot; align=&quot;right&quot; width=&quot;720&quot;&gt;
&lt;p align=&quot;right&quot;&gt;图片来源 Brown University Computer Science&lt;/p&gt;
&lt;h2 id=&quot;小目标🐤🐤🐤&quot;&gt;小目标🐤🐤🐤&lt;/h2&gt;
&lt;p&gt;2017 年的钟声又响啦，和全国人民一样撸起袖子，加油干。先立个flag吧，先定它个小目标。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[x] 弄出实验结果🐸&lt;/li&gt;
&lt;li&gt;[x] 发表文章，完成毕业要求🐧&lt;/li&gt;
&lt;li&gt;[x] 早睡，早起，要锻炼🐜&lt;/li&gt;
&lt;li&gt;[x] 补充短板，找实习🐺&lt;/li&gt;
&lt;li&gt;[x] 提高博客质量🐋&lt;/li&gt;
&lt;li&gt;[x] 维护主网站，找准特色，极客范🌴&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;现在是2017年2月17号 15点20分，坐在保守估计7万块电脑旁写下了这篇文章，马上就会更新上去了&lt;/strong&gt;😃&lt;/p&gt;
&lt;h2 id=&quot;引用&quot;&gt;引用&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.webpagefx.com/tools/emoji-cheat-sheet/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EMOJI CHEAT SHEET&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者:&lt;a href=&quot;https://github.com/mindcont&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mindcont&lt;/a&gt;  2017-02-17 第一次编辑&lt;br&gt;
&lt;strong&gt;转载注明出处 &lt;a href=&quot;http://blog.mindcont.com/2017/02/16/my-review-2016/&quot;&gt;http://blog.mindcont.com/2017/02/16/my-review-2016/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;转眼间，24岁我的本命年如风卷云涌般飘了过去，总感觉日子过得飞快，一不留神一年就过去了，也才想着趁现在做做年终总结，回顾一下自己的2016，并给2017的自己❤️&lt;strong&gt;订个小目标&lt;/strong&gt;❤️ 。&lt;/p&gt;
&lt;h2 id=&quot;比赛篇💪&quot;&gt;比赛篇💪&lt;/h2&gt;
    
    </summary>
    
      <category term="随笔日记" scheme="http://blog.mindcont.com/categories/%E9%9A%8F%E7%AC%94%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>值得传播的思想</title>
    <link href="http://blog.mindcont.com/2017/02/15/ideas-worth-spreading/"/>
    <id>http://blog.mindcont.com/2017/02/15/ideas-worth-spreading/</id>
    <published>2017-02-15T08:50:13.000Z</published>
    <updated>2017-02-16T02:14:04.780Z</updated>
    
    <content type="html">&lt;p&gt;倾听来自全球各行业人的所思所感，从科学家、企业家、政治家、艺术家，抑或是自由职业者，公益人士的演讲，仿佛漫天璀璨的繁星照亮我们的世界。认识到不同种族，不同国界、不同宗教以及在它们交织之下人们的生活和误解，学会包容它们。一手握着历史，一手看着现在，周天罗宇就在我们的思想里。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;https://s3-eu-west-1.amazonaws.com/images.fespa.com/ted-Luther-King.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;ted&quot;&gt;TED&lt;/h2&gt;
&lt;p&gt;TED（指Technology, Entertainment 和Design的英文缩写）是全球最大，最具影响力的演讲平台。TED讲师是来自全球各行业的领军人物，包括科学家，企业家，政治家，艺术家等。&lt;a href=&quot;https://www.ted.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.ted.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;伟大演讲的奥秘 | TED总教头Chris Anderson&lt;br&gt;
&lt;object width=&quot;640&quot; height=&quot;400&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_MBLAG3QFA_MBLAGECJN-vimg1_ws_126_net//image/snapshot_movie/2016/5/J/O/MBLAGECJO-1423031805654.swf?isTEDPlay=1&quot;&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot;&gt;&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;&gt;&lt;embed src=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_MBLAG3QFA_MBLAGECJN-vimg1_ws_126_net//image/snapshot_movie/2016/5/J/O/MBLAGECJO-1423031805654.swf?isTEDPlay=1&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;360&quot; allowfullscreen=&quot;true&quot; wmode=&quot;transparent&quot; allowscriptaccess=&quot;always&quot;&gt;&lt;/object&gt;&lt;/p&gt;
&lt;p&gt;用超级计算机构造大脑&lt;br&gt;
&lt;object width=&quot;640&quot; height=&quot;400&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_M7A12OCLQ_M7A132PK2-vimg1_ws_126_net//image/snapshot_movie/2013/11/F/V/M9DP571FV-1423031805654.swf?isTEDPlay=1&quot;&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot;&gt;&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;&gt;&lt;embed src=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_M7A12OCLQ_M7A132PK2-vimg1_ws_126_net//image/snapshot_movie/2013/11/F/V/M9DP571FV-1423031805654.swf?isTEDPlay=1&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;360&quot; allowfullscreen=&quot;true&quot; wmode=&quot;transparent&quot; allowscriptaccess=&quot;always&quot;&gt;&lt;/object&gt;&lt;/p&gt;
&lt;p&gt;李飞飞：如何教计算机理解图片&lt;br&gt;
&lt;object width=&quot;640&quot; height=&quot;400&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_MAKN9A24M_MAKN9QAQR-vimg1_ws_126_net//image/snapshot_movie/2015/3/Q/Q/MAKN9Q1QQ-1423031805654.swf?isTEDPlay=1&quot;&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot;&gt;&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;&gt;&lt;embed src=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_MAKN9A24M_MAKN9QAQR-vimg1_ws_126_net//image/snapshot_movie/2015/3/Q/Q/MAKN9Q1QQ-1423031805654.swf?isTEDPlay=1&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;360&quot; allowfullscreen=&quot;true&quot; wmode=&quot;transparent&quot; allowscriptaccess=&quot;always&quot;&gt;&lt;/object&gt;&lt;/p&gt;
&lt;p&gt;Linux 操作系统之父 | Linus Torvalds&lt;br&gt;
&lt;object width=&quot;640&quot; height=&quot;400&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_MBPNHJU6K_MBR358639-vimg1_ws_126_net//image/snapshot_movie/2016/7/3/A/MBR35863A-1423031805654.swf?isTEDPlay=1&quot;&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot;&gt;&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;&gt;&lt;embed src=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_MBPNHJU6K_MBR358639-vimg1_ws_126_net//image/snapshot_movie/2016/7/3/A/MBR35863A-1423031805654.swf?isTEDPlay=1&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;480&quot; allowfullscreen=&quot;true&quot; wmode=&quot;transparent&quot; allowscriptaccess=&quot;always&quot;&gt;&lt;/object&gt;&lt;/p&gt;
&lt;p&gt;谷歌创始人展示谷歌眼镜&lt;br&gt;
&lt;object width=&quot;640&quot; height=&quot;400&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_M8VU1HC4K_M8VU1OJSV-vimg1_ws_126_net//image/snapshot_movie/2013/6/Q/A/M8VU1OFQA-1423031805654.swf?isTEDPlay=1&quot;&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot;&gt;&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;&gt;&lt;embed src=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_M8VU1HC4K_M8VU1OJSV-vimg1_ws_126_net//image/snapshot_movie/2013/6/Q/A/M8VU1OFQA-1423031805654.swf?isTEDPlay=1&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;360&quot; allowfullscreen=&quot;true&quot; wmode=&quot;transparent&quot; allowscriptaccess=&quot;always&quot;&gt;&lt;/object&gt;&lt;/p&gt;
&lt;p&gt;用每一个灯泡传输无线信号&lt;br&gt;
&lt;object width=&quot;640&quot; height=&quot;400&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_M84Q05PLI_M84Q08V5P-vimg1_ws_126_net//image/snapshot_movie/2013/11/A/G/M9DOS4GAG-1423031805654.swf?isTEDPlay=1&quot;&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot;&gt;&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;&gt;&lt;embed src=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_M84Q05PLI_M84Q08V5P-vimg1_ws_126_net//image/snapshot_movie/2013/11/A/G/M9DOS4GAG-1423031805654.swf?isTEDPlay=1&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;360&quot; allowfullscreen=&quot;true&quot; wmode=&quot;transparent&quot; allowscriptaccess=&quot;always&quot;&gt;&lt;/object&gt;&lt;/p&gt;
&lt;p&gt;巧妙地观察人类&lt;br&gt;
&lt;object width=&quot;640&quot; height=&quot;400&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_M7929LSTQ_M792A9M8H-vimg1_ws_126_net//image/snapshot_movie/2013/11/R/Q/M9DP53ORQ-1423031805654.swf?isTEDPlay=1&quot;&gt;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot;&gt;&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;&gt;&lt;embed src=&quot;http://swf.ws.126.net/openplayer/v02/-0-2_M7929LSTQ_M792A9M8H-vimg1_ws_126_net//image/snapshot_movie/2013/11/R/Q/M9DP53ORQ-1423031805654.swf?isTEDPlay=1&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;360&quot; allowfullscreen=&quot;true&quot; wmode=&quot;transparent&quot; allowscriptaccess=&quot;always&quot;&gt;&lt;/object&gt;&lt;/p&gt;
&lt;h2 id=&quot;一席-人文-科技-白日梦&quot;&gt;一席｜人文.科技.白日梦&lt;/h2&gt;
&lt;p&gt;听君一席话，胜读十年书。（Get Inspired） 一席鼓励分享见解、体验和对未来的想象，做有价值的传播。&lt;br&gt;
&lt;a href=&quot;http://www.yixi.tv&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.yixi.tv&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;胡玮炜 | &amp;quot;膜拜&amp;quot;单车&lt;br&gt;
&lt;embed src=&quot;http://player.youku.com/player.php/sid/XMTg3NjMwMjkxMg==/v.swf&quot; allowfullscreen=&quot;true&quot; quality=&quot;high&quot; width=&quot;640&quot; height=&quot;400&quot; align=&quot;middle&quot; allowscriptaccess=&quot;always&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/p&gt;
&lt;p&gt;宁博 | 未来农业会是什么样&lt;br&gt;
&lt;embed src=&quot;http://player.youku.com/player.php/sid/XMTg1MjAyNTA1Ng==/v.swf&quot; allowfullscreen=&quot;true&quot; quality=&quot;high&quot; width=&quot;640&quot; height=&quot;400&quot; align=&quot;middle&quot; allowscriptaccess=&quot;always&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/p&gt;
&lt;p&gt;青山周平 | 未来的家&lt;br&gt;
&lt;embed src=&quot;http://player.youku.com/player.php/sid/XMTczMDkzOTU5Mg==/v.swf&quot; allowfullscreen=&quot;true&quot; quality=&quot;high&quot; width=&quot;640&quot; height=&quot;400&quot; align=&quot;middle&quot; allowscriptaccess=&quot;always&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/p&gt;
&lt;p&gt;肖全 | 我们这一代&lt;br&gt;
&lt;embed src=&quot;http://player.youku.com/player.php/sid/XMTYxMTIyNTA0MA==/v.swf&quot; allowfullscreen=&quot;true&quot; quality=&quot;high&quot; width=&quot;640&quot; height=&quot;400&quot; align=&quot;middle&quot; allowscriptaccess=&quot;always&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;一刻talks&quot;&gt;「一刻talks」&lt;/h2&gt;
&lt;p&gt;「一刻talks」正在邀请世界上的思想领袖与实干家来分享他们的事业、故事创意和想法，这些来自世界各地不同领域的专业人才和深藏不露的绝妙素人，将带来极具前瞻性的话题，把思想精华浓缩在15分钟，讲述知识与创意的精髓，碰撞思想的火花。目前已累积1500则以上的精彩演讲，主题包罗万象，科学家、艺术家、哲学家、探险家、心理学家、商业领袖等各路有想法的人纷纷登台，观点“响亮”，要给世界一点言色！&lt;br&gt;
&lt;a href=&quot;http://www.yiketalks.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.yiketalks.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;剪线钳&lt;br&gt;
&lt;object width=&quot;1190&quot; height=&quot;513&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;//share.vrs.sohu.com/my/v.swf&amp;topBar=1&amp;id=87364082&amp;autoplay=false&amp;from=page&quot;&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot;&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot;&gt;&lt;param name=&quot;wmode&quot; value=&quot;Transparent&quot;&gt;&lt;embed width=&quot;640&quot; height=&quot;400&quot; wmode=&quot;Transparent&quot; allowfullscreen=&quot;true&quot; allowscriptaccess=&quot;always&quot; quality=&quot;high&quot; src=&quot;//share.vrs.sohu.com/my/v.swf&amp;topBar=1&amp;id=87364082&amp;autoplay=false&amp;from=page&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/object&gt;&lt;/p&gt;
&lt;p&gt;能解开一切魔方的简单诀窍&lt;br&gt;
&lt;object width=&quot;1190&quot; height=&quot;513&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;//share.vrs.sohu.com/my/v.swf&amp;topBar=1&amp;id=87421281&amp;autoplay=false&amp;from=page&quot;&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot;&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot;&gt;&lt;param name=&quot;wmode&quot; value=&quot;Transparent&quot;&gt;&lt;embed width=&quot;640&quot; height=&quot;400&quot; wmode=&quot;Transparent&quot; allowfullscreen=&quot;true&quot; allowscriptaccess=&quot;always&quot; quality=&quot;high&quot; src=&quot;//share.vrs.sohu.com/my/v.swf&amp;topBar=1&amp;id=87421281&amp;autoplay=false&amp;from=page&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/object&gt;&lt;/p&gt;
&lt;h2 id=&quot;感谢&quot;&gt;感谢&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;www.ted.com&quot;&gt;TED: Ideas worth spreading&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;open.163.com&quot;&gt;网易公开课 | 传播属于全人类的知识和智慧&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;www.yixi.tv&quot;&gt;一席｜人文.科技.白日梦&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.yiketalks.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一刻talks 思想好声音·全球创见者分享平台&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;倾听来自全球各行业人的所思所感，从科学家、企业家、政治家、艺术家，抑或是自由职业者，公益人士的演讲，仿佛漫天璀璨的繁星照亮我们的世界。认识到不同种族，不同国界、不同宗教以及在它们交织之下人们的生活和误解，学会包容它们。一手握着历史，一手看着现在，周天罗宇就在我们的思想里。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔日记" scheme="http://blog.mindcont.com/categories/%E9%9A%8F%E7%AC%94%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="TED" scheme="http://blog.mindcont.com/tags/TED/"/>
    
  </entry>
  
  <entry>
    <title>Caffe 入门指南</title>
    <link href="http://blog.mindcont.com/2017/02/15/caffe-guide-book/"/>
    <id>http://blog.mindcont.com/2017/02/15/caffe-guide-book/</id>
    <published>2017-02-15T08:22:46.000Z</published>
    <updated>2017-07-27T11:47:35.153Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://caffe.berkeleyvision.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caffe&lt;/a&gt;是一个清晰而高效的深度学习的框架，其作者是博士毕业于UC Berkeley的&lt;a href=&quot;http://daggerfs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;贾扬清&lt;/a&gt;，目前在Google工作。&lt;br&gt;
&lt;a href=&quot;http://caffe.berkeleyvision.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caffe&lt;/a&gt;是纯粹的C++/CUDA架构，支持命令行、Python和MATLAB接口；可以在CPU和GPU54直接无缝切换：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Caffe::set_mode(Caffe::GPU);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Caffe的优势&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上手快：模型与相应优化都是以文本形式而非代码形式给出。&lt;/li&gt;
&lt;li&gt;Caffe给出了模型的定义、最优化设置以及预训练的权重，方便立即上手。&lt;/li&gt;
&lt;li&gt;速度快：能够运行最棒的模型与海量的数据。&lt;/li&gt;
&lt;li&gt;Caffe与cuDNN结合使用，测试AlexNet模型，在K40上处理每张图片只需要1.17ms.&lt;/li&gt;
&lt;li&gt;模块化：方便扩展到新的任务和设置上。&lt;/li&gt;
&lt;li&gt;可以使用Caffe提供的各层类型来定义自己的模型。&lt;/li&gt;
&lt;li&gt;开放性：公开的代码和参考模型用于再现。&lt;/li&gt;
&lt;li&gt;社区好：可以通过BSD-2参与开发与讨论。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://caffe2.ai/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caffe2&lt;/a&gt; 一个新的轻量级，模块化和可扩展的深度学习框架，由 NVIDIA和Facebook团队重新打造并在&lt;a href=&quot;https://github.com/caffe2/caffe2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;上开源，Caffe2允许开发人员和研究人员创建大规模分布式训练场景和构建边缘设备机器学习应用。&lt;/p&gt;
&lt;h2 id=&quot;入门篇&quot;&gt;入门篇&lt;/h2&gt;
&lt;p&gt;前期入门主要根据自己的机器（nvidia显卡）完成Caffe 的安装，运行 &lt;a href=&quot;http://caffe.berkeleyvision.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caffe官网&lt;/a&gt;和  &lt;a href=&quot;https://github.com/bvlc/caffe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt; repo 上的&lt;strong&gt;例程&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;安装&quot;&gt;安装&lt;/h3&gt;
&lt;p&gt;安装请仔细阅读下面的中文教程，&lt;strong&gt;编译中遇到的错误&lt;/strong&gt;请在 github issues用英文仔细查看错误原因。而且大部分都是&lt;strong&gt;环境依赖，路径错误&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.mindcont.com/2016/07/20/ubuntu1404-caffe-r3-cuda7-5-mkl/&quot;&gt;Ubuntu 14.04 64bit + Caffe rc3 + CUDA 7.5 + Intel MKL 配置说明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://caffe.berkeleyvision.org/installation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bvlc/caffe/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;例程&quot;&gt;例程&lt;/h3&gt;
&lt;p&gt;配合官方文档 例如mnist 手写体识别，其文档在 $CAFFE_ROOT/examples/mnist/Readme.md ，运行并理解其流程。尤其以下面几个最为重要，当细细品味。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;例程名&lt;/th&gt;
&lt;th&gt;实现&lt;/th&gt;
&lt;th&gt;学习意义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;LeNet MNIST&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://blog.mindcont.com/2017/04/25/how-to-do-mnist-demo/&quot;&gt;手写数字识别&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;理解模型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CaffeNet C++ Classification example&lt;/td&gt;
&lt;td&gt;c++ 代码实现图片分类&lt;/td&gt;
&lt;td&gt;理解如何用c++ 调用caffe&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Fine-tuning for style recognition&lt;/td&gt;
&lt;td&gt;根据自己数据集微调模型&lt;/td&gt;
&lt;td&gt;迁移学习，构建自己数据集，微调模型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Web demo&lt;/td&gt;
&lt;td&gt;基于web 网页的图片分类&lt;/td&gt;
&lt;td&gt;如何构建 client /server&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;入门书籍&quot;&gt;入门书籍&lt;/h3&gt;
&lt;p&gt;如果链接失效，可以访问 &lt;a href=&quot;https://cloud.mindcont.com/d/34d8cdb853a54a2d90d3/?p=/ai/caffe%E5%85%A5%E9%97%A8&amp;amp;mode=list&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://share.mindcont.com&lt;/a&gt; 获取。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pan.baidu.com/s/1c0Ri2Py#path=%252FCaffeCN%25E7%25BF%25BB%25E8%25AF%2591&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caffe 官方教程中译本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://book.douban.com/subject/26825082/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深度学习21天实战Caffe-赵永科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cloud.mindcont.com/d/34d8cdb853a54a2d90d3/files/?p=/ai/caffe%E5%85%A5%E9%97%A8/caffe%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;薛开宇-caffe学习笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pan.baidu.com/s/1hq8IoHe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;贾扬清-DIY Deep Learning for Vision-  a Hands-On Tutorial with Caffe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;答疑社区&quot;&gt;答疑社区&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://caffecn.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caffe 中文社区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;&quot;&gt;Caffe 深度学习交流2群 534492004&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gitter.im/BVLC/caffe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caffe 讨论组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://valser.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Valse 视觉与学习青年研讨会&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;&quot;&gt;VALSE-D群 481109645&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://valser.org/article-86-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;历次VALSE Webinar活动的录像&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;进阶篇&quot;&gt;进阶篇&lt;/h2&gt;
&lt;p&gt;这里推荐一个很好的实践入门教程，使用python 和 caffe 进行了一个完整的流程，内容详实，可谓理论与实践兼备，不可多得。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://adilmoujahid.com/posts/2016/06/introduction-deep-learning-python-caffe/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;A Practical Introduction to Deep Learning with Caffe and Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;应用&quot;&gt;应用&lt;/h3&gt;
&lt;h4 id=&quot;视觉方向&quot;&gt;视觉方向&lt;/h4&gt;
&lt;p&gt;视觉方面大致有针对图像的分类、分割(Segmentation)、理解(caption)，超分辨，去噪去模糊，以及针对物体的目标识别、检测和追踪。还有就是对视频信息进行同样的工作追求实时和可用。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;图片分类&lt;/th&gt;
&lt;th&gt;–&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/terrychenism/ResNeXt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ResNet-v3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/terrychenism/ResNeXt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/terrychenism/ResNeXt&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/liuzhuang13/DenseNet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;denseNet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/liuzhuang13/DenseNet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/liuzhuang13/DenseNet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/KaimingHe/deep-residual-networks&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep Residual Networks&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/KaimingHe/deep-residual-networks&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/KaimingHe/deep-residual-networks&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/flukeskywalker/highway-networks&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Highway Networks&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/flukeskywalker/highway-networks&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/flukeskywalker/highway-networks&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/songhan/Deep-Compression-AlexNet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep-Compression-AlexNet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/songhan/Deep-Compression-AlexNet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/songhan/Deep-Compression-AlexNet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/DeepScale/SqueezeNet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SqueezeNet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/DeepScale/SqueezeNet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/DeepScale/SqueezeNet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/lim0606/caffe-googlenet-bn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GoogleNet-V2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/lim0606/caffe-googlenet-bn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/lim0606/caffe-googlenet-bn&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;目标检测&lt;/th&gt;
&lt;th&gt;–&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/sanghoon/pva-faster-rcnn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PVANet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/sanghoon/pva-faster-rcnn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/sanghoon/pva-faster-rcnn&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/Orpine/py-R-FCN&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;R-FCN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/Orpine/py-R-FCN&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Orpine/py-R-FCN&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/weiliu89/caffe/tree/ssd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SSD: Single Shot MultiBox Detector&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/weiliu89/caffe/tree/ssd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/weiliu89/caffe/tree/ssd&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/xingwangsfu/caffe-yolo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YOLO in caffe&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/xingwangsfu/caffe-yolo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/xingwangsfu/caffe-yolo&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/weichengkuo/DeepBox&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DeepBox&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/weichengkuo/DeepBox&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/weichengkuo/DeepBox&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/rbgirshick/py-faster-rcnn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Faster R-CNN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/rbgirshick/py-faster-rcnn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/rbgirshick/py-faster-rcnn&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/rbgirshick/fast-rcnn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fast R-CNN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/rbgirshick/fast-rcnn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/rbgirshick/fast-rcnn&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;自然语言处理&quot;&gt;自然语言处理&lt;/h4&gt;
&lt;p&gt;将机器学习用于语音文本，词汇方面的工作，典型应用机器翻译。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Russell91/nlpcaffe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NLP-Caffe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://city.shaform.com/blog/2015/06/06/caffe-sentiment-analysis.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sentiment Analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;语音&quot;&gt;语音&lt;/h4&gt;
&lt;p&gt;这里是指语言片段的识别，拼接，以及仿声合成，典型语音识别，也就是科大讯飞所作的工作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pannous/caffe-speech-recognition&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Speech Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kaldi-asr/kaldi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kaldi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.xfyun.cn/index.php/default/doccenter/doccenterInner?itemTitle=anN3ZA==&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;技术文档-讯飞&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多访问 &lt;a href=&quot;https://github.com/MichaelXin/Awesome-Caffe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MichaelXin - Awesome-Caffe&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;cs231n-课程&quot;&gt;CS231N 课程&lt;/h3&gt;
&lt;p&gt;有了前面的初步了解，认识了什么是深度学习，什么是caffe，怎么使用caffe，以及caffe能够干什么，想要进一步的学习还要了解卷积神经网络的前世今生。我推荐斯坦福大学的CS231N 课程作为卷积神经网络的系统学习。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://cs231n.stanford.edu/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CS231n: Convolutional Neural Networks for Visual Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pan.baidu.com/s/1pKsTivp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;视频和课件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cs231n.stanford.edu/project.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;课程资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/dinosoft/article/details/51813615&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深度学习斯坦福cs231n 课程笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/intelligentunit?topic=%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%88Deep%20Learning%EF%BC%89&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;智能单元-深度学习-cs231n 中文笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://deeplearning.stanford.edu/wiki/index.php/UFLDL%E6%95%99%E7%A8%8B&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UFLDL教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://openclassroom.stanford.edu/MainFolder/CoursePage.php?course=MachineLearning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;数据集&quot;&gt;数据集&lt;/h3&gt;
&lt;p&gt;机器学习有人工标注数据的监督学习也好，没有人工标注数据的无监督学习以及介于两者之间的半监督学习也好，归根结底离不开大量的数据，基于各种各样场景下的问题性质，大家构建了相应的人工标注的数据集，一部分用于网络训练，让机器进行学习，另一部分用来做测试评价学习效果的好坏。&lt;/p&gt;
&lt;p&gt;鉴于各式各样的数据集种类繁多，此部分单独列为一个页面，请参考下面的链接。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.mindcont.com/2016/09/13/Deep-learning-dataset/&quot;&gt;深度学习：数据集篇&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;标注工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tzutalin/labelImg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LabelImg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/puzzledqs/BBox-Label-Tool&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BBox-Label-Tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/christopher5106/FastAnnotationTool&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FastAnnotationTool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;博客&quot;&gt;博客&lt;/h3&gt;
&lt;p&gt;推荐一些好的博客，工程方面能让你解决某个具体问题能有所启发，而学术方面则可以让你紧跟业界最新潮流，这其中又分为学者个人的博客和著名科研单位的博客。&lt;/p&gt;
&lt;p&gt;工程方面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://tech.meituan.com/mt-mlinaction-how-to-ml.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实例详解机器学习如何解决问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/louyihang-loves-baiyan/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;楼燚(yì)航的blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/liumaolincycle/article/category/5705161&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;liumaolincycle的博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/denny402&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;denny的学习专栏&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://console.faceplusplus.com/documents/5679308&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Face++ -API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;学术探索&lt;br&gt;
个人&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.rossgirshick.info/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ross Girshick - Facebook AI Research&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ee.cuhk.edu.hk/~xgwang/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Xiaogang Wang - CUHK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cs.stanford.edu/people/karpathy/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Andrej Karpathy - Stanford Computer Science Ph.D. student&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rodrigob.github.io/#code&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Rodrigo Benenson&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;单位&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www2.eecs.berkeley.edu/Research/Projects/CS/vision/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Berkeley Computer Vision Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vision.stanford.edu/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stanford Vision Lab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vision.princeton.edu/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Princeton Vision &amp;amp; Robotics Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.robots.ox.ac.uk/~parg/home&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Oxford - Information Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ps.is.tuebingen.mpg.de/publications&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Max Planck Institute for Intelligent Systems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;组织和竞赛&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://openai.com/blog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenAI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.kaggle.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kaggle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tianchi.aliyun.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阿里云天池&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.jiqizhixin.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器之心&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://memect.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习日报&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/dlclass&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深度学习大讲堂&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;微调网络&quot;&gt;微调网络&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/louyihang-loves-baiyan/p/5038758.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;楼燚(yì)航的blog-Caffe fine-tuning 微调网络&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/sinat_30071459/article/details/51613304&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;小咸鱼_-基于caffe的图像分类(1)——制作train.txt和val.txt文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;可视化&quot;&gt;可视化&lt;/h3&gt;
&lt;p&gt;用反卷积的方法对自己的网络的各个卷积层进行可视化，能更好的理解你的网络每层学习到那些特征，思考到网络可能进入了哪些误区。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;deep-visualization-toolbox &lt;a href=&quot;https://github.com/yosinski/deep-visualization-toolbox&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;code&lt;/a&gt; &lt;a href=&quot;http://arxiv.org/abs/1506.06579&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/auduno/deepdraw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DeepDraw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ethereon.github.io/netscope/#/editor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;netscope&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;全卷积-fcn&quot;&gt;全卷积(FCN)&lt;/h3&gt;
&lt;p&gt;FCN将传统CNN中的全连接层转化成一个个的卷积层。在传统的CNN结构中，前5层是卷积层，第6层和第7层分别是一个长度为4096的一维向量，第8层是长度为1000的一维向量，分别对应1000个类别的概率。FCN将这3层表示为卷积层，卷积核的大小(通道数，宽，高)分别为（4096,1,1）、（4096,1,1）、（1000,1,1）。所有的层都是卷积层，故称为全卷积网络。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/taigw/article/details/51401448&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;全卷积网络（FCN）与图像分割&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/22976342&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FCN学习:Semantic Segmentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;扩展新layer&quot;&gt;扩展新layer&lt;/h3&gt;
&lt;p&gt;加入一个新的层，满足自己的实际需求，最常见的就是修改 数据输入层DataLayer,增加一个新的、特殊的数据类型，也对应你特殊的数据处理方式，例如对图像进行每隔几度进行旋转，resize、crop、使用光流图像等。也可以换种思路看看别人是如何增加一个新的Layer的，从中获得启发。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/sunshine_in_moon/article/details/51453951&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sunshine_in_Moon的专栏-Caffe扩展新层&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;高级篇&quot;&gt;高级篇&lt;/h2&gt;
&lt;h3 id=&quot;调参&quot;&gt;调参&lt;/h3&gt;
&lt;p&gt;深度学习，卷积神经网络莫过于一个适应于数据集规模，能够反映问题本质的网络，剩下的就是调参的事情了，无外乎实践，实践，再实践。当然机器很重要，好的机器，好的显卡，意味着快速迭代！机器不够用也没关系，那就要把理论功夫做足，参考成熟的网络设计，再前人的工作基础之上fine-tuning,往往比你自己训练要好的多。使用image-net数据集训练得到的caffemodel 就是一个很好的权值初始化参数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/41631631/answer/94816420&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;你有哪些deep learning（rnn、cnn）调参的经验？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;构造网络&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jay-mahadeokar/pynetbuilder&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pynetbuilder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;转化&quot;&gt;转化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ethereon/caffe-tensorflow&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;caffe-tensorflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kitofans/caffe-theano-conversion&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;caffe-theano-conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MarcBS/keras&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CaffeToKeras&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;分布式计算&quot;&gt;分布式计算&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/amplab/SparkNet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SparkNet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yahoo/CaffeOnSpark&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CaffeOnSpark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/petuum/bosen&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;petuum/bosen &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://daggerfs.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Yangqing Jia (贾扬清)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://image-net.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Image Net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MichaelXin/Awesome-Caffe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MichaelXin - Awesome-Caffe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作者:&lt;a href=&quot;https://github.com/mindcont&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mindcont&lt;/a&gt;  2016-08-22 第一次编辑 2017-02-16 第二次编辑&lt;br&gt;
&lt;strong&gt;转载注明出处 &lt;a href=&quot;http://blog.mindcont.com/2016/08/22/caffe-guide-book/&quot;&gt;http://blog.mindcont.com/2016/08/22/caffe-guide-book/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://blog.mindcont.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="caffe" scheme="http://blog.mindcont.com/tags/caffe/"/>
    
  </entry>
  
  <entry>
    <title>自上而下的学习路线-软件工程师的机器学习</title>
    <link href="http://blog.mindcont.com/2017/01/05/machine-learning-for-software-engineers/"/>
    <id>http://blog.mindcont.com/2017/01/05/machine-learning-for-software-engineers/</id>
    <published>2017-01-05T00:43:44.000Z</published>
    <updated>2017-07-27T11:22:40.373Z</updated>
    
    <content type="html">&lt;p&gt;灵感来源于 &lt;a href=&quot;https://github.com/jwasham/google-interview-university/blob/master/translations/README-cn.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;谷歌面试学习手册&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;原文地址：&lt;a href=&quot;https://github.com/ZuzooVn/machine-learning-for-software-engineers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Machine Learning for Software Engineers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;原文作者：&lt;a href=&quot;https://github.com/ZuzooVn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ZuzooVn(Nam Vu)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;翻译：&lt;a href=&quot;https://github.com/lsvih&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lsvih&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;这是？&quot;&gt;这是？&lt;/h2&gt;
&lt;p&gt;这是本人为期数月的学习计划。我正要从一名移动端软件开发者(自学，无计科文凭)转型成为一名机器学习工程师。&lt;/p&gt;
&lt;p&gt;我的主要目标是找到一种以实践为主的学习方法，并为初学者抽象掉大多数的数学概念。&lt;br&gt;
这种学习方法是非传统的，因为它是专门为软件工程师所设计的自上而下、以结果为导向的学习方法。&lt;/p&gt;
&lt;p&gt;如果您想让它更好的话，随时欢迎您的贡献。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;目录&quot;&gt;目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E8%BF%99%E6%98%AF&quot;&gt;这是？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%B8%BA%E4%BD%95%E8%A6%81%E7%94%A8%E5%88%B0%E5%AE%83&quot;&gt;为何要用到它？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%AE%83&quot;&gt;如何使用它？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#follow-me&quot;&gt;Follow me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%88%AB%E8%AE%A4%E4%B8%BA%E8%87%AA%E5%B7%B1%E4%B8%8D%E5%A4%9F%E8%81%AA%E6%98%8E&quot;&gt;别认为自己不够聪明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%85%B3%E4%BA%8E%E8%A7%86%E9%A2%91%E8%B5%84%E6%BA%90&quot;&gt;关于视频资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86&quot;&gt;预备知识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%AF%8F%E6%97%A5%E8%AE%A1%E5%88%92&quot;&gt;每日计划&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%8A%A8%E6%9C%BA&quot;&gt;动机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA&quot;&gt;机器学习概论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%8E%8C%E6%8F%A1%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0&quot;&gt;掌握机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9C%89%E8%B6%A3%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0&quot;&gt;有趣的机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%80%E4%BB%8B&quot;&gt;机器学习简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%B8%80%E6%9C%AC%E6%B7%B1%E5%85%A5-%E9%9D%9E%E6%8A%80%E6%9C%AF%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97&quot;&gt;一本深入，非技术的机器学习指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%95%85%E4%BA%8B%E4%B8%8E%E7%BB%8F%E9%AA%8C&quot;&gt;故事与经验&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95&quot;&gt;机器学习算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%85%A5%E9%97%A8%E4%B9%A6%E7%B1%8D&quot;&gt;入门书籍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%AE%9E%E7%94%A8%E4%B9%A6%E7%B1%8D&quot;&gt;实用书籍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#kaggle%E7%9F%A5%E8%AF%86%E7%AB%9E%E8%B5%9B&quot;&gt;Kaggle知识竞赛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%B3%BB%E5%88%97%E8%A7%86%E9%A2%91&quot;&gt;系列视频&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#mooc&quot;&gt;MOOC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E8%B5%84%E6%BA%90&quot;&gt;资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%88%90%E4%B8%BA%E4%B8%80%E5%90%8D%E5%BC%80%E6%BA%90%E8%B4%A1%E7%8C%AE%E8%80%85&quot;&gt;成为一名开源贡献者&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%B8%B8%E6%88%8F&quot;&gt;游戏&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%92%AD%E5%AE%A2&quot;&gt;播客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%A4%BE%E5%8C%BA&quot;&gt;社区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98&quot;&gt;面试问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%88%91%E5%B4%87%E6%8B%9C%E7%9A%84%E5%85%AC%E5%8F%B8&quot;&gt;我崇拜的公司&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;为何要用到它？&quot;&gt;为何要用到它？&lt;/h2&gt;
&lt;p&gt;我会为了我未来的工作————机器学习工程师 遵循这份计划。自2011年以来，我一直进行着移动端应用的开发(包括安卓、iOS与黑莓)。我有软件工程的文凭，但没有计算机科学的文凭。我仅仅在大学的时候学习过一点基础科学，包括微积分、线性代数、离散数学、概率论与统计。&lt;br&gt;
我认真思考过我在机器学习方面的兴趣:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.quora.com/Can-I-learn-and-get-a-job-in-Machine-Learning-without-studying-CS-Master-and-PhD&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我能在没有计科硕士、博士文凭的情况下找到一份关于机器学习的工作吗？&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;你当然可以，但是我想进入这个领域则无比艰难。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.quora.com/How-do-I-get-a-job-in-Machine-Learning-as-a-software-programmer-who-self-studies-Machine-Learning-but-never-has-a-chance-to-use-it-at-work&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我是一名软件工程师，我自学了机器学习，我如何在没有相关经验的情况下找到一份关于机器学习的工作？&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;我正在为我的团队招聘机器学习专家，但你的MOOC并不会给你带来工作机会。事实上，大多数机器学习方向的硕士也并不会得到工作机会，因为他们（与大多数上过MOOC的人一样）并没有深入地去理解。他们都没法帮助我的团队解决问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://programmers.stackexchange.com/questions/79476/what-skills-are-needed-for-machine-learning-jobs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;找一份机器学习相关的工作需要掌握怎样的技能？&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;首先，你得有正儿八经的计科或数学专业背景。ML是一个比较先进的课题，大多数的教材都会直接默认你有以上背景。其次，机器学习是一个集成了许多子专业的奇技淫巧的课题，你甚至会想看看MS的机器学习课程，去看看他们的授课、课程和教材。&lt;/li&gt;
&lt;li&gt;统计，假设，分布式计算，然后继续统计。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我深陷困境。&lt;/p&gt;
&lt;p&gt;据我所知, &lt;a href=&quot;http://machinelearningmastery.com/programmers-can-get-into-machine-learning/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习有两个方向&lt;/a&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实用机器学习： 这个方向主要是查询数据库、数据清洗、写脚本来转化数据，把算法和库结合起来再加上一些定制化的代码，从数据中挤出一些准确的答案来证明一些困难且模糊不清的问题。实际上它非常混乱。&lt;/li&gt;
&lt;li&gt;理论机器学习： 这个方向主要是关于数学、抽象、理想状况、极限条件、典型例子以及一切可能的特征。这个方向十分的干净、整洁，远离混乱的现实。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我认为对于以实践为主的人来说，做好的方法就是 &lt;a href=&quot;http://machinelearningmastery.com/machine-learning-for-programmers/#comment-358985&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;“练习–学习–练习”&lt;/a&gt;，这意味着每个学生一开始就能参与一些现有项目与一些问题，并练习（解决）它们以熟悉传统的方法是怎么做的。在有了一些简单的练习经验之后，他们就可以开始钻进书里去学习理论知识。这些理论知识将帮助他们在将来进行更进一步的训练，充实他们解决实际问题的工具箱。学习理论知识还会加深他们对那些简单练习的理解，帮助他们更快地获得进阶的经验。&lt;/p&gt;
&lt;p&gt;这是一个很长的计划，它花去了我一年的时间。如果你已经对它有所了解了，它将会让你省去很多时间。&lt;/p&gt;
&lt;h2 id=&quot;如何使用它？&quot;&gt;如何使用它？&lt;/h2&gt;
&lt;p&gt;以下的内容全部是概要，你需要从上往下来解决这些项目。&lt;/p&gt;
&lt;p&gt;我使用的是Github独特的flavored markdown的任务列表来检查我计划的进展。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[x] 创建一个新的分支，然后你可以这样来标出你已经完成的项目，只需要在框中填写一个x即可：[x]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;了解更多有关 Github-flavored markdown的知识&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;follow-me&quot;&gt;Follow me&lt;/h2&gt;
&lt;p&gt;我是一名非常非常想去美国工作的越南软件工程师。&lt;/p&gt;
&lt;p&gt;我在这份计划中花多少时间？在每天的艰辛工作完成后，每晚花4小时。&lt;/p&gt;
&lt;p&gt;我已经在实现梦想的旅途中了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/zuzoovn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Nam Vu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;http://sv1.upsieutoc.com/2016/10/08/331f241c8da44d0c43e9324d55440db6.md.jpg&quot; alt=&quot;Nam Vu - Top-down learning path: machine learning for software engineers&quot;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;USA as heck&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;别认为自己不够聪明&quot;&gt;别认为自己不够聪明&lt;/h2&gt;
&lt;p&gt;当我打开书本，发现他们告诉我多元微积分、统计与推理、线性代数是学习机器学习的先决条件的时候，我非常沮丧。因为我不知道从哪儿开始…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://machinelearningmastery.com/what-if-im-not-good-at-mathematics/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我数学不好怎么办&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://machinelearningmastery.com/techniques-to-understand-machine-learning-algorithms-without-the-background-in-mathematics/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;没有数学专业背景而理解机器学习算法的5种技巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.quora.com/Machine-Learning/How-do-I-learn-machine-learning-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我是如何学习机器学习的？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;关于视频资源&quot;&gt;关于视频资源&lt;/h2&gt;
&lt;p&gt;部分视频只有在Coursera、EdX的课程注册了才能观看。虽然是免费的，但有些时间段这些课程并不开放，你可能需要等上一段时间(可能是好几个月)。我将会加上更多的公开的视频源来代替这些在线课程的视频。我很喜欢大学的讲座。&lt;/p&gt;
&lt;h2 id=&quot;预备知识&quot;&gt;预备知识&lt;/h2&gt;
&lt;p&gt;这个小章节是一些在每日计划开始前我想去了解的一些预备知识与一些有趣的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.quora.com/What-is-the-difference-between-Data-Analytics-Data-Analysis-Data-Mining-Data-Science-Machine-Learning-and-Big-Data-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Data Analytics，Data Analysis，数据挖掘，数据科学，机器学习，大数据的区别是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.coursera.org/learn/learning-how-to-learn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;学习如何去学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://lifehacker.com/281626/jerry-seinfelds-productivity-secret&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;不要斩断锁链&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://metacademy.org/roadmaps/rgrosse/learn_on_your_own&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何自学&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;每日计划&quot;&gt;每日计划&lt;/h2&gt;
&lt;p&gt;每个主题都不需要用一整天来完全理解它们，你可以每天完成它们中的多个。&lt;/p&gt;
&lt;p&gt;每天我都会从下面的列表中选一个出来，一遍又一遍的读，做笔记，练习，用Python或R语言实现它。&lt;/p&gt;
&lt;h1&gt;动机&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.youtube.com/watch?v=g-jwWYX7Jlo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;梦&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;机器学习概论&quot;&gt;机器学习概论&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://www.r2d3.us/visual-intro-to-machine-learning-part-1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;形象的机器学习简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://blog.monkeylearn.com/a-gentle-guide-to-machine-learning/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一份温柔的机器学习指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://blog.algorithmia.com/introduction-machine-learning-developers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;为开发者准备的机器学习简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.analyticsvidhya.com/blog/2015/06/machine-learning-basics/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;菜鸟的机器学习基础&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.quora.com/How-do-you-explain-Machine-Learning-and-Data-Mining-to-non-Computer-Science-people&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;你如何向非计算机专业的人来解释机器学习与数据挖掘？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://georgemdallas.wordpress.com/2013/06/11/big-data-data-mining-and-machine-learning-under-the-hood/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在罩子下的机器学习，博文简单明了地介绍了机器学习的原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.youtube.com/watch?v=elojMnjn4kk&amp;amp;list=PL5-da3qGB5ICeMbQuqbbCOQWcS6OYBr5A&amp;amp;index=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习是什么？它是如何工作的呢？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://www.slideshare.net/AlfredPong1/deep-learning-a-nontechnical-introduction-69385936&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深度学习——一份非技术性的简介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;掌握机器学习&quot;&gt;掌握机器学习&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://machinelearningmastery.com/machine-learning-mastery-method/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;掌握机器学习的方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://machinelearningmastery.com/machine-learning-for-programmers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;程序员的机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://machinelearningmastery.com/start-here/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;掌握并运用机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://machinelearningmastery.com/python-machine-learning-mini-course/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python机器学习小课程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://machinelearningmastery.com/machine-learning-algorithms-mini-course/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习算法小课程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;有趣的机器学习&quot;&gt;有趣的机器学习&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://medium.com/@ageitgey/machine-learning-is-fun-80ea3ec3c471#.37ue6caww&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习真有趣！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://medium.com/@ageitgey/machine-learning-is-fun-part-2-a26a10b68df3#.kh7qgvp1b&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Part 2: 使用机器学习来创造超级马里奥的关卡&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://medium.com/@ageitgey/machine-learning-is-fun-part-3-deep-learning-and-convolutional-neural-networks-f40359318721#.44rhxy637&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Part 3: 深度学习与卷积神经网络&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78#.3rwmq0ddc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Part 4: 现代人脸识别与深度学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://medium.com/@ageitgey/machine-learning-is-fun-part-5-language-translation-with-deep-learning-and-the-magic-of-sequences-2ace0acca0aa#.wyfthap4c&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Part 5: 翻译与深度学习和序列的魔力&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://medium.com/@ageitgey/machine-learning-is-fun-part-6-how-to-do-speech-recognition-with-deep-learning-28293c162f7a#.lhr1nnpcy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Part 6: 如何使用深度学习进行语音识别&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;机器学习简介-用手指沾上墨水来书写机器学习简介&quot;&gt;&lt;a href=&quot;https://triskell.github.io/2016/11/15/Inky-Machine-Learning.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习简介&lt;/a&gt;(用手指沾上墨水来书写机器学习简介)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://triskell.github.io/2016/10/23/What-is-Machine-Learning.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Part 1 : 什么是机器学习？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://triskell.github.io/2016/11/13/Supervised-Learning-and-Unsupervised-Learning.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Part 2 : 监督学习与非监督学习&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;一本深入-非技术性的机器学习指南&quot;&gt;一本深入、非技术性的机器学习指南&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://www.innoarchitech.com/machine-learning-an-in-depth-non-technical-guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;概述，目标，学习类型和算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://www.innoarchitech.com/machine-learning-an-in-depth-non-technical-guide-part-2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数据的选择，准备与建模&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://www.innoarchitech.com/machine-learning-an-in-depth-non-technical-guide-part-3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;模型的评估，验证，复杂性与改进&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://www.innoarchitech.com/machine-learning-an-in-depth-non-technical-guide-part-4/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;模型性能与误差分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://www.innoarchitech.com/machine-learning-an-in-depth-non-technical-guide-part-5/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;无监督学习，相关领域与实践中的机器学习&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;故事与经验&quot;&gt;故事与经验&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://medium.com/learning-new-stuff/machine-learning-in-a-week-a0da25d59850#.tk6ft2kcg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一周的机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://medium.com/learning-new-stuff/machine-learning-in-a-year-cdb0b0ebd29c#.hhcb9fxk1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一年的机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://blog.adnansiddiqi.me/how-i-wrote-my-first-machine-learning-program-in-3-days/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我是如何在3天内写出我的第一个机器学习程序的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.analyticsvidhya.com/learning-path-learn-machine-learning/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;学习路径：你成为机器学习专家的导师&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://backchannel.com/you-too-can-become-a-machine-learning-rock-star-no-phd-necessary-107a1624d96b#.g9p16ldp7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;不是PhD你也可以成为机器学习的摇滚明星&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] 如何6个月成为一名数据科学家：一名黑客的职业规划
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=rIofV14c0tc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;视频&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/TetianaIvanova2/how-to-become-a-data-scientist-in-6-months&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;幻灯片&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://blog.udacity.com/2016/04/5-skills-you-need-to-become-a-machine-learning-engineer.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;5个你成为机器学习工程师必须要掌握的技能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.quora.com/Are-you-a-self-taught-machine-learning-engineer-If-yes-how-did-you-do-it-how-long-did-it-take-you&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;你是一个自学成才的机器学习工程师吗？你是怎么做的？花了多长时间？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.quora.com/How-can-one-become-a-good-machine-learning-engineer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一个人如何成为一名优秀的机器学习工程师？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://karlrosaen.com/ml/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一个关注于机器学习的学术假期&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;机器学习算法&quot;&gt;机器学习算法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.analyticsvidhya.com/blog/2015/12/10-machine-learning-algorithms-explained-army-soldier/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用“士兵”来表示10种机器学习算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://rayli.net/blog/data/top-10-data-mining-algorithms-in-plain-english/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Top10的数据挖掘算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://blog.aylien.com/10-machine-learning-terms-explained-in-simple/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;介绍10种机器学习的术语&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://machinelearningmastery.com/a-tour-of-machine-learning-algorithms/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习算法之旅&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://gab41.lab41.org/the-10-algorithms-machine-learning-engineers-need-to-know-f4bb63f5b2fa#.ofc7t2965&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习工程师需要知道的10种算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://www.dataschool.io/comparing-supervised-learning-algorithms/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;比较监督学习算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rushter/MLAlgorithms&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;收集的最简化、可执行的机器学习算法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;入门书籍&quot;&gt;入门书籍&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.amazon.com/Data-Smart-Science-Transform-Information/dp/111866146X&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Data Smart: Using Data Science to Transform Information into Insight 1st Edition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.amazon.com/Data-Science-Business-Data-Analytic-Thinking/dp/1449361323/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Data Science for Business: What you need to know about data mining and data­ analytic-thinking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.amazon.com/Predictive-Analytics-Power-Predict-Click/dp/1118356853&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Predictive Analytics: The Power to Predict Who Will Click, Buy, Lie, or Die&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实用书籍&quot;&gt;实用书籍&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.amazon.com/Machine-Learning-Hackers-Drew-Conway/dp/1449303714&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Machine Learning for Hackers&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/johnmyleswhite/ML_for_Hackers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository®&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/carljv/Will_it_Python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository(Python)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.amazon.com/Python-Machine-Learning-Sebastian-Raschka-ebook/dp/B00YSILNL0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python Machine Learning&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rasbt/python-machine-learning-book&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.amazon.com/Programming-Collective-Intelligence-Building-Applications-ebook/dp/B00F8QDZWG&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Programming Collective Intelligence: Building Smart Web 2.0 Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.amazon.com/Machine-Learning-Algorithmic-Perspective-Recognition/dp/1466583282&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Machine Learning: An Algorithmic Perspective, Second Edition&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alexsosn/MarslandMLAlgo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://seat.massey.ac.nz/personal/s.r.marsland/MLbook.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Resource repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://shop.oreilly.com/product/0636920030515.do&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Introduction to Machine Learning with Python: A Guide for Data Scientists&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/amueller/introduction_to_ml_with_python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.amazon.com/Data-Mining-Practical-Techniques-Management/dp/0123748569&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Data Mining: Practical Machine Learning Tools and Techniques, Third Edition&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Teaching material
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cs.waikato.ac.nz/ml/weka/Slides3rdEd_Ch1-5.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Slides for Chapters 1-5 (zip)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cs.waikato.ac.nz/ml/weka/Slides3rdEd_Ch6-8.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Slides for Chapters 6-8 (zip)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.amazon.com/Machine-Learning-Action-Peter-Harrington/dp/1617290181/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Machine Learning in Action&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pbharrin/machinelearninginaction&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.manning.com/books/reactive-machine-learning-systems&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reactive Machine Learning Systems(MEAP)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jeffreyksmithjr/reactive-machine-learning-systems&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://www-bcf.usc.edu/~gareth/ISL/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;An Introduction to Statistical Learning&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www-bcf.usc.edu/~gareth/ISL/code.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository®&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JWarmenhoven/ISLR-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository(Python)&lt;/a&gt;&lt;br&gt;
   - &lt;a href=&quot;http://www.dataschool.io/15-hours-of-expert-machine-learning-videos/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;视频&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.packtpub.com/big-data-and-business-intelligence/building-machine-learning-systems-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Building Machine Learning Systems with Python&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/luispedro/BuildingMachineLearningSystemsWithPython&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.packtpub.com/big-data-and-business-intelligence/learning-scikit-learn-machine-learning-python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Learning scikit-learn: Machine Learning in Python&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gmonce/scikit-learn-book&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Probabilistic Programming &amp;amp; Bayesian Methods for Hackers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.amazon.com/Probabilistic-Graphical-Models-Principles-Computation/dp/0262013193&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Probabilistic Graphical Models: Principles and Techniques&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.amazon.com/Machine-Learning-Hands-Developers-Professionals/dp/1118889061&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Machine Learning: Hands-On for Developers and Technical Professionals&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/querysimon/2015/01/01/book-review-machine-learning-hands-on-for-developers-and-technical-professionals/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Machine Learning Hands-On for Developers and Technical Professionals review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jasebell/mlbook&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.amazon.com/Learning-Data-Yaser-S-Abu-Mostafa/dp/1600490069&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Learning from Data&lt;/a&gt;&lt;br&gt;
   - &lt;a href=&quot;https://work.caltech.edu/telecourse.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://webdocs.cs.ualberta.ca/~sutton/book/the-book-2nd.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reinforcement Learning: An Introduction (2nd Edition)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ShangtongZhang/reinforcement-learning-an-introduction&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.manning.com/books/machine-learning-with-tensorflow&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用TensorFlow(MEAP)进行机器学习&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/BinRoot/TensorFlow-Book&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;kaggle知识竞赛&quot;&gt;Kaggle知识竞赛&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.analyticsvidhya.com/blog/2015/06/start-journey-kaggle/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kaggle竞赛：怎么样，在哪里开始？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://machinelearningmastery.com/how-a-beginner-used-small-projects-to-get-started-in-machine-learning-and-compete-on-kaggle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一个初学者如何用一个小项目在机器学习入门并在Kaggle竞争&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://machinelearningmastery.com/master-kaggle-by-competing-consistently/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何竞争Kaggle的Master&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;系列视频&quot;&gt;系列视频&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.youtube.com/playlist?list=PL2-dafEMk2A4ut2pyv0fSIXqOzXtBGkLj&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Machine Learning for Hackers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.youtube.com/playlist?list=PL2-dafEMk2A6Kc7pV6gHH-apBFxwFjKeY&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fresh Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.youtube.com/playlist?list=PLOU2XLYxmsIIuiBfYad6rFYQU_jL2ryal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Machine Learning Recipes with Josh Gordon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://vimeo.com/43547079&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Everything You Need to know about Machine Learning in 30 Minutes or Less&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.youtube.com/watch?v=IpGxLWOIZy4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;A Friendly Introduction to Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.youtube.com/watch?v=F1ka6a13S9I&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nuts and Bolts of Applying Deep Learning - Andrew Ng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] BigML Webinar&lt;br&gt;
   - &lt;a href=&quot;https://www.youtube.com/watch?list=PL1bKyu9GtNYHcjGa6ulrvRVcm1lAB8he3&amp;amp;v=W62ehrnOVqo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;视频&lt;/a&gt;&lt;br&gt;
   - &lt;a href=&quot;https://bigml.com/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.youtube.com/playlist?list=PLD0F06AA0D2E8FFBA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mathematicalmonk’s Machine Learning tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.youtube.com/playlist?list=PL5-da3qGB5ICeMbQuqbbCOQWcS6OYBr5A&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Machine learning in Python with scikit-learn&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/justmarkham/scikit-learn-videos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub repository&lt;/a&gt;&lt;br&gt;
   - &lt;a href=&quot;http://blog.kaggle.com/author/kevin-markham/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.analyticsvidhya.com/blog/2015/07/top-youtube-videos-machine-learning-neural-network-deep-learning/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;My playlist – Top YouTube Videos on Machine Learning, Neural Network &amp;amp; Deep Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.analyticsvidhya.com/blog/2016/10/16-new-must-watch-tutorials-courses-on-machine-learning/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;16 New Must Watch Tutorials, Courses on Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.youtube.com/channel/UC9OeZkIwhzfv-_Cb7fCikLQ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DeepLearning.TV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.youtube.com/playlist?list=PLiaHhY2iBX9ihLasvE8BKnS2Xg8AhY6iV&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Learning To See&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.youtube.com/playlist?list=PL6Xpj9I5qXYEcOhn7TqghAJ6NAPrNmUBH&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Neural networks class - Université de Sherbrooke&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.analyticsvidhya.com/blog/2016/12/21-deep-learning-videos-tutorials-courses-on-youtube-from-2016/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016年的21个深度学习视频课程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.analyticsvidhya.com/blog/2016/12/30-top-videos-tutorials-courses-on-machine-learning-artificial-intelligence-from-2016/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016年的30个顶级的机器学习与人工智能视频教程 Top Videos, Tutorials &amp;amp; Courses on Machine Learning &amp;amp; Artificial Intelligence from 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://course.fast.ai/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;程序员的深度学习实战&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;mooc&quot;&gt;MOOC&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.udacity.com/course/intro-to-machine-learning--ud120&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Udacity的机器学习导论&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://hamelg.blogspot.com/2014/12/udacity-intro-to-machine-learning-review.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;复习Udacity机器学习导论&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.udacity.com/course/machine-learning--ud262&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Udacity的监督学习、非监督学习及深入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.coursera.org/learn/ml-foundations&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Machine Learning Foundations: A Case Study Approach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.coursera.org/learn/machine-learning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Courserad的机器学习&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLZ9qNFMHZ-A4rycgrgOYma6zxF4BZGGPW&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;视频&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rayli.net/blog/data/coursera-machine-learning-review/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;复习Coursera机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://metacademy.org/roadmaps/cjrd/coursera_ml_supplement&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Coursera的机器学习路线图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://code.tutsplus.com/courses/machine-learning-distilled&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Machine Learning Distilled&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://bigml.com/training&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BigML training&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.coursera.org/learn/neural-networks&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Coursera的神经网络课程&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;由Geoffrey Hinton（神经网络的先驱）执教&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.kadenze.com/courses/creative-applications-of-deep-learning-with-tensorflow/info&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用TensorFlow创建深度学习应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.udacity.com/course/intro-to-descriptive-statistics--ud827&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;描述统计学概论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.udacity.com/course/intro-to-inferential-statistics--ud201&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;推理统计学概论&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;资源&quot;&gt;资源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://elitedatascience.com/machine-learning-masterclass&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一个月学会机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://medium.com/@samdebrule/a-humans-guide-to-machine-learning-e179f43b67a0#.cpzf3a5c0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一份“非技术性”的机器学习与人工智能指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://news.ycombinator.com/item?id=12898718&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hacker News的《软件工程师的机器学习》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://xyclade.github.io/MachineLearning/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开发者的机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://dev.to/thealexlavin/machine-learning-advice-for-developers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;给开发者的关于机器学习的建议&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://pythonforengineers.com/machine-learning-for-complete-beginners/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://medium.com/@suffiyanz/getting-started-with-machine-learning-f15df1c283ea#.yjtiy7ei9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;为新手准备的机器学习入门教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://elitedatascience.com/learn-machine-learning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;初学者如何自学机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://ragle.sanukcode.net/articles/machine-learning-self-study-resources/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习自学资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://metacademy.org/roadmaps/cjrd/level-up-your-ml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;提升你的机器学习技能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://medium.com/axiomzenteam/an-honest-guide-to-machine-learning-2f6d7a6df60e#.ib12a1yw5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一份’坦诚’的机器学习指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] 用机器学习让Hacker News更具可读性
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=O7IezJT9uSI&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;视频&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/pycon2014/enough-machine-learning-to-make-hacker-news-readable-again-by-ned-jackson-lovely&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;幻灯片&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://github.com/hangtwenty/dive-into-machine-learning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深入机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://speakerdeck.com/pmigdal/machine-deep-learning-for-software-engineers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;软件工程师的{机器、深度}学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://deeplearning4j.org/deeplearningforbeginners.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深度学习入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;大学中的机器学习课程
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://ai.stanford.edu/courses/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;斯坦福&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://mlss.cc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习夏令营&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.cs.ox.ac.uk/people/nando.defreitas/machinelearning/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;牛津&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://mlg.eng.cam.ac.uk/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;剑桥&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Flipboard的主题
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://flipboard.com/topic/machinelearning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://flipboard.com/topic/deeplearning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深度学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://flipboard.com/topic/artificialintelligence&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;人工智能&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Medium的主题
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/tag/machine-learning/latest&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/tag/deep-learning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深度学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/tag/artificial-intelligence&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;人工智能&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;每月文章Top10
&lt;ul&gt;
&lt;li&gt;机器学习
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.mybridge.co/top-ten-machine-learning-articles-for-the-past-month-9c1202351144#.lyycen64y&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016年7月&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.mybridge.co/machine-learning-top-10-articles-for-the-past-month-2f3cb815ffed#.i9ee7qkjz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016年8月&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.mybridge.co/machine-learning-top-10-in-september-6838169e9ee7#.4jbjcibft&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016年9月&lt;/a&gt;&lt;br&gt;
       - &lt;a href=&quot;https://medium.mybridge.co/machine-learning-top-10-articles-for-the-past-month-35c37825a943#.td5im1p5z&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016年10月&lt;/a&gt;&lt;br&gt;
       - &lt;a href=&quot;https://medium.mybridge.co/machine-learning-top-10-articles-for-the-past-month-b499e4213a34#.7k39i08tv&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016年11月&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.mybridge.co/algorithm-top-10-articles-in-september-8a0e6afb0807#.hgjzuyxdb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016年9月&lt;/a&gt;&lt;br&gt;
       - &lt;a href=&quot;https://medium.mybridge.co/algorithm-top-10-articles-v-november-e73cba2fa87e#.kothimkhb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016年10月-11月&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.datasciencecentral.com/group/resources/forum/topics/comprehensive-list-of-data-science-resources&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;全面的数据科学家的资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.digitalmind.io/post/artificial-intelligence-resources&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DigitalMind的人工智能资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/josephmisiti/awesome-machine-learning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;令人惊叹的机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.creativeai.net/?cat%5B0%5D=machine-learning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CreativeAi的机器学习&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;成为一名开源贡献者&quot;&gt;成为一名开源贡献者&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://github.com/tensorflow/magenta&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tensorflow/magenta: Magenta: Music and Art Generation with Machine Intelligence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://github.com/tensorflow/tensorflow&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tensorflow/tensorflow: Computation using data flow graphs for scalable machine learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://github.com/cmusatyalab/openface&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cmusatyalab/openface: Face recognition with deep neural networks.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://github.com/tensorflow/models/tree/master/syntaxnet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tensorflow/models/syntaxnet: Neural Models of Syntax.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;游戏&quot;&gt;游戏&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://halite.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Halite：AI编程游戏&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vindinium.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vindinium: 挑战AI编程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.gvgai.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Video Game AI比赛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://aibirds.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;愤怒的小鸟AI比赛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://theaigames.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The AI Games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ice.ci.ritsumei.ac.jp/~ftgaic/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fighting Game AI Competition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.codecup.nl/intro.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodeCup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sscaitournament.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;星际争霸AI学生锦标赛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cs.mun.ca/~dchurchill/starcraftaicomp/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AIIDE星际争霸AI竞赛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sites.google.com/site/starcraftaic/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CIG星际争霸AI竞赛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.codingame.com/training/machine-learning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodinGame - AI Bot Games&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;播客&quot;&gt;播客&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&quot;适合初学者的播客：&quot;&gt;适合初学者的播客：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.thetalkingmachines.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Talking Machines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lineardigressions.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linear Digressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dataskeptic.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Data Skeptic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twimlai.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;This Week in Machine Learning &amp;amp; AI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;更多-进阶的播客：&quot;&gt;“更多”进阶的播客：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://partiallyderivative.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Partially Derivative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://radar.oreilly.com/tag/oreilly-data-show-podcast&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;O’Reilly Data Show&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://soundcloud.com/nssd-podcast&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Not So Standard Deviation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;盒子外的播客：&quot;&gt;盒子外的播客：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://datastori.es/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Data Stories&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;社区&quot;&gt;社区&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Quora&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.quora.com/topic/Machine-Learning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.quora.com/topic/Statistics-academic-discipline&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;统计学&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.quora.com/topic/Data-Mining&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数据挖掘&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reddit&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/machinelearning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/computervision&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;计算机视觉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/languagetechnology&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;自然语言处理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/datascience&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数据科学&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/bigdata&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;大数据&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/statistics&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;统计学&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.datatau.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Data Tau&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://news.startup.ml/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep Learning News&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.kdnuggets.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;KDnuggets&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;面试问题&quot;&gt;面试问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://blog.udacity.com/2016/05/prepare-machine-learning-interview.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何准备机器学习职位的面试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.analyticsvidhya.com/blog/2016/09/40-interview-questions-asked-at-startups-in-machine-learning-data-science&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;40个机器学习与数据科学的面试问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://www.kdnuggets.com/2016/02/21-data-science-interview-questions-answers.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;21个必须要知道的数据科学问题与回答&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://career.guru99.com/top-50-interview-questions-on-machine-learning/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Top 50 机器学习面试问题与回答&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://resources.workable.com/machine-learning-engineer-interview-questions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习面试问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://www.learn4master.com/machine-learning/popular-machine-learning-interview-questions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;常用的机器学习面试问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.quora.com/What-are-some-common-Machine-Learning-interview-questions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习面试问题有哪些相同的？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.quora.com/What-are-the-best-interview-questions-to-evaluate-a-machine-learning-researcher&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;什么是评价一个机器学习研究者的最好的问题？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;http://analyticscosm.com/machine-learning-interview-questions-for-data-scientist-interview/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习面试问题大搜集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://learn.elitedatascience.com/mlqa-welcome&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;121个需要掌握的问题与回答&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.springboard.com/blog/machine-learning-interview-questions/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;41个基本机器学习面试问题（附答案）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;我崇拜的公司&quot;&gt;我崇拜的公司&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a href=&quot;https://www.elsanow.io/home&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ELSA - 你虚拟的口语教练&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;灵感来源于 &lt;a href=&quot;https://github.com/jwasham/google-interview-university/blob/master/translations/README-cn.md&quot; target=&quot;_blank&quot; rel=&quot;externa
    
    </summary>
    
      <category term="深度学习" scheme="http://blog.mindcont.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>局域网内nginx反向代理上网</title>
    <link href="http://blog.mindcont.com/2016/12/26/nginx-proxy-lan/"/>
    <id>http://blog.mindcont.com/2016/12/26/nginx-proxy-lan/</id>
    <published>2016-12-26T04:31:25.000Z</published>
    <updated>2017-07-27T09:08:01.486Z</updated>
    
    <content type="html">&lt;p&gt;**背景：**局域网下有两台Linux服务器，信息如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;服务器&lt;/th&gt;
&lt;th&gt;IP地址&lt;/th&gt;
&lt;th&gt;操作系统&lt;/th&gt;
&lt;th&gt;Internet访问&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HOSTA(OpenWrt路由器)&lt;/td&gt;
&lt;td&gt;110.1.1.65(wan)&lt;/td&gt;
&lt;td&gt;CentOS 6.7 x64&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HOSTB&lt;/td&gt;
&lt;td&gt;110.1.1.215&lt;/td&gt;
&lt;td&gt;CentOS 6.7 x64&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;**需求：**HOSTA和HOSTB均处在局域网中，二者能够互相ping通，HOSTA开通网络策略支持互联网访问，但是HOSTB不支持，现在需要将HOSTA作为代理服务器，让HOSTB通过HOSTA实现互联网访问，主要需要HOSTB能够进行在线的软件包安装（yum和pip）&lt;/p&gt;
&lt;h2 id=&quot;方案&quot;&gt;方案&lt;/h2&gt;
&lt;p&gt;使用Nginx反向代理将HOSTA作为http服务器，在HOSTB上配置http全局代理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://sslbucket-a.akamaihd.net/www.opswat.com/images/blog/web-proxy-diagram-new.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;设置nginx为http代理服务器&quot;&gt;设置nginx为HTTP代理服务器&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;服务器端即HOSTA主机&lt;/strong&gt;,设置nginx为HTTP代理服务器上网，只需要3步，分别为安装nginx、配置nginx、修改OpenWrt 防火墙。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、登录OpenWrt 安装nginx&lt;/strong&gt;&lt;br&gt;
在windows下使用SSH工具，如&lt;a href=&quot;http://www.chiark.greenend.org.uk/~sgtatham/putty/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Putty&lt;/a&gt;等，在Host name 填写192.168.1.1，端口22 ，然后点击 Open.&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/openwrt/putty.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在linux下，打开终端输入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh root@192.168.1.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输人密码（默认 admin）登陆,如下图所示s&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/openwrt/welcome.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;使用opkg安装 nginx ,输入下面的指令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;opkg update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;opkg install nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;2、配置 nginx&lt;/strong&gt;&lt;br&gt;
这里我们首先将nginx原本配置文件&lt;code&gt;nginx.conf&lt;/code&gt;备份为&lt;code&gt;nginx.conf.backup&lt;/code&gt;，后修改里面的内容，配置为HTTP反向代理模式，选择8080为服务监听端口。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd /etc/nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp nginx.conf nginx.conf.backup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi nginx.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将下面的内容替换&lt;code&gt;nginx.conf&lt;/code&gt;中默认的内容&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user nobody nogroup;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;worker_processes  1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;events &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    worker_connections  1024;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #include       mime.types;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #default_type  application/octet-stream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #log_format  main  &amp;apos;$remote_addr - $remote_user [$time_local] &amp;quot;$request&amp;quot; &amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #                  &amp;apos;$status $body_bytes_sent &amp;quot;$http_referer&amp;quot; &amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #                  &amp;apos;&amp;quot;$http_user_agent&amp;quot; &amp;quot;$http_x_forwarded_for&amp;quot;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sendfile        on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #tcp_nopush     on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    keepalive_timeout  65;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gzip  on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #include /etc/nginx/conf.d/*.conf;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolver 114.114.114.114;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listen       8080;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              proxy_pass $scheme://$http_host$request_uri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改完成后，按　esc ，输入&lt;code&gt;：wq!&lt;/code&gt; 保存&lt;br&gt;
紧接着，启动nginx&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd /etc/init.d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./nginx start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;3、修改OpenWrt 防火墙&lt;/strong&gt;&lt;br&gt;
由于OpenWrt wan口防火墙默认禁止入站数据，这里我们需要改为&lt;code&gt;ACCEPT&lt;/code&gt;。在OpenWrt LuCI 界面中修改防火期设置。&lt;/p&gt;
&lt;p&gt;打开浏览器，输入&lt;code&gt;192.168.1.1&lt;/code&gt; ，账号默认为root,默认密码admin。依次选择网络 -&amp;gt; 防火墙&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/openwrt/firewall.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;使你的设置同绿框中标明的那样，然后点击&lt;code&gt;保存&amp;amp;应用&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;略过此步，使用windows 网络 -&amp;gt;疑难解答,你将会看到&lt;strong&gt;该设备或资源(Web 代理)未设置为接受端口’8080’上的连接&lt;/strong&gt;的错误提示，如下&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/openwrt/reject-detail.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;设置浏览器的代理-以ie为例&quot;&gt;设置浏览器的代理(以IE为例)&lt;/h3&gt;
&lt;p&gt;设置HOSTB为http全局代理，以windows平台为例，在控制面板 -&amp;gt; Internet选项 -&amp;gt; 连接 -&amp;gt; 局域网设置 -&amp;gt; 代理服务器&lt;/p&gt;
&lt;p&gt;填写IP(这里我们填写HOSTA 的IP，即110.1.1.65)和Port(即nginx 监听端口8080)即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/openwrt/client-config.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;注明：&lt;strong&gt;nginx不支持https正向代理&lt;/strong&gt; 因为nginx不支持CONNECT，所以无法正向代理https网站。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/guowenyan001/article/details/22718179&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nginx：设置为HTTP代理服务器上网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/xshrim/p/5934032.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;局域网下通过代理实现服务器的互联网访问&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/aa120515692/article/details/46917637&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;openwrt 防火墙设置 /etc/config/firewall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;**背景：**局域网下有两台Linux服务器，信息如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;服务器&lt;/th&gt;
&lt;th&gt;IP地址&lt;/th&gt;
&lt;th&gt;操作系统&lt;/th&gt;
&lt;th&gt;Internet访问&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HOSTA(OpenWrt路由器)&lt;/td&gt;
&lt;td&gt;110.1.1.65(wan)&lt;/td&gt;
&lt;td&gt;CentOS 6.7 x64&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HOSTB&lt;/td&gt;
&lt;td&gt;110.1.1.215&lt;/td&gt;
&lt;td&gt;CentOS 6.7 x64&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>naoqi ros 开发环境搭建</title>
    <link href="http://blog.mindcont.com/2016/12/14/ros-naoqi-ubuntu/"/>
    <id>http://blog.mindcont.com/2016/12/14/ros-naoqi-ubuntu/</id>
    <published>2016-12-14T08:47:33.000Z</published>
    <updated>2017-02-14T02:04:25.054Z</updated>
    
    <content type="html">&lt;p&gt;ROS( robot operating system) 是一款开源的面向与机器人控制领域的操作系统，起源于2007斯坦福大学人工智能实验室的项目与机器人技术公司Willow Garage 的个人机器人项目之间的合作，2008年之后由Willow Garage 推动，2010 年该公司将其开源，2015年，ros 发布了Jade 版本。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-mindcont.qbox.me/blog/images/ubuntu/ros/hero_product.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.mindcont.com/2016/12/14/naoqi-robot-sdk-ubuntu/&quot;&gt;书接上回&lt;/a&gt;，下面我将带您一览ros和naoqi robot 在ubuntu 14.04(lts)版本下开发环境的搭建。&lt;/p&gt;
&lt;h3 id=&quot;安装-ros-indigo-desktop&quot;&gt;安装 ros-indigo-desktop&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1、 配置 Ubuntu 软件仓库&lt;br&gt;
配置你的 Ubuntu 软件仓库(repositories) 以允许 “restricted”、“universe” 和 &amp;quot;multiverse&amp;quot;这三种安装模式。 你可以 &lt;a href=&quot;https://help.ubuntu.com/community/Repositories/Ubuntu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;按照ubuntu中的配置指南&lt;/a&gt;来完成配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-mindcont.qbox.me/blog/images/ubuntu/ros/ubuntu-repositories-config.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2、 添加 sources.list&lt;br&gt;
配置你的电脑使其能够安装来自 packages.ros.org的软件。 ROS Indigo 仅 支持 Saucy (13.10) 和 Trusty (14.04)。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[官方]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sh -c &amp;apos;echo &amp;quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&amp;quot; &amp;gt; /etc/apt/sources.list.d/ros-latest.list&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[国内镜像]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sh -c &amp;apos;. /etc/lsb-release &amp;amp;&amp;amp; echo &amp;quot;deb http://mirrors.ustc.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main&amp;quot; &amp;gt; /etc/apt/sources.list.d/ros-latest.list&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：强烈建议使用国内或者新加坡的镜像源，这样能够大大提高安装下载速度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3、 添加 keys&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;4、 桌面版安装： 包含ROS、rqt、rviz以及通用机器人函数库。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-desktop&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;5、后续环节&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 安装　rosinstall&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install python-rosinstall&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 初始化 rosdep&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo rosdep init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosdep update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 配置环境变量　Environment setup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;source /opt/ros/indigo/setup.bash&amp;quot; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt;: If you have more than one ROS distribution installed, ~/.bashrc must only source the setup.bash for the version you are currently using.&lt;/p&gt;
&lt;h3 id=&quot;启动-ros-on-a-virtual-naoqi&quot;&gt;启动 ROS on a virtual NAOqi&lt;/h3&gt;
&lt;p&gt;Before starting, please make sure you meet all the required dependencies especially the packages &lt;a href=&quot;http://wiki.ros.org/naoqi_driver&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;naoqi_driver&lt;/a&gt;, &lt;a href=&quot;http://wiki.ros.org/naoqi_bridge&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;naoqi_bridge&lt;/a&gt; and &lt;a href=&quot;http://wiki.ros.org/nao_description&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nao_description&lt;/a&gt;. You can either install the official releases via your package manager or directly clone the necessary ros packages from github.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#时钟同步，用于同步机器人和开发者PC　指令时钟&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install chrony&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#中间层驱动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-naoqi-driver ros-indigo-naoqi-bridge ros-indigo-nao-description&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# robot 3D meshes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-nao-meshes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装 naoqi 为ros提供的中间接口部件&lt;br&gt;
The core functionality is implemented in the &lt;a href=&quot;http://wiki.ros.org/nao_robot&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nao_robot&lt;/a&gt; stack (can be installed on the robot or on a remote PC), extended with further functionality in &lt;a href=&quot;http://wiki.ros.org/nao_extras&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nao_extras&lt;/a&gt; (should be installed on a remote PC).&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-nao-robot ros-indigo-nao-extras&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;1、运行roscore&lt;/strong&gt;&lt;br&gt;
打开命令行窗口，这里我们称它为窗口1&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;roscore&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-mindcont.qbox.me/blog/images/ubuntu/ros/roscore.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、运行naoqi-bin 启动虚拟naoqi&lt;/strong&gt;&lt;br&gt;
再打开一个新的命令行窗口，这里我们称它为窗口2&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/naoqi/choregraphe-suite-2.1.4.13-linux64/bin/naoqi-bin --verbose --broker-ip 127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;broker-ip地址127.0.0.1是用于连接到您自己的PC的环回地址。 因此，只有本地ROS可以连接到NAOqi。 NAOqi API可以通过broker-ip地址访问，nao_driver充当NAOqi API的包装器。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-mindcont.qbox.me/blog/images/ubuntu/ros/naoqi-bin.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、然后启动ros_driver包，使ros连接到本地PC上的模拟Naoqi&lt;/strong&gt;&lt;br&gt;
再打开一个新的命令行窗口，这里我们称它为窗口3，在新终端中运行：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LD_LIBRARY_PATH=~/naoqi/choregraphe-suite-2.1.4.13-linux64/lib:$LD_LIBRARY_PATH NAO_IP=127.0.0.1 roslaunch naoqi_driver_py naoqi_driver.launch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：不要将此路径添加到.bashrc中的全局LD_LIBRARY_PATH，因为其他事情将会中断。 例如 rviz将无法运行与错误&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-mindcont.qbox.me/blog/images/ubuntu/ros/naoqi_driver_launch.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;完整输出如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;... logging to /home/pi/.ros/log/873f953c-c1d1-11e6-bfbe-68f728886d0f/roslaunch-MINDCONT-32499.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Checking log directory for disk usage. This may take awhile.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Press Ctrl-C to interrupt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Done checking log file disk usage. Usage is &amp;lt;1GB.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;started roslaunch server http://MINDCONT:44778/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SUMMARY&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;========&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PARAMETERS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* /naoqi_joint_states/use_odometry: True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* /rosdistro: indigo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* /rosversion: 1.11.20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NODES&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   nao_logger (naoqi_driver_py/naoqi_logger.py)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   naoqi_joint_states (naoqi_driver_py/naoqi_joint_states.py)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   naoqi_moveto (naoqi_driver_py/naoqi_moveto.py)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ROS_MASTER_URI=http://localhost:11311&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;core service [/rosout] found&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;process[naoqi_joint_states-1]: started with pid [32526]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;process[naoqi_moveto-2]: started with pid [32527]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;process[nao_logger-3]: started with pid [32528]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] [WallTime: 1481702387.495187] Connecting to NaoQi at 127.0.0.1:9559&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 32527 qimessaging.session: Session listener created on tcp://0.0.0.0:0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 32527 qimessaging.transportserver: TransportServer will listen on: tcp://172.17.0.1:34320&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 32527 qimessaging.transportserver: TransportServer will listen on: tcp://192.168.1.123:34320&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 32527 qimessaging.transportserver: TransportServer will listen on: tcp://127.0.0.1:34320&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此，你就通过ros -&amp;gt; naoqi_driver -&amp;gt; virtual NAOqi 会话过程的建立，但是还没有可视化过程，下面我们将进行可视化。&lt;/p&gt;
&lt;h3 id=&quot;通过rviz可视化模拟机器人-nao-robot&quot;&gt;通过rviz可视化模拟机器人 Nao robot&lt;/h3&gt;
&lt;p&gt;关闭所有的窗口，然后打开一个新的窗口，输入下面的指令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;roslaunch nao_description display.launch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在左上角的“显示”窗口中，将“固定框架”更改为“/ base_link”。如果只有“/ map”选项可用，则不会从上一步加载URDF模型。&lt;br&gt;
&lt;img src=&quot;https://dn-mindcont.qbox.me/blog/images/ubuntu/ros/fixed-frame-base_link.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击“添加”按钮并添加RobotModel&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-mindcont.qbox.me/blog/images/ubuntu/ros/add-robot-model.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果一切正常，你会看到一个机器人模型。通过调节右侧的滑块，机器人将做相应的动作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-mindcont.qbox.me/blog/images/ubuntu/ros/naoqi-display.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
&lt;img src=&quot;https://dn-mindcont.qbox.me/blog/images/ubuntu/ros/turtlebot.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果过程中遇到错误和问题，请参考下面的&lt;a href=&quot;http://blog.mindcont.coms/2016/12/14/ros-naoqi-ubuntu/#%E5%8F%82%E8%80%83&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考链接&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;本文系作者原创，&lt;strong&gt;转载注明出处 &lt;a href=&quot;http://blog.mindcont.com/2016/12/14/ros-naoqi-ubuntu/&quot;&gt;http://blog.mindcont.com/2016/12/14/ros-naoqi-ubuntu/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/openni/Contests/ROS%203D/Humanoid%20Teleoperation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Humanoid Teleoperation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/nao/Tutorials&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nao Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/cturtle/Installation/Ubuntu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ubuntu install of C turtle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/cn/indigo/Installation/Ubuntu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在Ubuntu中安装ROS Indigo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/nao&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ros-nao&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/nao/Tutorials/Installation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ros-nao-install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/nao/Tutorials/Getting-Started&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Getting started with ROS for Nao&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/nao/Tutorials/Getting-Started#Launching_ROS_on_a_virtual_NAOqi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Launching_ROS_on_a_virtual_NAOqi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;ROS( robot operating system) 是一款开源的面向与机器人控制领域的操作系统，起源于2007斯坦福大学人工智能实验室的项目与机器人技术公司Willow Garage 的个人机器人项目之间的合作，2008年之后由Willow Garage 推动，2010 年该公司将其开源，2015年，ros 发布了Jade 版本。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ros" scheme="http://blog.mindcont.com/tags/ros/"/>
    
  </entry>
  
  <entry>
    <title>naoqi robot 开发环境搭建</title>
    <link href="http://blog.mindcont.com/2016/12/14/naoqi-robot-sdk-ubuntu/"/>
    <id>http://blog.mindcont.com/2016/12/14/naoqi-robot-sdk-ubuntu/</id>
    <published>2016-12-14T02:52:41.000Z</published>
    <updated>2017-02-14T01:50:40.638Z</updated>
    
    <content type="html">&lt;p&gt;本文将带您完成naoqi robot SDK 在ubuntu 14.04(lts)下开发环境的配置,这里值得注意的是您不一定需要购买一个naoqi 机器人才能进行开发，这里可以选择使用虚拟机器人，一般开发过程中我们首先将程序指令在虚拟机器人中进行调试，待成功后下载到真实机器人中进行实地运行。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-mindcont.qbox.me/blog/images/ubuntu/ros/2016_DEV_PROG_launch_banner_600x360_mailing_V3_EN.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装-naoqi-choregraphe-suite&quot;&gt;安装　naoqi choregraphe suite&lt;/h3&gt;
&lt;p&gt;Choregraphe是一个多平台的桌面应用程序，允许您：&lt;/p&gt;
&lt;p&gt;1、创建动画，行为和对话框，&lt;br&gt;
2、在模拟机器人上或直接在真实机器人上测试它们，&lt;br&gt;
3、监控和控制你的机器人，&lt;br&gt;
4、使用自己的Python代码丰富Choregraphe行为。&lt;/p&gt;
&lt;p&gt;由于官方提供的链接国内下载容易失败，这里可以使用笔者已经下载好的文件。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget ftp://mindcont.com/IoT/Naoqi/Choregraphe/choregraphe-suite-2.1.4.13-linux64.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -xvf choregraphe-suite-2.1.4.13-linux64.tar.gz naoqi/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd ~/naoqi/choregraphe-suite-2.1.4.13-linux64/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./choregraphe&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-mindcont.qbox.me/blog/images/ubuntu/ros/choregraphe-license.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里先选择试用，当然你可以去&lt;a href=&quot;https://community.ald.softbankrobotics.com/en/developerprogram&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开发者社区&lt;/a&gt;申请为开发者，可以无限制的免费使用，但同一时间只能有一个　choregraphe运行。&lt;/p&gt;
&lt;p&gt;打开后界面如下,类似于matlab 工具箱中的模块化编程，可以在左下角中选择官方封装好的模块，然后用鼠标拖动到中间区域，连线使之成为一个通路，然后点击上方的绿色三角形，让虚拟机器人开始执行。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-mindcont.qbox.me/blog/images/ubuntu/ros/choregraphe.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;通过执行naoqi来检查安装是否成功:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd ~/naoqi/choregraphe-suite-2.1.4.13-linux64/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./naoqi-bin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你应该看到类似的输出:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pi@MINDCONT:~/naoqi/choregraphe-suite-2.1.4.13-linux64/bin$ ./naoqi-bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 core.naoqi: ..::: starting NAOqi version 2.1.4 :::..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 core.naoqi: Copyright (c) 2005-2013, Aldebaran Robotics&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 core.naoqi: Build tag: jenkins-release-2.1_choregraphe-suite_linux64-39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 qimessaging.servicedirectory: ServiceDirectory listener created on tcp://0.0.0.0:9559&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 qimessaging.transportserver: TransportServer will listen on: tcp://172.17.0.1:9559&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 qimessaging.transportserver: TransportServer will listen on: tcp://192.168.1.123:9559&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 qimessaging.transportserver: TransportServer will listen on: tcp://127.0.0.1:9559&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 qimessaging.servicedirectory: Registered Service &amp;quot;ServiceDirectory&amp;quot; (#1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 qimessaging.servicedirectory: Registered Service &amp;quot;LogManager&amp;quot; (#2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;．．．．&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;．．．．&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.LongTermMemory: User database creation succeed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: No dialog history management&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: AI system enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: BNF confidence 0.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: REMOTE confidence 0.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Serialization enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Upper SLM 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Enable auto update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Push mode 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Enable full speech recognition&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Audio expression enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Smalldisplacement enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Breath enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: No animated speech configuration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Default volume 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: No dialog history management&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: AI system enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: BNF confidence 0.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: REMOTE confidence 0.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Serialization enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Upper SLM 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Enable auto update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Push mode 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Enable full speech recognition&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Audio expression enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Smalldisplacement enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Breath enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: No animated speech configuration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 Dialog.preference: Default volume 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 qimessaging.servicedirectory: Registered Service &amp;quot;ALDialog&amp;quot; (#77)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[I] 27177 core.naoqi: NAOqi is ready...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装-naoqi-python-sdk&quot;&gt;安装　naoqi python SDK&lt;/h3&gt;
&lt;p&gt;这里我们采用 naoqi 官方提供的python 接口(类似的还可以选择 java 、c++ 步骤类似)，调用封装好的函数，实现自己的功能。我已经下载好windows、mac、linux 各个平台的开发所需的文件，大家可以在&lt;a href=&quot;ftp://mindcont.com/IoT/Naoqi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ftp://mindcont.com/IoT/Naoqi&lt;/a&gt;自行下载。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget ftp://mindcont.com/IoT/Naoqi/sdk/python/pynaoqi-python2.7-2.1.4.13-linux64.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -xvf pynaoqi-python2.7-2.1.4.13-linux64.tar.gz naoqi/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 配置环境变量，在打开的文本中添加下面的内容．注意换成你的路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gedit ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# edit for naoqi python sdk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export PYTHONPATH=$&amp;#123;PYTHONPATH&amp;#125;:/home/pi/naoqi/pynaoqi-python2.7-2.1.4.13-linux64/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 保存后，输入下面的指令使其生效&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开新的命令行窗口，用python 的导入naoqi 包，来测试你的路径是否配置成功。如果没有报错，那麽恭喜你完成了naoqi 机器人的开发环境搭建。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import naoqi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-mindcont.qbox.me/blog/images/ubuntu/ros/naoqi-python-sdk.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;
&lt;p&gt;下一步，我们会构建&lt;a href=&quot;http://blog.mindcont.com/2016/12/14/ros-naoqi-ubuntu/&quot;&gt;基于ROS的 naoqi 机器人开发环境&lt;/a&gt;的搭建，欢迎继续关注。&lt;/p&gt;
&lt;p&gt;本文系作者原创，&lt;strong&gt;转载注明出处 &lt;a href=&quot;http://blog.mindcont.com/2016/12/14/naoqi-robot-sdk-ubuntu/&quot;&gt;http://blog.mindcont.com/2016/12/14/naoqi-robot-sdk-ubuntu/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/nao/Tutorials/Getting-Started&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Getting started with ROS for Nao&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://doc.aldebaran.com/1-14/dev/python/install_guide.html#python-install-guide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python SDK Install Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://doc.aldebaran.com/2-1/software/choregraphe/choregraphe_overview.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Naoqi Robot Choregraphe doc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文将带您完成naoqi robot SDK 在ubuntu 14.04(lts)下开发环境的配置,这里值得注意的是您不一定需要购买一个naoqi 机器人才能进行开发，这里可以选择使用虚拟机器人，一般开发过程中我们首先将程序指令在虚拟机器人中进行调试，待成功后下载到真实机器人中进行实地运行。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ros" scheme="http://blog.mindcont.com/tags/ros/"/>
    
  </entry>
  
  <entry>
    <title>使用OpenWrt打造透明路由</title>
    <link href="http://blog.mindcont.com/2016/11/15/use-shadowsocks-on-openwrt/"/>
    <id>http://blog.mindcont.com/2016/11/15/use-shadowsocks-on-openwrt/</id>
    <published>2016-11-15T12:32:36.000Z</published>
    <updated>2017-07-27T10:10:26.368Z</updated>
    
    <content type="html">&lt;p&gt;Openwrt是用于路由器的高度模块化，高度智能化的嵌入式Linux发行版，具有强大的扩展性，有数百个编译好的软件可供安装。Openwrt版本的Shadowsocks，具有透明代理，UDP转发等功能，透明代理实现流量转发，DNS的污染问题则通过UDP转发解决(DNS查询使用UDP协议)。&lt;/p&gt;
&lt;h2 id=&quot;前提&quot;&gt;前提&lt;/h2&gt;
&lt;p&gt;本方案实施的前提条件：一台支持刷为Openwrt的路由器，一台PC机，Shadowscosks账号。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;思路&lt;/h2&gt;
&lt;p&gt;本方案翻墙流程大致如下：客户端发出某域名的DNS请求–&amp;gt;chinadns解析–&amp;gt;解析到的IP存入ipset表中–&amp;gt;设置iptables规则，ipset表中的ip地址全部走SS代理端口–&amp;gt;正常浏览被墙网站。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;路由器网络(Network)-&amp;gt;DHCP and DNS 即（dnsmasq进程）将所有的dns解析任务转发到本地127.0.0.1:5353 端口&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;chinadns 监听本地5353端口，分别对国内IP和国外Ip双向过滤，并向它的上一级请求219.149.6.99（ISP供应商）和8.8.8.8（谷歌DNS）,从而实现国内国外走不同的线路。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再配置ipset表和iptables规则，将解析到的IP存入ipset表中–设置iptables规则，ipset表中的ip地址（即dnsmasq.d/dnsmasq_list.conf.conf文件中的地址）全部走SS代理端口(如本地1080端口)–正常浏览被墙网站。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;而这里的shadowsocks中的ss-redir 负责监听本地端口1080，负责将收到的包经由ss，加密socks代理至ss服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;配置&quot;&gt;配置&lt;/h2&gt;
&lt;h3 id=&quot;安装shasowsocks和chinadns&quot;&gt;安装shasowsocks和chinadns&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/openwrt/shadowsocks-install.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
chinadns 的安装过程类似。&lt;/p&gt;
&lt;h3 id=&quot;配置shadowsocks&quot;&gt;配置Shadowsocks&lt;/h3&gt;
&lt;p&gt;在windows下使用SSH工具，如&lt;a href=&quot;http://www.chiark.greenend.org.uk/~sgtatham/putty/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Putty&lt;/a&gt;等，在Host name 填写192.168.1.1，端口22 ，然后点击 Open.&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/openwrt/putty.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在linux下，打开终端输入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh root@192.168.1.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输人密码（默认 admin）登陆,如下图所示&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/openwrt/welcome.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;配置 /etc/shadowsocks.json：运行命令vi /etc/shadowsocks.json，格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;server&amp;quot;: &amp;quot;X.X.X.X&amp;quot;,    #这里填写你的SS服务器IP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;server_port&amp;quot;: 443,     #SS服务器端口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;local_port&amp;quot;: 1080,     #本地端口1080&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;password&amp;quot;: &amp;quot;password&amp;quot;, # 密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;timeout&amp;quot;: 60,          # 超时时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;method&amp;quot;: &amp;quot;chacha20&amp;quot;    # 加密方式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;按　esc ，输入：wq! 保存&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改 /etc/init.d/shadowsocks，通过指令vi /etc/init.d/shadowsocks 注释掉ss-local，取消掉ss-redir（透明代理）。格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/sh /etc/rc.common&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;START=95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SERVICE_USE_PID=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SERVICE_WRITE_PID=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SERVICE_DAEMONIZE=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CONFIG=/etc/shadowsocks.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;start() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #service_start /usr/bin/ss-local -c $CONFIG -b 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        service_start /usr/bin/ss-redir -c $CONFIG -b 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #service_start /usr/bin/ss-tunnel -c $CONFIG -b 0.0.0.0 -l 5353 -L 8.8.8.8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stop() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #service_stop /usr/bin/ss-local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        service_stop /usr/bin/ss-redir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #service_stop /usr/bin/ss-tunnel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;按　esc ，输入：wq! 保存&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;配置dnsmasq和ipset&quot;&gt;配置dnsmasq和ipset&lt;/h3&gt;
&lt;p&gt;修改 /etc/dnsmasq.conf&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd /etc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi dnsmasq.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在文本末尾填写如下内容&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# add this for dnsmasq config 2016/11/15                              &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conf-dir=/etc/dnsmasq.d  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;按　esc ，输入：wq! 保存&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;新建并进入目录 /etc/dnsmasq.d，下载&lt;a href=&quot;http://pan.baidu.com/s/1pKl8AgV&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dnsmasq_list.conf&lt;/a&gt;并放在该目录下（本人仅添加了谷歌，Youtube，脸书，推特等等常用域名，该列表持续更新中。注意域名太多反而会影响dnsmasq的性能！）。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir dnsmasq.d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd dnsmasq.d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 将下载的dnsmasq_list.conf 放到dnsmasq.d 目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# windows 下可通过winscp 工具上传&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# linux 下通过  scp pi@192.168.113:/home/pi/dnsmasq_list.conf .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;luci界面配置&quot;&gt;Luci界面配置&lt;/h3&gt;
&lt;p&gt;这一部分我们通过openwrt 的web管理界面进行配置。在浏览器输入 192.168.1.1 登录路由器管理界面，默认账户root 默认密码：admin。&lt;/p&gt;
&lt;h4 id=&quot;配置路由器dns-dnsmasq&quot;&gt;配置路由器DNS(dnsmasq)&lt;/h4&gt;
&lt;p&gt;进入网络(Network)-&amp;gt;DHCP and DNS。&lt;br&gt;
将DNS解析端口设置为127.0.0.1#5353。这将使得路由器将DNS请求经由dnsmasq全部转发至ChinaDNS处理。&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/openwrt/dhcp.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;勾选“忽略解析文件”(ignore resolve file), 保存并应用&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/openwrt/dhcp_hosts.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;chinadns配置&quot;&gt;ChinaDNS配置&lt;/h4&gt;
&lt;p&gt;在路由器web管理页面，进入服务(Services)-&amp;gt;ChinaDNS&lt;br&gt;
本地端口写5353，中国路由表(CHNRoute File)填/etc/chinadns_chnroute.txt&lt;br&gt;
上游DNS服务器填114.114.114.114,.8.8.8.8。（可将114.114.114.114改成当前ISP提供的DNS服务器IP）&lt;br&gt;
保存并应用&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/openwrt/chinadns.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这样设置后，从内网主机端发出的国外DNS请求将发送至：dnsmasq-&amp;gt;ChinaDNS-&amp;gt;8.8.8.8，&lt;br&gt;
国内DNS请求则：dnsmasq-&amp;gt;ChinaDNS-&amp;gt;114.114.114（或你的ISP供应商的DNS）。&lt;/p&gt;
&lt;h4 id=&quot;shadowsocks-配置&quot;&gt;shadowsocks 配置&lt;/h4&gt;
&lt;p&gt;进入服务(Services)-&amp;gt;ShadowSocks 。访问控制－&amp;gt;接口-WAN 被忽略的IP 列表选择 chinadns路由表,保存并应用。&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/openwrt/shadowsocks_udp.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;自定义防火墙&quot;&gt;自定义防火墙&lt;/h4&gt;
&lt;p&gt;进入Luci界面-网络-防火墙-自定义规则，加入以下规则（最后的1080是Shadowsocks的本地端口，请酌情修改）：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ipset -N gfwlist iphash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iptables -t nat -A PREROUTING -p tcp -m set --match-set gfwlist dst -j REDIRECT --to-port 1080&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iptables -t nat -A OUTPUT -p tcp -m set --match-set gfwlist dst -j REDIRECT --to-port 1080&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如下图所示&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/openwrt/iptable.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;调试&quot;&gt;调试&lt;/h3&gt;
&lt;p&gt;路由器&lt;strong&gt;重启后&lt;/strong&gt;，即可无界访问了。如果遇到问题，请打开&lt;strong&gt;下面的参考链接&lt;/strong&gt;。可以通过　netstat -nl 查看当前活动的链接，看看相应的端口是否已经打开。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root@DEEPMIND:~# netstat -nl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Active Internet connections (only servers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Proto Recv-Q Send-Q Local Address           Foreign Address         State       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp        0      0 0.0.0.0:139             0.0.0.0:*               LISTEN      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp        0      0 0.0.0.0:53              0.0.0.0:*               LISTEN      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp        0      0 0.0.0.0:1080            0.0.0.0:*               LISTEN      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp        0      0 0.0.0.0:445             0.0.0.0:*               LISTEN      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp        0      0 :::139                  :::*                    LISTEN      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp        0      0 :::80                   :::*                    LISTEN      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp        0      0 :::53                   :::*                    LISTEN      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp        0      0 :::22                   :::*                    LISTEN      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp        0      0 :::445                  :::*                    LISTEN      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 127.0.0.1:53001         0.0.0.0:*                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 0.0.0.0:53              0.0.0.0:*                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 0.0.0.0:67              0.0.0.0:*                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 0.0.0.0:35696           0.0.0.0:*                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 192.168.1.255:137       0.0.0.0:*                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 192.168.1.1:137         0.0.0.0:*                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 0.0.0.0:137             0.0.0.0:*                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 192.168.1.255:138       0.0.0.0:*                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 192.168.1.1:138         0.0.0.0:*                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 0.0.0.0:138             0.0.0.0:*                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 0.0.0.0:5353            0.0.0.0:*                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 0.0.0.0:54250           0.0.0.0:*                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 :::547                  :::*                                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;udp        0      0 :::53                   :::*                                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;raw        0      0 0.0.0.0:1               0.0.0.0:*               1           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;raw        0      0 ::%4559988:58           :::*                    58          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;raw        0      0 ::%4559988:58           :::*                    58          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Active UNIX domain sockets (only servers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Proto RefCnt Flags       Type       State         I-Node Path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unix  2      [ ACC ]     STREAM     LISTENING       2315 /var/nmbd/unexpected&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unix  2      [ ACC ]     STREAM     LISTENING        379 /var/run/ubus.sock&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过　top 查看当前活动进程。下图是我配置好以后的运行进程。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Mem: 26204K used, 3300K free, 0K shrd, 1908K buff, 6840K cached&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CPU:   1% usr   0% sys   0% nic  96% idle   0% io   0% irq   1% sirq&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Load average: 0.00 0.01 0.05 2/45 11322&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PID  PPID USER     STAT   VSZ %VSZ %CPU COMMAND&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 1891     1 root     S     1732   6%   1% /usr/sbin/hostapd -P /var/run/wifi-ph&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  916     1 root     S     1544   5%   0% /sbin/netifd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11309   993 root     S     1216   4%   0% /usr/sbin/dropbear -F -P /var/run/dro&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 1574     1 root     S     1484   5%   0% &amp;#123;mwan3track&amp;#125; /bin/sh /usr/sbin/mwan3t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11320 11312 root     R     1484   5%   0% top&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  882     1 root     S     1048   4%   0% /sbin/logd -S 16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 1413     1 root     S      832   3%   0% /usr/bin/chinadns -p 5353 -s 219.149.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 1387     1 root     S     8912  30%   0% /usr/sbin/collectd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 1325     1 root     S     3180  11%   0% /usr/sbin/nmbd -D&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 1323     1 root     S     3088  10%   0% /usr/sbin/smbd -D&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 1434     1 root     S     3040  10%   0% /usr/bin/ss-redir -c /etc/shadowsocks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 1371     1 nobody   S     2068   7%   0% /usr/sbin/dnsmasq -C /var/etc/dnsmasq&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 1028     1 root     S     1580   5%   0% /usr/sbin/uhttpd -f -h /www -r OpenWr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 1463     1 root     S     1484   5%   0% /usr/sbin/ntpd -n -p 0.openwrt.pool.n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  975     1 root     S     1484   5%   0% /usr/sbin/crond -f -c /etc/crontabs -&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11312 11309 root     S     1484   5%   0% -ash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11322  1574 root     S     1472   5%   0% sleep 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1     0 root     S     1420   5%   0% /sbin/procd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  953     1 root     S     1184   4%   0% /usr/sbin/odhcpd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  993     1 root     S     1148   4%   0% /usr/sbin/dropbear -F -P /var/run/dro&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://php-rmcr7.rhcloud.com/openwrt-fq/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;教你如何实现Openwrt路由器智能翻墙&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://undownding.me/2015/02/10/use-shadowsocks-on-openwrt/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在 OpenWRT 上使用 ShadowSocks 建立透明代理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chionlab.moe/2016/01/23/openwrt-bypass-gfw-solution/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenWRT路由器上的ShadowSocks+ChinaDNS搭梯子方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.logcg.com/archives/860.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;路由器刷OpenWRT安装shadowsocks使用透明代理+去DNS污染&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.logcg.com/archives/868.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;路由器刷OpenWRT使用ShadowSocks透明代理进阶配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.shintaku.cc/2016/06/01/chinadns/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ChinaDNS+ShadowSocks实现路由器透明代理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Openwrt是用于路由器的高度模块化，高度智能化的嵌入式Linux发行版，具有强大的扩展性，有数百个编译好的软件可供安装。Openwrt版本的Shadowsocks，具有透明代理，UDP转发等功能，透明代理实现流量转发，DNS的污染问题则通过UDP转发解决(DNS查询使用
    
    </summary>
    
    
      <category term="树莓派" scheme="http://blog.mindcont.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>发布自己的软件包存档</title>
    <link href="http://blog.mindcont.com/2016/11/13/ppa/"/>
    <id>http://blog.mindcont.com/2016/11/13/ppa/</id>
    <published>2016-11-13T11:45:31.000Z</published>
    <updated>2017-07-27T10:10:28.312Z</updated>
    
    <content type="html">&lt;p&gt;PPA，或是Personal Package Archive（个人软件包存档），是默认情况下并未被包含在Ubuntu中的软件的一个集合。使用个人包存档（PPA），您可以直接向Ubuntu用户分发软件和更新。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;创建你的源码包，上传它，Launchpad将构建二进制文件，然后将它们托管在您自己的apt存储库中。 这意味着Ubuntu用户可以安装您的软件包，就像安装标准Ubuntu软件包一样，他们会自动接收更新。&lt;/p&gt;
&lt;p&gt;Launchpad中的每个个人和团队都可以拥有一个或多个PPA，每个PPA都有自己的URL。 您在PPA中发布的软件包将保留在那里，直到您删除它们，它们将被您上传的另一个软件包或其所构建的Ubuntu版本所取代。&lt;/p&gt;
&lt;h2 id=&quot;前期准备&quot;&gt;前期准备&lt;/h2&gt;
&lt;p&gt;而创建一个属于自己维护的PPA，大致包括一下流程：创建自己的GPG KEY密钥(用于对软件包认证和签名)，SSH KEY,创建launchpad账户并配置密钥，安装打包环境，编写软件包，打包测试，对生成的软件包认证，最后上传到launchpad。下面我将逐步的介绍。&lt;/p&gt;
&lt;h3 id=&quot;安装打包需要的软件环境&quot;&gt;安装打包需要的软件环境&lt;/h3&gt;
&lt;p&gt;Ubuntu 11.10之前&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install gnupg pbuilder ubuntu-dev-tools bzr-builddeb apt-file&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Ubuntu 11.10之后，可以通过如下命令安装：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install packaging-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建自己的gpg-key&quot;&gt;创建自己的GPG key&lt;/h3&gt;
&lt;p&gt;1991年，程序员&lt;a href=&quot;http://en.wikipedia.org/wiki/Phil_Zimmermann&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Phil Zimmermann&lt;/a&gt;为了避开政府监视，开发了加密软件PGP。这个软件非常好用，迅速流传开来，成了许多程序员的必备工具。但是，它是商业软件，不能自由使用。所以，自由软件基金会决定，开发一个PGP的替代品，取名为GnuPG。这就是GPG的由来。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://xn--launchpad-pb6n94fpoy24ae3c210bogjqyv3m1aou8kq1ya.net&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如果想要将软件包上传到launchpad.net&lt;/a&gt;，就必须使用gpg签名。要配置gpg，可以参考gpp官网上的&lt;a href=&quot;http://www.gnupg.org/howtos/zh/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;袖珍说明书&lt;/a&gt;。&lt;strong&gt;注意&lt;/strong&gt;，过程中会要求你输入一个加密密码，一定要记住，不要乱写！！！&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gpg --gen-key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/ppa/gpgkey.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
之后你应该会看到如下信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pub   2048R/AA08D2A8 2014-03-25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       密钥指纹 = 5EAC 8E2F 5507 E388 E316  3AD9 F894 2D76 AA08 D2A8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uid                  zhangxin (openyoudao) &amp;lt;justzx2011@gmail.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sub   2048R/8A54FE05 2014-03-25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;其中AA08D2A8是生成的key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将key的公共部分上传到key server，这样全世界的开发者就可以根据你的key来识别你的信息和文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# gpg --send-keys --keyserver keyserver.ubuntu.com &amp;lt;KEY ID&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这里的&amp;lt;KEY ID&amp;gt;　用你的　pub 字段中　2048R/****　中的****替换，如下例所示&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gpg --send-keys --keyserver keyserver.ubuntu.com AA08D2A8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建你的ssh-key&quot;&gt;创建你的ssh key&lt;/h3&gt;
&lt;p&gt;ssh 代表安全的shell ,这里用来安全的把文件上传到PPA发布平台&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建pbuilder&quot;&gt;创建pbuilder&lt;/h3&gt;
&lt;p&gt;pbuilder 是允许开发者在本地创建PPA包的工具&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;如果是Ubuntu 13.04 (代号 Raring Ringtail)，所以执行如下命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pbuilder-dist raring create&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果是Ubuntu 14.04 (代号 Trusty Tahr)，则执行：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pbuilder-dist trusty create&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后便是漫长的等待…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/ppa/pbuilder.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建launchpad账户&quot;&gt;创建Launchpad账户&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://login.launchpad.net/+new_account&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网注册&lt;/a&gt;,之后上传GPG key到Launchpad。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;通过如下指令查看自己的GPG key：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gpg ­­--fingerprint &amp;lt;email@address.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如我的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pi@DeepMind:~$ gpg --fingerprint bond@mindcont.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/home/pi/.gnupg/pubring.gpg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pub   4096R/D38B4796 2016-04-12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      密钥指纹 = EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uid                  Google Inc. (Linux Packages Signing Authority) &amp;lt;linux-packages-keymaster@google.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sub   4096R/640DB551 2016-04-12 [有效至：2019-04-12]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pub   2048R/D059E4D9 2016-11-11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      密钥指纹 = AD34 CE83 5C79 C68B A81D  4F02 ED3C A58E D059 E4D9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uid                  zhangzhengxuan &amp;lt;bond@mindcont.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sub   2048R/EDE83100 2016-11-11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;登陆你的launchpad，选择下图红框的位置&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/ppa/upload_gpg_key_1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后填写刚才我们查找的pub字段，密钥指纹中的字符串&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/ppa/upload_gpg_key_2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击　import 之后，系统会发送一封邮件到你的邮箱，用来对导入的key进行验证。你需要用自己的私钥对服务器用你刚上传公钥加密的内容进行解密 。&lt;strong&gt;其中邮件的内容为不可读的&lt;/strong&gt;,需要解密的内容类似于：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;­­­­­BEGIN PGP MESSAGE­­­­­&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Version: GnuPG v1.4.3 (GNU/Linux)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  hQIOA0THhKozD+K5EAf9F3PcOL2iU6onH2YsvB6IKDXNxbK0NBVy6ppxcNq8hoTe&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  cuHvzWLFfh1ehhSNe1V6xpuFnt5sJoeA4qEEOxez3HmY80tKIKMPLyhC/8JiSIW9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fwuxj4C0F6pdyrpvGbQAzfPEFk/P1AtIHXm4WLXduhBT7YEpmUk/I4A/KlSrKoiP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  J5vBtbroUyp2jvIhDUmY7ToU+ifrDe3+VP1ZzSEJzOOXec9oPbcbvf5NptXA7Hbp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  S0ElBAcLjKpAu7VKotCwFZIsVXDHT/mxf2qm88bGIrlXS5uTzvmyhQps1KmyNiCz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  I0i5kSVvHZWyVZ+8FrROLqYAqqnEIMg9hUnbFAervgf/YiYs0xxWLYf9e14eoMZA&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ranGT72q/JHmBNBYenOijaquFNi1TH5J8Udtt2RfdyRUlmGilxRvtIYL8gpnuNpS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  +GHOoBWUN2f4nawaDeqgrf6Nt3qQWWLO4iJPgieejFP2FP6zkLme1t7dXo+z1ary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  EZuxSLtKIWkOFEZ8Gcn02hBgOhJZucnkF6BmVW9dr1C4QEAmGM631uqfsp5PapAn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  yjHbEU1L2R9i7vPtJNRr6ubFLWg1Yhfv63ByxSx/WQHMMqlrbL+moXBGED3L2hM8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  7FP9eapBRgmS+Bda9ArcGMUElTOkWoUYIOPyLOYmo15LvbxHOVaXjn7+fDgr2S1J&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  R9LArwHycmdKKelRww+ZvylHIfq8xy10atRQIYawchh9A1myXD1TlWbrrIkodQJF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  iEpO2i1LKvqwZHOx3szT4hF+44tNFzQIL1j+zF5Hrt2WOTnS5WXGgGRtfEd8F7fN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  khQZOAdhwrnlY+yknruC8Y8Jm8vM57+KnPgBfvxuxzLX1XFTfTZCHXeUmwwu3mga&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  m+6WzckeBGBDHKK6GqwFoOAykTwjyqOZaty7DPHeoINc0tLMVr9Ks64DScf8bgh4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  MkNonA0YhMQbkmwRc33APw441+/iLw5gqndQdX44kKqC71dG6LqanAOjD29Xj3JV&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ZBsjg95Jrx7Sx+i/V0PUeaU9QjCT0Q1jEy1Bcs8NYtTJnpG+4oHYJ0pyiGxIquQH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  V9E+hW6Qehx5DbsIXEvfeaBBHOfAHHOhUH14WK4bsJWm8wZ50XiYBZrNFOqzsm13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  2STcY4VIoJp3Uw2qNyvZXQUhpndlfgQGO14CMSadzDn6Vts=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  =hTe6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  END PGP MESSAGE­­­­­&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将邮件中这些内容拷贝到一个文件中，例如：file.txt，然后执行如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gpg --decrypt file.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此时会提示你输入之前设置的&lt;strong&gt;加密私钥key密码&lt;/strong&gt;，解密成功后，会有如下提示：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Please go here to finish adding the key to your Launchpad account:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[https://launchpad.net/token/bP56TDKg8HXQbBs6LsN0]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;复制该链接，在浏览器中打开，即完成了GPG key 上传。同样的方法，我们还要&lt;strong&gt;上传SSH KEY&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;打开id_rsa.pub文件,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gedit ~/.ssh/id_rsa.pub&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;将其中的内容拷贝到帐号的add ssh key文本框中，选择导入后完成上传&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;配置-bazzar和环境变量&quot;&gt;配置 Bazzar和环境变量&lt;/h3&gt;
&lt;p&gt;Bazzar一个版本控制软件同git一样,可以管理代码,&lt;a href=&quot;http://doc.bazaar.canonical.com/latest/en/mini-tutorial/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bazaar in five minutes&lt;/a&gt; 。这里我们安装一个bzr可视化管理工具，详见&lt;a href=&quot;http://doc.bazaar.canonical.com/explorer/en/install-linux.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bzr explorer install&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo add-apt-repository ppa:bzr-explorer-dev/ppa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install bzr-explorer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;告诉Bazzar你是谁,和git 中全局信息设置类似。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bzr whoami &amp;quot;xin zhang &amp;lt;justzx2011@gmail.com&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bzr launchpad-login justzx2011（我的Launchpad账户id）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 之后可以通过输入, 查看你的配置信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bzr whoami&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置你的shell环境变量&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 打开.bashrc 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gedit ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在文件开头加上如下内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export DEBFULLNAME=&amp;quot;xin zhang&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export DEBEMAIL=&amp;quot;justzx2011@gmail.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 执行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;打包上传&quot;&gt;打包上传&lt;/h2&gt;
&lt;h3 id=&quot;安装编译工具&quot;&gt;安装编译工具&lt;/h3&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install build-essential dh-make&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里我们使用openyoudao 软件包为例说明一个软件包的上传过程。首先下载Openyoudao源码包，Openyoudao代码托管在Github上，下载源码包，首先感谢 Linux之父&lt;a href=&quot;http://zh.wikipedia.org/wiki/%E6%9E%97%E7%BA%B3%E6%96%AF%C2%B7%E6%89%98%E7%93%A6%E5%85%B9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;林纳斯·托瓦兹&lt;/a&gt;发明了Git，为世界创造了一个知识传递平台.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://github.com/justzx2011/openyoudao/archive/beta0.2.tar.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;根据模板生成配置文件&quot;&gt;根据模板生成配置文件&lt;/h3&gt;
&lt;p&gt;bzr-builddeb包括一个插件，用于从模板创建一个新的包。 插件是一个包装　dh_make命令，如果你安装了packaging-dev，你应该已经有了这些。 运行命令，提供上游tarball的软件包名称，版本号和路径。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bzr dh-make openyoudao 0.2 beta0.2.tar.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后你会看到,配置信息和本地软件包的编译位置。如 /home/pi/work/openyoudao&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pi@DeepMind:~/work$ bzr dh-make openyoudao 0.2 beta0.2.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Fetching tarball                                                               &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Looking for a way to retrieve the upstream tarball&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Upstream tarball already exists in build directory, using that&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type of package: single binary, indep binary, multiple binary, library, kernel module, kernel patch?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [s/i/m/l/k/n] s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Maintainer name  : zhengxuan zhang&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Email-Address    : bond@mindcont.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Date             : Sun, 13 Nov 2016 16:57:30 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Package Name     : openyoudao&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Version          : 0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;License          : blank&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type of Package  : Single&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hit &amp;lt;enter&amp;gt; to confirm:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Skipping creating ../openyoudao_0.2.orig.tar.gz because it already exists&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Currently there is no top level Makefile. This may require additional tuning.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Done. Please edit the files in the debian/ subdirectory now. You should also&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;check that the openyoudao Makefiles install into $DESTDIR and not in / .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Package prepared in /home/pi/work/openyoudao&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;修改配置文件&quot;&gt;修改配置文件&lt;/h3&gt;
&lt;p&gt;这里我们主要修改openyoudao/debian/changelog　、control 两个文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;changelog文件中修改　trusty为ubuntu 14.04 的版本代号（代表我们的软件包运行平台）和版本号&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;openyoudao (0.2-1) trusty; urgency=low&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * Initial release 1.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;control　文件中修改　Section: net　不然会报错。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Source: openyoudao&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Section: net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Priority: optional&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Maintainer: zhengxuan zhang &amp;lt;bond@mindcont.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Build-Depends: debhelper (&amp;gt;= 8.0.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Standards-Version: 3.9.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Homepage: &amp;lt;insert the upstream URL, if relevant&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Vcs-Git: git://git.debian.org/collab-maint/openyoudao.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Vcs-Browser: http://git.debian.org/?p=collab-maint/openyoudao.git;a=summary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Package: openyoudao&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Architecture: any&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Depends: $&amp;#123;shlibs:Depends&amp;#125;, $&amp;#123;misc:Depends&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Description: &amp;lt;insert up to 60 chars description&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;insert long description, indented with spaces&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里的配置信息很重要，不然你最后将软件包上传之后，可能会收到系统发送的拒绝邮件。你可能会遇到下面几个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;错误1&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Rejected:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Unable to find distroseries: unstable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Further error processing not possible because of a critical previous error.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openyoudao (0.2-1) unstable; urgency=low&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * Initial release (Closes: #nnnn)  &amp;lt;nnnn is the bug number of your ITP&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解决方法：修改changelog文件中修改 将unstable 修改为ubuntu 对于平台版本代号 例如14.04 为trusty&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;错误2&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Rejected:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;opencv_2.1.0-1.dsc: Unknown section &amp;apos;unknown&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;opencv_2.1.0.orig.tar.gz: Unknown section &amp;apos;unknown&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;opencv_2.1.0-1.debian.tar.gz: Unknown section &amp;apos;unknown&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Further error processing not possible because of a critical previous error.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;opencv (2.1.0-1) trusty; urgency=low&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * Initial release (Closes: #nnnn)  &amp;lt;nnnn is the bug number of your ITP&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解决方法：修改control 文件中Section:unknown 为Section: net&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;错误3&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Rejected:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;File opencv_2.1.0.orig.tar.gz already exists in Primary Archive for Ubuntu, but uploaded version has different contents. See more information about this error in https://help.launchpad.net/Packaging/UploadErrors.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Files specified in DSC are broken or missing, skipping package unpack verification.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;opencv (2.1.0-1) trusty; urgency=low&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * Initial release 0.1.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解决办法：&lt;br&gt;
你上传的opencv_2.1.0.orig.tar.gz 已经存在于官方维护的存档中，你上传的版本与官方的冲突。更改版本号。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;值得注意的是，这里大部分错误信息都可以在&lt;a href=&quot;https://help.launchpad.net/Packaging/UploadErrors&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方的文档&lt;/a&gt;中找到解决方法。参照打好的包： &lt;a href=&quot;https://github.com/justzx2011/openyoudao/tree/beta&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/justzx2011/openyoudao/tree/beta&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;将修改提交到打包分支&quot;&gt;将修改提交到打包分支&lt;/h3&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd openyoudao&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bzr commit -m &amp;quot;Initial commit of Debian packaging.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后你应该会看到如下信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pi@DeepMind:~/work/openyoudao$ bzr commit -m &amp;quot;Initial commit of Debian packaging.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Committing to: /home/pi/work/openyoudao/                                       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;added debian&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;added debian/README.Debian&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;added debian/README.source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;added debian/changelog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;added debian/compat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;added debian/control&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;added debian/copyright&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;added debian/docs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;added debian/rules&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;added debian/source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Committed revision 2.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;在当前环境中编译软件包&quot;&gt;在当前环境中编译软件包&lt;/h3&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bzr builddeb -- -us -uc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;附 debuild命令例子:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;只生成二进制包，不签名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;debuild -us -uc -b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;生成二进制包和源码包，不签名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;debuild -us -uc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;生成二进制包和源码包，签名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;debuild -sa -k42AA6EC7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;只生成源码包，签名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;debuild -S -sa -k42AA6EC7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;只生成只包含debian打包脚本部分的源码包，签名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;debuild -S -sd -k42AA6EC7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;软件包生成完毕后，可以使用dpgk-deb来查看其内容清单。&lt;/p&gt;
&lt;h3 id=&quot;检测软件包是否存在bug&quot;&gt;检测软件包是否存在bug&lt;/h3&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd ..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lintian openyoudao_0.2-1ubuntu1.dsc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后你应该会看到如下信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pi@DeepMind:~/work$ lintian openyoudao_0.2-1.dsc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;E: openyoudao source: source-is-missing cache/js/autocomplete.r156903.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;E: openyoudao source: source-is-missing cache/js/jquery-ui.min.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;E: openyoudao source: source-is-missing cache/js/jquery.min.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;E: openyoudao source: source-is-missing cache/js/result-min.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W: openyoudao source: package-needs-versioned-debhelper-build-depends 9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W: openyoudao source: superfluous-clutter-in-homepage &amp;lt;insert the upstream URL, if relevant&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W: openyoudao source: bad-homepage &amp;lt;insert the upstream URL, if relevant&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W: openyoudao source: out-of-date-standards-version 3.9.4 (current is 3.9.5)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里有几个错误信息，我们先略过，不影响下面的操作。&lt;/p&gt;
&lt;h3 id=&quot;给软件包签名&quot;&gt;给软件包签名&lt;/h3&gt;
&lt;p&gt;这里我们用我们上传到launchpad中的GPG KEY 对我们的软件包进行签名。如果忘记自己的公钥代码，可以参加上面进行查询。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd openyoudao&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;debuild -S -kD059E4D9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;上传软件包&quot;&gt;上传软件包&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;编辑~/.dput.cf&lt;br&gt;
通过上面的一系列流程，我们生成了一组经过数字签名的文件，最后需要做的是将这些文件上传到ppa官方的ftp，此时会用到一个叫dput的软件，要使用dput，首先要编辑文件&lt;sub&gt;/.dput.cf，没有就创建.在这个文件里面定义要上传的Launchpad账号。我的&lt;/sub&gt;/.dput.cf文件内容如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[openyoudao]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fqdn = ppa.launchpad.net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;method = ftp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;incoming = ~mindcont/openyoudao/ubuntu/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;login = anonymous&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;allow_unsigned_uploads = 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;执行上传&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd ..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dput ppa:mindcont/openyoudao openyoudao_0.2-1_source.changes　＃上传方式一&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dput openyoudao openyoudao_0.2-1_source.changes＃上传方式二，这里的openyoudao 就是我们上一步配置中的[openyoudao]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后你应该会看到如下信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pi@DeepMind:~/work$ dput ppa:mindcont/opencv2.1 openyoudao_0.2-1_source.changes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Package has already been uploaded to ppa on ppa.launchpad.net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Nothing more to do for openyoudao_0.2-1_source.changes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pi@DeepMind:~/work$ dput ppa:mindcont/opencv2.1 openyoudao_0.2-1_source.changes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Checking signature on .changes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gpg: 于 2016年11月13日 星期日 17时11分20秒 CST 创建的签名，使用 RSA，钥匙号 D059E4D9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gpg: 完好的签名，来自于“zhangzhengxuan &amp;lt;bond@mindcont.com&amp;gt;”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Good signature on /home/pi/work/openyoudao_0.2-1_source.changes.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Checking signature on .dsc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gpg: 于 2016年11月13日 星期日 17时11分20秒 CST 创建的签名，使用 RSA，钥匙号 D059E4D9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gpg: 完好的签名，来自于“zhangzhengxuan &amp;lt;bond@mindcont.com&amp;gt;”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Good signature on /home/pi/work/openyoudao_0.2-1.dsc.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Uploading to ppa (via ftp to ppa.launchpad.net):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Uploading openyoudao_0.2-1.dsc: done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Uploading openyoudao_0.2.orig.tar.gz: done.    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Uploading openyoudao_0.2-1.debian.tar.gz: done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Uploading openyoudao_0.2-1_source.changes: done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Successfully uploaded packages.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说明我们上传成功，这里你的邮箱会收到一封ppa发来的邮件，内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Accepted:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; OK: openyoudao_0.2.orig.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; OK: openyoudao_0.2-1.debian.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; OK: openyoudao_0.2-1.dsc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     -&amp;gt; Component: main Section: net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openyoudao (0.2-1) trusty; urgency=low&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * Initial release 1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://launchpad.net/~mindcont/+archive/ubuntu/openyoudao&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You are receiving this email because you made this upload.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来就静待官方编译吧,编译进度可以在 Overview of published packages》View package details 中查看&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/ppa/build.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;编译完成后，就可以通过ppa源进行安装了&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/ppa/build_success.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo add-apt-repository ppa:mindcont/openyoudao&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install openyoudao&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;创建launchpad账户》配置GPG密钥》配置ssh》创建project》编写软件包》创建本地编译环境》编译软件包》签名》上传　.changefile》等待官方确认邮件.&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://openyoudao.org/%E5%A6%82%E4%BD%95%E5%9C%A8ubuntu%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%88%B6%E4%BD%9C%E8%87%AA%E5%B7%B1%E7%9A%84ppa%E5%AE%89%E8%A3%85%E5%8C%85&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何在ubuntu系统下制作自己的ppa安装包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mobibrw.com/2016/3138&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ubuntu 15.10系统下制作自己的PPA安装包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2013/07/gpg.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GPG入门教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ibm.com/developerworks/community/blogs/5144904d-5d75-45ed-9d2b-cf1754ee936a/entry/%25e4%25b8%25badebian%25e5%2592%258cubuntu%25e5%2588%25b6%25e4%25bd%259c%25e8%25bd%25af%25e4%25bb%25b6%25e5%258c%2585_%25e4%25b8%2589?lang=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;为Debian和Ubuntu制作软件包(三)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://packaging.ubuntu.com/html/packaging-new-software.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Packaging New Software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://help.launchpad.net/Packaging/PPA/Uploading#The_easy_way:_FTP_in_Ubuntu_9.10_and_newer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Uploading a package to a PPA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://help.launchpad.net/Packaging/UploadErrors&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Package upload errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://doc.bazaar.canonical.com/explorer/en/install-linux.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bazaar Explorer install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://doc.bazaar.canonical.com/plugins/en/builddeb-plugin.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Build Debian packages from Bazaar branches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lerry.me/post/2013/07/14/ubuntu_ppa_usagedfa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ubuntu PPA的使用方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;PPA，或是Personal Package Archive（个人软件包存档），是默认情况下并未被包含在Ubuntu中的软件的一个集合。使用个人包存档（PPA），您可以直接向Ubuntu用户分发软件和更新。
    
    </summary>
    
      <category term="Linux" scheme="http://blog.mindcont.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>二手华为路由hg255d刷OpenWrt</title>
    <link href="http://blog.mindcont.com/2016/10/27/hg255d-openwrt/"/>
    <id>http://blog.mindcont.com/2016/10/27/hg255d-openwrt/</id>
    <published>2016-10-27T02:40:52.000Z</published>
    <updated>2017-07-27T10:10:28.294Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;刷机有危险，刷机前请做好相关知识储备！！！&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;刷机有危险，刷机前请做好相关知识储备！！！&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;刷机有危险，刷机前请做好相关知识储备！！！&lt;/strong&gt;&lt;br&gt;
重要的话儿，说三遍～&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;本文仅适合 华为hg255d v4 版本路由，某宝入手二手华为hg255d路由器，CPU: Ralink RT3052F Flash:4M RAM:32M 此为背景。硬改可参考[2].&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/hg255d.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/hg255d-2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;连接路由-上传u-boot&quot;&gt;连接路由，上传u-boot&lt;/h3&gt;
&lt;p&gt;设置本地连接为 192.168.1.100  子网掩码：255.255.255.0 网关丶DNS不用填写（以后只要更新固件就是192.168.1.100的固定ip切记切记），网线与hg255d连接好，保持机器关闭状态.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/hg255d-3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;先在浏览器输入http://192.168.1.1/upload.html 然后按住路由的reset键并接通电源，保持reset按住，浏览器刷新，大约十秒左右就可以进入如图所示的界面&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/hg255d-4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;此时一定要抓紧选择ralink.bin（此固件内已包含改版u-boot和电信原版u-boot，后面u-boot-rom-hg255d_hg256.bin是升级用的）固件并开始刷入，因为在10-20秒以后，路由将正常启动，页面输入固件将会失败。切记速度！！！&lt;/p&gt;
&lt;p&gt;lan口灯狂闪，ralink固件写入结束，大约5min之后路由&lt;strong&gt;会自动重启&lt;/strong&gt;，稍等片刻在浏览器中输入192.168.1.1帐号密码同为admin.进入ralink的设置界面.&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/hg255d-5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;刷u-boot&quot;&gt;刷u-boot&lt;/h3&gt;
&lt;p&gt;u-boot 即Bootloader ,从设备加电到启动系统这段时间内固化这主板上的一段代码块，同电脑的BIOS类似。刷u-boot，只需要执行一个shell就可以了.找到 系统管理-&amp;gt;系统指令。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;执行命令：/hg255d/hg255d-flash-uboot.sh   提交一下&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/hg255d-6.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;大约1-2秒就结束了，很快的，然后&lt;strong&gt;手动重启路由器&lt;/strong&gt;。路由重启后，只要是电源灯频闪基本上就说明刷u-boot成功了.（如想恢复电信原固件，用tftp重刷ralink.bin固件，执行/hg255d/hg255d-flash-tel-uboot.sh就OK了）&lt;/p&gt;
&lt;h3 id=&quot;刷openwrt&quot;&gt;刷openwrt&lt;/h3&gt;
&lt;p&gt;还是开机的时候按住wps/wlan/reset按钮任一按钮，然后刷入固件openwrt-ramips-rt305x-hg255d-squashfs-sysupgrade.bin.** 当进度条上传完成，不要断电和动路由器，路由器会自动重启**&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/hg255d-7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;写入固件大约10秒钟，此时电源灯为常亮，然后大约是5分钟的等待时间，电源灯会灭一下，然后频闪，之后稍等一会就可以192.168.1.1进入openwrt …&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/hg255d-8.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
默认账号：root 密码：admin，然后你就可以看到下面的画面&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/hg255d-9.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;固件和工具&lt;/strong&gt;&lt;br&gt;
链接：&lt;a href=&quot;http://pan.baidu.com/s/1bpMd0OB&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pan.baidu.com/s/1bpMd0OB&lt;/a&gt; 密码：zhe0&lt;/p&gt;
&lt;h3 id=&quot;配置网络&quot;&gt;配置网络&lt;/h3&gt;
&lt;p&gt;这一部分参考老高[4]的博客，来简要介绍openwrt中br-lan,eth0,eth0.1,eth0.2 这几个接口的意思。&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/hg255d-10.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;有线网配置&quot;&gt;有线网配置&lt;/h4&gt;
&lt;p&gt;openwrt的有线网络配置文件位于/etc/config/network，参考老高[4]的配置如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config interface &amp;apos;loopback&amp;apos; # 本地回环地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ifname &amp;apos;lo&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option proto &amp;apos;static&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ipaddr &amp;apos;127.0.0.1&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option netmask &amp;apos;255.0.0.0&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config globals &amp;apos;globals&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ula_prefix &amp;apos;auto&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config interface &amp;apos;lan&amp;apos; # 内网口，默认地址192.168.1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ifname &amp;apos;eth0.1&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option force_link &amp;apos;1&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option type &amp;apos;bridge&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option proto &amp;apos;static&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ipaddr &amp;apos;192.168.1.1&amp;apos; # 如果用openwrt做二级路由，且与一级路由地址192.168.1.1冲突，可修改这里&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option netmask &amp;apos;255.255.255.0&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ip6assign &amp;apos;60&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option macaddr &amp;apos;64:09:80:05:e1:bb&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config interface &amp;apos;wan&amp;apos; # 外网口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ifname &amp;apos;eth0.2&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option _orig_ifname &amp;apos;eth0.2&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option _orig_bridge &amp;apos;false&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option proto &amp;apos;pppoe&amp;apos; # 可以看出这里使用光纤拨号的方式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option macaddr &amp;apos;64:09:80:05:e1:bc&amp;apos; # mac 地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option username &amp;apos;11100026295&amp;apos; # 宽带账号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option password &amp;apos;380926&amp;apos; # 宽带密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config interface &amp;apos;wan6&amp;apos; # ipv6 不用动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option _orig_ifname &amp;apos;@wan&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option _orig_bridge &amp;apos;false&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option proto &amp;apos;6to4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config switch # 交换机&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option name &amp;apos;mt762x&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option reset &amp;apos;1&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option enable_vlan &amp;apos;1&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config switch_vlan # 虚拟出两个 vlan (可以将物理地址屏蔽开，用于不同网段之间通信)，这里是vlan 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option device &amp;apos;mt762x&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option vlan &amp;apos;1&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ports &amp;apos;0 1 2 3 5 6t&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config switch_vlan # 这里是vlan2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option device &amp;apos;mt762x&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option vlan &amp;apos;2&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ports &amp;apos;4 6t&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;无线网络配置&quot;&gt;无线网络配置&lt;/h4&gt;
&lt;p&gt;openwrt的无线网络配置文件位于/etc/config/wireless，配置如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config wifi-device &amp;apos;rai0&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option type &amp;apos;mt7612&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option mode &amp;apos;14&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option channel &amp;apos;auto&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option txpower &amp;apos;100&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ht &amp;apos;20+40+80&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option country &amp;apos;US&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option disabled &amp;apos;0&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config wifi-iface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option device &amp;apos;rai0&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option network &amp;apos;lan&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option mode &amp;apos;ap&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ssid &amp;apos;BYBY_WORLD&amp;apos; # 2.4G 热点名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option encryption &amp;apos;psk2&amp;apos; # 加密方式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option key &amp;apos;xxx&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config wifi-device &amp;apos;ra0&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option type &amp;apos;rt2860v2&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option mode &amp;apos;9&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option channel &amp;apos;auto&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option txpower &amp;apos;100&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ht &amp;apos;40&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option country &amp;apos;US&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option disabled &amp;apos;0&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config wifi-iface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option device &amp;apos;ra0&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option network &amp;apos;lan&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option mode &amp;apos;ap&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option wps &amp;apos;pbc&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ssid &amp;apos;HELLO_WORLD&amp;apos; # 5G 热点名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option encryption &amp;apos;psk2&amp;apos; # 加密方式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option key &amp;apos;xxx&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;名词解释&quot;&gt;名词解释&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;II. pppoe-wan&lt;br&gt;
虚拟设备，他就是常见的拨号宽带上网，需要有ISP提供的用户名密码，连接后方可激此接口！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;III. lo&lt;br&gt;
虚拟设备，自身的回环网设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IV. ra0 rai0&lt;br&gt;
这两个是成对出现，一看就知道是无线设备，它们各自对应一个SSID，分别是2.4G和5G。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;V. 虚拟局域网&lt;br&gt;
开启虚拟局域网 对应 config switch.划分子网 你可以在网络-&amp;gt;交换机中找到！&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/hg255d-11.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
对照着图下面的配置应该很容易就懂了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config switch_vlan&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option device &amp;apos;mt762x&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option vlan &amp;apos;1&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ports &amp;apos;0 1 2 3 5 6t&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config switch_vlan&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option device &amp;apos;mt762x&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option vlan &amp;apos;2&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    option ports &amp;apos;4 6t&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;VI. eth0&lt;br&gt;
eth0是一块物理网卡。eth0.1 eth0.2都是从此设备上虚拟出来的。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;eth0.1 是vlan1分出的lan口。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;eth0.2 是vlan分出的wan口。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;VII. br-lan&lt;br&gt;
虚拟设备，用于LAN口设备桥接，可以用brctl show查看使用情况。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ brctl show&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bridge name bridge id       STP enabled interfaces&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;br-lan      7fff.64098005e1bb   no      eth0.1 rai0 ra0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;br-lan = eth0.1 + rai0 + ra0，即将有线LAN口和无线网统一划分为 LAN，便于管理！&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;参考&quot;&gt;参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/34f9c4963105&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;1 OpenWrt：HG255D华为路由器刷OpenWrt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://forum.eepw.com.cn/thread/236267/1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2 历经曲折HG255D改造64M内存双SMA天线（独家改法）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.right.com.cn/forum/thread-153163-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3 拆解Huawei(華為) HG255D-已經硬改64M內存 + 被動式散熱改造&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.phpgao.com/openwrt-interface.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;4 openwrt中br-lan,eth0,eth0.1,eth0.2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;刷机有危险，刷机前请做好相关知识储备！！！&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;刷机有危险，刷机前请做好相关知识储备！！！&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;刷机有危险，刷机前请做好相关知识储备！！！&lt;/strong&gt;&lt;br&gt;
重要的话儿，说三遍～&lt;/p&gt;
    
    </summary>
    
    
      <category term="树莓派" scheme="http://blog.mindcont.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 装机必备</title>
    <link href="http://blog.mindcont.com/2016/10/27/ubuntu-necessary-install-software/"/>
    <id>http://blog.mindcont.com/2016/10/27/ubuntu-necessary-install-software/</id>
    <published>2016-10-27T01:47:28.000Z</published>
    <updated>2017-07-27T10:10:28.382Z</updated>
    
    <content type="html">&lt;p&gt;说linux，不得不从unix 发展历史和发行版本说起，由通用电气\AT&amp;amp;T\MIT 合作开发unix。在美苏冷战期间,美国国防部 ncp &amp;gt;tcp/ip 捆绑 unix 上。c 语言之父肯.汤普森 丹尼斯.里奇重写了unix 底层代码。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;UNIX发行版本&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AIX 	IBM 	PowerPC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HP-UX 	HP 	PA-RISC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Solaris sun	SPARC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Linux	Red Hat ,ubuntu (Intel AMD)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;!--more--&gt;
&lt;p&gt;LINUX 发展历史，由芬兰大学 Linux Torvalds 开源的软件，而芬兰 企鹅 logo 极地动物,象征开源。其发行版本&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/linux.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;其各发行版的特点&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/linux-2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Redhat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      fedora 全功能版,不稳定&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      centos 社区维护版 新浪,网易 服务都采用的版本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;红旗 Linux&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;suse 欧洲用的多&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;linux 系统的应用领域&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;基于linux的企业服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;嵌入式应用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linux 在电影娱乐&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;linux 学习方法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 详细的报错信息 邮件称呼&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 帮助文档,查找,实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3 英语&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	COMMAND NOT FOUND   未找到 命令 ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	NO SUCH file or directory  没有找到文件或者 地址?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 忘掉windows的思维方式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5 计划 专注 坚持 练习&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;更改-home-分区挂载点&quot;&gt;更改/home 分区挂载点&lt;/h3&gt;
&lt;p&gt;ubuntu 难免要弄坏，然后重装，重装的时候，可以将手动更改 /etc/fastab 这个文件来指定文件系统的加载位置。前提是从前系统的 /home 与/ 分区 不在同一个分区中。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gedit /etc/fastab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# home was on /dev/sda9 during installation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UUID=9a1eabc7-17ef-4033-ae61-48549c0f1483 /home           ext4    defaults 	0       0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如我修改后的，然后保存，重启。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# /etc/fstab: static file system information.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Use &amp;apos;blkid&amp;apos; to print the universally unique identifier for a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# device; this may be used with UUID= as a more robust way to name devices&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# that works even if disks are added and removed. See fstab(5).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt;   &amp;lt;type&amp;gt;  &amp;lt;options&amp;gt;       &amp;lt;dump&amp;gt;  &amp;lt;pass&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# / was on /dev/sda3 during installation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UUID=57006982-8ad1-442f-a7d6-c56ee2e68306 /               ext4    errors=remount-ro 0       1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# swap was on /dev/sda8 during installation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UUID=43060bdb-2b29-424f-88b7-84ad64de7851 none            swap    sw              0       0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# home was on /dev/sda9 during installation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UUID=9a1eabc7-17ef-4033-ae61-48549c0f1483 /home           ext4    defaults 	0       0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;修改源&quot;&gt;修改源&lt;/h3&gt;
&lt;p&gt;可以自定义 源，值得注意的是，当通过设置——》软件源——》服务器位置的时候，会重写掉我们自定义的文件。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gedit /etc/apt/sources.list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后添加下面，保存，更新即可。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;## 中国的骨干源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb http://cn.archive.ubuntu.com/ubuntu/ trusty main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb http://cn.archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb http://cn.archive.ubuntu.com/ubuntu/ trusty-proposed main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 阿里云&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb http://mirrors.aliyun.com/ubuntu trusty main restricted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://mirrors.aliyun.com/ubuntu trusty main restricted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb http://mirrors.aliyun.com/ubuntu trusty multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://mirrors.aliyun.com/ubuntu trusty multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb http://mirrors.aliyun.com/ubuntu trusty-updates multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://mirrors.aliyun.com/ubuntu trusty-updates multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb http://mirrors.aliyun.com/ubuntu trusty-backports main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://mirrors.aliyun.com/ubuntu trusty-backports main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;常用软件&quot;&gt;常用软件&lt;/h3&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 安装fcitx-googlepinyin 输入法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ibus-googlepinyin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 新立得软件包 (synaptic) 和经典菜单(classicMenu Indicator)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install synaptic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在任务栏显示网速&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo add-apt-repository ppa:nilarimogard/webupd8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install indicator-netspeed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;pip-镜像加速&quot;&gt;pip 镜像加速&lt;/h3&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install notebook --upgrade -i https://pypi.tuna.tsinghua.edu.cn/simple&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;类似的还可以编辑全局文件~/.pip/pip.con实现自动使用镜像地址&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;On Unix and Mac OS X the configuration file is: &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/.pip/pip.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;On Windows, the configuration file is: %HOME%\pip\pip.ini&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# on Ubuntu LTS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gedit .pip/pip.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[global]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index-url = https://pypi.tuna.tsinghua.edu.cn/simple&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;gcc-降级和多版本共存&quot;&gt;GCC 降级和多版本共存&lt;/h3&gt;
&lt;p&gt;查看已安装版本 gcc -v ,我们可以通过修改优先级的方法来实现gcc 、g++ 的多版本共存。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;安装 gcc-4.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install gcc-4.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;设置当前系统两个版本gcc 及其优先级&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.7 80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过输入下面的指令，查看当前 gcc 的配置情况&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo update-alternatives --config gcc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pi@MINDCONT:~$ sudo update-alternatives --config gcc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;有 2 个候选项可用于替换 gcc (提供 /usr/bin/gcc)。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  选择       路径            优先级  状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 0            /usr/bin/gcc-4.7   80        自动模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  1            /usr/bin/gcc-4.7   80        手动模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  2            /usr/bin/gcc-5     60        手动模式&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于 g++ 同理 .&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install g++-4.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.7 80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo update-alternatives --config g++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pi@MINDCONT:~$ sudo update-alternatives --config g++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;有 2 个候选项可用于替换 g++ (提供 /usr/bin/g++)。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  选择       路径            优先级  状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 0            /usr/bin/g++-4.7   80        自动模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  1            /usr/bin/g++-4.7   80        手动模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  2            /usr/bin/g++-5     60        手动模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;要维持当前值[*]请按&amp;lt;回车键&amp;gt;，或者键入选择的编号：&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装-shadowsocks-客户端&quot;&gt;安装 shadowsocks 客户端&lt;/h3&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install python-pip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip install shadowsocks&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;新建 gui-config.json 文件，将你的信息按照下面的格式填写后保存。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;server&amp;quot; : &amp;quot;your_server_ip&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;server_port&amp;quot; : server_port,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;local_port&amp;quot;: 1080,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;password&amp;quot; : &amp;quot;password&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;method&amp;quot; : &amp;quot;rc4-md5&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以通过命令行运行,注意换成你的路径&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/local/bin/sslocal -c /home/pi/work/ss/gui-config.json&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在firefox 浏览器-》高级-》网络设置中选择，自定义&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SOCKS5 地址 127.0.0.1 端口 1080&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/firefox_test.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果这时能够正常访问 &lt;a href=&quot;https://www.google.com/ncr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.google.com/ncr&lt;/a&gt; ， 即说明 shadowsocks安装和你的配置文件都没有问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/browser.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;下面我们修改开机启动项，使它能够开机自启动&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gedit /etc/rc.local&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在打开的文件中，将下面的指令修改为你的路径，这条命令是程序后台运行并将输出日志重定向到ss.log 文件里&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nohup /usr/local/bin/sslocal -c /home/pi/work/ss/gui-config.json&amp;gt;/home/pi/work/shadowsocks/ss.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过autoproxy 文件实现，国内网站和国外网站走不同的线路&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pip install genpac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip install --upgrade genpac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 通过代理，下载autoproxy.pac 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;genpac -p &amp;quot;SOCKS5 127.0.0.1:1080&amp;quot; --gfwlist-proxy=&amp;quot;SOCKS5 127.0.0.1:1080&amp;quot; --output=&amp;quot;~/autoproxy.pac&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在设置-》网络-》代理-》自定义，保存&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;file:///home/pi/work/shadowsocks/autoproxy.pac&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/ubuntu/autoproxy.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后，在firefox 浏览器-》高级-》网络设置中选择，使用系统代理 。重启电脑后，再次访问 &lt;a href=&quot;https://www.google.com/ncr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.google.com/ncr&lt;/a&gt; 试试吧！&lt;/p&gt;
&lt;h3 id=&quot;重装win后修复ubuntu-grub引导&quot;&gt;重装win后修复ubuntu grub引导&lt;/h3&gt;
&lt;p&gt;简单的方法是使用easyBCD新加一个grub2引导，位置选择自动。缺点，要想进入ubuntu 需要二次引导。&lt;br&gt;
第二种方法是，使用 U盘 ubuntu live CD，改bios引导顺序，从u盘启动，选择第一项，进入试用模式&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#查看当前硬盘所有分区&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo fdisk -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;挂载 ubuntu /分区（这里假设 / 分区为/dev/sda7） 所在分区至 livecd /mnt&lt;br&gt;
值得注意的是，这里我的/boot分区位于 / 分区下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#获取管理员权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo -i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mount /dev/sda7 /mnt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#若 /boot 单独又分区了的话，也加载到 /mnt/boot下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mount /dev/sda7 /mnt/boot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重新安装grub&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;grub-install --boot-directory=/mnt /dev/sda&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重启电脑后，我们硬盘上的ubuntu 引导应该找到了，此时进入ubuntu后打开终端，再次更新grub 寻找win的引导&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo update-grub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果顺利的话，你会看到这些（表示成功）：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Generating grub.cfg ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Found linux image: /boot/vmlinuz-2.6.32-22-generic-pae&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Found initrd image: /boot/initrd.img-2.6.32-22-generic-pae&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Found memtest86+ image: /boot/memtest86+.bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Found Windows 7 (loader) on /dev/sda3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;说linux，不得不从unix 发展历史和发行版本说起，由通用电气\AT&amp;amp;T\MIT 合作开发unix。在美苏冷战期间,美国国防部 ncp &amp;gt;tcp/ip 捆绑 unix 上。c 语言之父肯.汤普森 丹尼斯.里奇重写了unix 底层代码。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.mindcont.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>CNN 基本公式分析</title>
    <link href="http://blog.mindcont.com/2016/09/18/cnn/"/>
    <id>http://blog.mindcont.com/2016/09/18/cnn/</id>
    <published>2016-09-18T02:09:36.307Z</published>
    <updated>2017-07-27T10:10:28.310Z</updated>
    
    <content type="html">&lt;p&gt;之前工作里写过CNN，一眨眼，快到一年了。写CNN的过程，使我有了很大的成长，对BP的理解也深刻了许多。之前写得文档里，只是针对论文做了一个解析，现在放出一些关键的推导过程，也稍微回顾一下。关于训练模型里的一些trick，很多时候是需要尝试的，我突然发现：其实也很需要想象力！&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;注：很多图片是之前做的PPT截图，如果用mathjex重复打公式和排版了，比较费时间，所以直接截图了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;卷积神经网络&lt;/strong&gt;&lt;br&gt;
卷积神经网络(convolutional neural network)是利用模型特性来处理掉输入的波动而获得不变性特征，由LeCun提出，目前广泛的应用于图像数据。&lt;/p&gt;
&lt;h2 id=&quot;基本操作&quot;&gt;基本操作&lt;/h2&gt;
&lt;p&gt;卷积操作主要是f(x)g(x)在重合区域的积分。&lt;/p&gt;
&lt;h3 id=&quot;一维卷积&quot;&gt;一维卷积&lt;/h3&gt;
&lt;p&gt;如下图所示，是一维卷积。类似于点积，&lt;em&gt;&lt;em&gt;y = x&lt;/em&gt;w&lt;/em&gt;*,下图的w=[1,0,-1]。这里引入了一个概念&lt;strong&gt;局部接受野&lt;/strong&gt;(local receptive fields)和&lt;strong&gt;权值共享&lt;/strong&gt;(weight sharing)。为了方便表述，灰色的是隐含层i，黄色是下一层隐含层i+1。对于传统的神经网络而言，i+1层的一个神经元是接收了i层所有神经元节点的加权求和得到的，而这里，则仅接收i层神经元局部输入的加权得到，也就是局部接受野的概念。而权值共享，指的是对于i+1层的每一个神经元用的权重w是同一个。原来是7个输入5个输出的话，那么需要w是&lt;code&gt;7*5=35&lt;/code&gt;个参数，如果使用局部接受野，输入变为了3，则需要w是&lt;code&gt;3*5=15&lt;/code&gt;个参数。如果再使用权值共享，那么就变成了3个参数！使得整个网络的参数大为减少。&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/cnn/cnn_1d_conv.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
当然，i层可以对应多个i+1层，也就是每一个共享的w得到一个i+1层，多个共享的w就得到了多个i+1层，这个数一般称之为feature map数。这样可以学习到更多的特征。&lt;br&gt;
&lt;strong&gt;这样能够更好的表达局部特征！而通过不断的深度，使得局部特征聚合为高级特征&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;二维卷积&quot;&gt;二维卷积&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/cnn/cnn_Convolution_schematic.gif&quot; alt=&quot;&quot;&gt;&lt;br&gt;
这里不细说，下面会细说。&lt;/p&gt;
&lt;h3 id=&quot;三维卷积&quot;&gt;三维卷积&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/cnn/cnn_3d_conv.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
目前多数都是采用3d卷积，本质跟2d卷积一样。就是维度增加了，对应的输入变为了4维，而w也是4维的，这样卷积求和得到输出。&lt;/p&gt;
&lt;p&gt;除了卷积之外，cnn还有一个核心的概念，子抽样(subsampling)，一般用pooling来表示。pooling的种类有很多种，主要是用一个特征来表达一个局部特征，这样使得参数大为减少。常见的有max pooling和mean pooling，L2 pooling。max pooling就是用局部特征的最大值来表达这个区域的特征。其他依次类推。如下图所示：&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/cnn/cnn_Pooling_schematic.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;另外，对于图像里的一些其他操作，比如stride，表示卷积每次的移动步长，pad表示对图像进行阔边，防止在卷积操作中丢失边界特征。&lt;/p&gt;
&lt;h2 id=&quot;卷积的bp&quot;&gt;卷积的BP&lt;/h2&gt;
&lt;p&gt;卷积的BP推导可以概括为3个卷积。具体如下：&lt;br&gt;
这里我们以2d卷积为例子，3d卷积的话，就是在2d上增加一个循环就可以了。&lt;br&gt;
如下图所示：&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/cnn/cnn_2d_conv.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这是一个forward过程，就是第二部分提到的卷积操作。这里仅用大O里面加个x表示卷积，&lt;strong&gt;注意后者是卷积核&lt;/strong&gt;，也就是filter或者说weight。&lt;/p&gt;
&lt;p&gt;那么误差反馈就比较容易，首先是得到了上层传递过来的delta，之后对输入的x求导得到dx用于反馈误差。之后对w求导，得到dw，用于更新梯度。&lt;br&gt;
这个比较简单，因为本质都是点积，只需要对应的求导再加和就可以了。如下图所示：&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/cnn/cnn_dx.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
对应的求解，发现这个操作类似于卷积。但是对于&lt;code&gt;x_{0,0}&lt;/code&gt;的求解，需要对delta进行阔边以方便直接使用卷积操作。如下图所示:&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/cnn/cnn_dx_border.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;接下来是对w求导，得到更新梯度。计算也是一样的，找到w参与的点积计算，拿到导数合并一下就可以了。如下图所示，我们发现同样可以用卷积操作来表示：&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/cnn/cnn_dw.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;那么我们可以联系到线性回归，以方便我们记忆了：&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/cnn/cnn_bp.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;以上就是关于卷积BP的推导和证明了。图片是在ppt里编辑好之后截图过来的，因为直接写一堆公式的话，感觉容易乱。&lt;br&gt;
此外，我们看到也能看到对于&lt;code&gt;5*5&lt;/code&gt;的卷积操作，其实是可以用2个&lt;code&gt;3*3&lt;/code&gt;的卷积操作来代替，同时还能达到层数更多的效果。目前通过可视化来看，深度学习的特征是层级式的，特征由低级不断的汇总为高级特征。&lt;/p&gt;
&lt;h2 id=&quot;pooling层bp&quot;&gt;pooling层BP&lt;/h2&gt;
&lt;p&gt;对于pooling层，如何进行BP操作呢？pooling层比卷积层简单的地方是，pooling是没有参数的，所以只需要得到dx之后用于误差传递就可以了。对于mean pooling，其实相当于卷积都是均值，比如2*2的pooling，那么w就相当于[[0.25, 0.25],[0.25, 0.25]]，我们直接套用卷积的公式就可以了。而对于L2 pooling等等类似的pooling，其实是可以拆分成平方操作，sum pooling，再开方的三个操作分别传递误差就可以，而sum pooling也可以套用卷积操作。唯一不一样的是max pooling，没有固定的卷积核，所以需要循环一下，对于输入最大的点进行求导。pooling 如下图所示：&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/cnn/cnn_pool.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;从max 和 mean等操作也可以看到，pooling的不同。&lt;br&gt;
pooling的本质是一种局部特征的表达。max pooling的是用图像某一区域像素值的最大值来表示该区域的特征，而mean pool是用图像某一区域像素值的均值来表示该区域的特征。这两个pooling操作都提高了提取特征的不变性，而特征提取的误差主要来自两个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;邻域大小受限造成的估计值方差增大；&lt;/li&gt;
&lt;li&gt;卷积层参数误差造成估计均值的偏移。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般来说，mean-pooling能减小第一种误差，更多的保留图像的背景信息，max-pooling能减小第二种误差(导数不影响其他点)，更多的保留纹理信息。在图像处理中，使用max pooling多于mean pooling。&lt;/p&gt;
&lt;h2 id=&quot;im2col&quot;&gt;im2col&lt;/h2&gt;
&lt;p&gt;实际在计算的卷积的时候，通常可以使用一些卷积操作库。在类比线性回归的时候，也容易想到，如果把二维的卷积核w转为一维的话，操作会不会更快？因为在误差反馈的时候，不需要再重复的循环。因此，有一种方式是把二维图像转为一维向量进行计算的方式。如下图所示：&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/cnn/cnn_im2col.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
简单的说，就是把操作转为向量的形式。那么计算就和线性回归一样了，如下：&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/cnn/cnn_im2col_2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
对于误差反馈，我们还需要把反馈的误差，再转回到二维图像的形式，也就是col2im，如下图所示：&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/caffe/cnn/cnn_col2im.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
转换的时候，是不断的累加的。&lt;/p&gt;
&lt;h2 id=&quot;code&quot;&gt;code&lt;/h2&gt;
&lt;p&gt;自己写了一个kitnet的神经网络库，最近比较忙，很多优化算法和layer还没实现。这里简单的给一下卷积的部分code。网上有很多好的代码值得参考和学习，这里就是配合上面的截图，给关键的几个函数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class ConvLayer(ParamLayer):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self, shape, pad_w=0, pad_h=0, stride=1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 name=&amp;quot;ConvLayer&amp;quot;, init_method=&amp;quot;random&amp;quot;, debug=0):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shape (input_channel, filter_size, filter_size, output_channel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c: channel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f: filter_size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        b: batch_size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        w: width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        h: height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(ConvLayer, self).__init__(name, shape, init_method)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.in_channel = shape[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.filter_h = shape[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.filter_w = shape[2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.out_channel = shape[3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.indx = self.filter_h * self.filter_w * self.in_channel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.pad_h = pad_h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.pad_w = pad_w&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.stride = stride&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.debug = debug&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def forward(self, x):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        x shape: (batch_size, channel, height, weight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # get the output shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.batch_size, in_channel, in_h, in_w = x.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assert in_channel == self.in_channel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        out_h = (in_h + 2 * self.pad_h - self.filter_h) / self.stride + 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        out_w = (in_w + 2 * self.pad_w - self.filter_w) / self.stride + 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assert out_h % 1 == 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assert out_w % 1 == 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        out_h, out_w = int(out_h), int(out_w)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # pad input array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        x_padded = np.pad(x, ((0,0), (0,0), (self.pad_h, self.pad_h),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              (self.pad_w, self.pad_w)), &amp;apos;constant&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.h_padded, self.w_padded = x_padded.shape[2], x_padded.shape[3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # im2col, (out_h*out_w*batch_size, filter_h*filter_w*in_channel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        x_cols = None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for i in xrange(self.filter_h, self.h_padded+1, self.stride):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for j in xrange(self.filter_w, self.w_padded+1, self.stride):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                for n in xrange(self.batch_size):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    tmp = x_padded[n, :, i-self.filter_h:i, j-self.filter_w:j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    field = tmp.reshape((1, self.indx))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    if x_cols is None:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        x_cols = field&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        x_cols = np.vstack((x_cols, field))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.input = x_cols&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # weight2col, (indx, out_channel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.w_cols = self.W.reshape(self.indx, self.out_channel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # output_col shape, out_h*out_w*batch_size, out_channel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.output_col = np.dot(self.input, self.w_cols) + self.b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # output shape, (batch_size, channel, height, weight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.output = self.output_col.reshape(self.batch_size, out_h,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              out_w, self.out_channel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if self.debug:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print &amp;quot;x_cols.shape = &amp;quot;, x_cols.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print &amp;quot;w_cols.shape = &amp;quot;, self.w_cols.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print &amp;quot;output.shape = &amp;quot;, self.output.shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def backward(self, delta):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assert delta.size == self.output.size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        delta_cols = delta.reshape(self.output_col.shape)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # grad_x_cols, (out_h*out_w*batch_size, indx)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        grad_x_cols = np.dot(delta_cols, self.w_cols.T)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # get the grad&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        grad_w = np.dot(self.input.T, delta_cols)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        grad_b = np.sum(delta_cols, axis=0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.grad =[grad_w.reshape(self.W.shape), grad_b.reshape(self.b.shape)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # col2im: convert back from x_cols to x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # (batch_size, channel, height, weight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dx_padded = np.zeros((self.batch_size, self.in_channel,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              self.h_padded, self.w_padded))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        idx = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tmp_shape = (1, self.in_channel, self.filter_h, self.filter_w)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for i in xrange(self.filter_h, self.h_padded+1, self.stride):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for j in xrange(self.filter_w, self.w_padded+1, self.stride):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                for n in xrange(self.batch_size):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    tmp = grad_x_cols[idx,:].reshape(tmp_shape)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    dx_padded[n:n+1, :,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              i - self.filter_h:i,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              j - self.filter_w:j] += tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    idx += 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if self.pad_h == 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.delta = dx_padded&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.delta = dx_padded[:, :, self.pad_h:-self.pad_h,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   self.pad_w:-self.pad_w]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # debug&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if self.debug:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print &amp;quot;grad_w.shape = &amp;quot;, self.grad[0].shape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print &amp;quot;delta.shape = &amp;quot;, self.delta.shape&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;来源&quot;&gt;来源&lt;/h2&gt;
&lt;p&gt;文章：&lt;a href=&quot;http://www.datakit.cn/blog/2016/03/23/bp_cnn.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CNN基本公式分析&lt;/a&gt;&lt;br&gt;
来源：&lt;a href=&quot;http://www.datakit.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.datakit.cn/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前工作里写过CNN，一眨眼，快到一年了。写CNN的过程，使我有了很大的成长，对BP的理解也深刻了许多。之前写得文档里，只是针对论文做了一个解析，现在放出一些关键的推导过程，也稍微回顾一下。关于训练模型里的一些trick，很多时候是需要尝试的，我突然发现：其实也很需要想象力！&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://blog.mindcont.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>深度学习：数据集篇</title>
    <link href="http://blog.mindcont.com/2016/09/13/dataset/"/>
    <id>http://blog.mindcont.com/2016/09/13/dataset/</id>
    <published>2016-09-13T08:34:32.000Z</published>
    <updated>2017-07-27T10:10:28.299Z</updated>
    
    <content type="html">&lt;p&gt;大数据，数据挖掘，深度学习，终究绕不开数据集，为此单独开一个页面，持续更新各类数据集，希望可以碰出一些好的思路，用深度学习的方法解决一些实际问题。&lt;/p&gt;
&lt;!-- ![](http://static.mindcont.com/blog/images/ubuntu/princeton.jpg) --&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Download&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://places.csail.mit.edu/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AlexNet-Places205&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/boathouse.png&quot; alt=&quot;images places recognition&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://places.csail.mit.edu/model/placesCNN_upgraded.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.speech.cs.cmu.edu/databases/an4/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AN4&lt;/a&gt;: 948 training and 130 test utterances&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/landing-audio.png&quot; alt=&quot;speech&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.speech.cs.cmu.edu/databases/an4/an4_raw.bigendian.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://www2.eecs.berkeley.edu/Research/Projects/CS/vision/bsds/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BSDS (300/500)&lt;/a&gt;: 12k labeled segmentations&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/wolf.jpg&quot; alt=&quot;image segmentation&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://www2.eecs.berkeley.edu/Research/Projects/CS/vision/bsds/BSDS300-images.tgz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; images&lt;/a&gt; &lt;a href=&quot;https://www2.eecs.berkeley.edu/Research/Projects/CS/vision/bsds/BSDS300-human.tgz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; segmentations&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://mmlab.ie.cuhk.edu.hk/projects/CelebA.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Celeb-A&lt;/a&gt;: 200k+ celebrity images, 10k+ identities&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/celebrity.png&quot; alt=&quot;celebrity images&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://www.dropbox.com/sh/8oqt9vytwxb3s4r/AAB06FXaQRUNtjW9ntaoPGvCa?dl=0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://www.cs.toronto.edu/~kriz/cifar.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CIFAR-10&lt;/a&gt;: 60k tiny (32x32) tagged images&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/cifar-tiny.png&quot; alt=&quot;tiny images&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://www.cs.toronto.edu/~kriz/cifar.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://mscoco.org/dataset/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;COCO&lt;/a&gt;: A large image dataset designed for object detection, segmentation, and caption generation.&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/coco.png&quot; alt=&quot;coco&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://mscoco.org/dataset/#download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://mmlab.ie.cuhk.edu.hk/datasets/comp_cars/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CompCars&lt;/a&gt;: 136k+ car images &amp;amp; 1716 car models&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/cars.png&quot; alt=&quot;cars&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://mmlab.ie.cuhk.edu.hk/datasets/comp_cars/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.robots.ox.ac.uk/~vgg/data/flowers/102/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Oxford 102 Flowers&lt;/a&gt;: 102 flower categories&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/flowers.png&quot; alt=&quot;flowers&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.robots.ox.ac.uk/~vgg/data/flowers/102/102flowers.tgz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; images&lt;/a&gt; &lt;a href=&quot;http://www.robots.ox.ac.uk/~vgg/data/flowers/102/102segmentations.tgz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; segmentations&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://image-net.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ImageNet&lt;/a&gt;: 14,197,122 images, 21841 synsets indexed&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/imagenet.jpg&quot; alt=&quot;large range of images&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://image-net.org/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.image-net.org/challenges/LSVRC/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ImageNet ILSVRC&lt;/a&gt;: Competition datasets&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/imagenet.jpg&quot; alt=&quot;large range of images&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.image-net.org/challenges/LSVRC/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Iris_flower_data_set&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Iris&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/iris.jpg&quot; alt=&quot;flowers &amp;gt; classification&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Iris_flower_data_set&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://lsun.cs.princeton.edu/2016/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LSUN Scenes&lt;/a&gt; millions of indoor/outdoor building scenes&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/kitchen.jpg&quot; alt=&quot;scene classification&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/fyu/lsun/blob/master/download.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://lsun.cs.princeton.edu/2016/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LSUN Room Layout&lt;/a&gt; 4000 indoor scenes&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/layout.png&quot; alt=&quot;scene classification&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/fyu/lsun/blob/master/download.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://yann.lecun.com/exdb/mnist/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MNIST&lt;/a&gt; 60k handwriting training set, 10k test images&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/mnist.png&quot; alt=&quot;handwriting&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://yann.lecun.com/exdb/mnist/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://cs-people.bu.edu/jmzhang/sos.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Multi-Salient-Object (MSO)&lt;/a&gt; 1224 tagged salient object images&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/mso.png&quot; alt=&quot;tagged objects&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.cs.bu.edu/groups/ivc/data/SOS/MSO.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.openu.ac.il/home/hassner/Adience/data.html#agegender&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OUI-Adience Face Image&lt;/a&gt; 26,580 age &amp;amp; gender labeled images&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/age.png&quot; alt=&quot;age, gender&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.openu.ac.il/home/hassner/Adience/data.html#agegender&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://host.robots.ox.ac.uk/pascal/VOC/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PASCAL VOC 2012&lt;/a&gt; 11,530 images w/ 27,450 ROI annotated objects and 6,929 segmentations&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/voc.png&quot; alt=&quot;images &amp;gt; object recognition&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://host.robots.ox.ac.uk/pascal/VOC/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.netresec.com/?page=PcapFiles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PCAP&lt;/a&gt; Network captures of regular internet traffic and attack scenario traffic&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/defcon.jpg&quot; alt=&quot;network capture&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.netresec.com/?page=PcapFiles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.fit.vutbr.cz/~imikolov/rnnlm/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Penn Treebank (PTB)&lt;/a&gt; statistical language modeling&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/landing-audio.png&quot; alt=&quot;language&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.fit.vutbr.cz/~imikolov/rnnlm/simple-examples.tgz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://crcv.ucf.edu/data/UCF_YouTube_Action.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UCF11/YouTube Action&lt;/a&gt; 11 action categories: basketball shooting, biking/cycling, diving, golf swinging, horse back riding, soccer juggling, swinging, tennis swinging, trampoline jumping, volleyball spiking, and walking with a dog&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/action.jpg&quot; alt=&quot;video &amp;gt; action&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://crcv.ucf.edu/data/UCF_YouTube_Action.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://archive.ics.uci.edu/ml/datasets.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UCI Datasets&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/caffe2variety.png&quot; alt=&quot;variety&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://archive.ics.uci.edu/ml/datasets.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://catalog.data.gov/dataset&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;US Census&lt;/a&gt;: demographic data&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/linegraph.png&quot; alt=&quot;line graph&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://catalog.data.gov/dataset&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.robots.ox.ac.uk/~vgg/software/vgg_face/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;VGG-Face&lt;/a&gt; millions of faces&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://caffe2.ai/static/images/faces.jpg&quot; alt=&quot;faces&quot;&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://www.robots.ox.ac.uk/~vgg/software/vgg_face/src/vgg_face_caffe.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;download&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;补充&quot;&gt;补充&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CV 开源代码&lt;/th&gt;
&lt;th&gt;链接&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;code&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.sigvc.org/bbs/thread-72-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.sigvc.org/bbs/thread-72-1-1.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;http://vision.princeton.edu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vision.princeton.edu&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://vision.princeton.edu/research.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vision.princeton.edu/research.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ILSVRC 历年竞赛数据集&lt;/th&gt;
&lt;th&gt;链接 (&lt;a href=&quot;http://image-net.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image-net.org/&lt;/a&gt;)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ILSVRC2016 Challenge&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://image-net.org/challenges/LSVRC/2016/download-images-8r28#det&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image-net.org/challenges/LSVRC/2016/download-images-8r28#det&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ILSVRC2015 Challenge&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://image-net.org/challenges/LSVRC/2015/download-images-3j16.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image-net.org/challenges/LSVRC/2015/download-images-3j16.php&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ILSVRC2014 Challenge&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://image-net.org/challenges/LSVRC/2014/download-images-5jj5.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image-net.org/challenges/LSVRC/2014/download-images-5jj5.php&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ILSVRC2012 Challenge&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://image-net.org/challenges/LSVRC/2012/nonpub-downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image-net.org/challenges/LSVRC/2012/nonpub-downloads&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ILSVRC2010 Challenge&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://image-net.org/challenges/LSVRC/2010/download-all-nonpub&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image-net.org/challenges/LSVRC/2010/download-all-nonpub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;PASCAL VOC Challenge&lt;/th&gt;
&lt;th&gt;链接&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The PASCAL VOC Challenge 2012&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://host.robots.ox.ac.uk/pascal/VOC/voc2012/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://host.robots.ox.ac.uk/pascal/VOC/voc2012/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The PASCAL VOC Challenge 2007&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://host.robots.ox.ac.uk/pascal/VOC/voc2007/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://host.robots.ox.ac.uk/pascal/VOC/voc2007/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;链接&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;MS-COCO&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://mscoco.org/dataset/#download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mscoco.org/dataset/#download&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;youtube人脸&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.cs.tau.ac.il/~wolf/ytfaces/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cs.tau.ac.il/~wolf/ytfaces/index.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;人脸&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://vis-www.cs.umass.edu/lfw/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://vis-www.cs.umass.edu/lfw/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;三维人脸&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://biometrics.idealtest.org/dbDetailForUser.do?id=8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://biometrics.idealtest.org/dbDetailForUser.do?id=8&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文本类&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://blog.csdn.net/freesum/article/details/7370823&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/freesum/article/details/7370823&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数字图像处理&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://blog.csdn.net/wangyaninglm/article/details/38707257&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/wangyaninglm/article/details/38707257&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;机器视觉中常用的数据测试集&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://blog.csdn.net/maxiemei/article/details/17281767&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/maxiemei/article/details/17281767&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;常用图像数据集：标注、检索&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.cnblogs.com/huashiyiqike/p/3778035.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/huashiyiqike/p/3778035.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;花卉&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.cnblogs.com/fuleying/p/3895817.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/fuleying/p/3895817.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100+诡异的数据集&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.cnblogs.com/xianghang123/p/3773086.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/xianghang123/p/3773086.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/19969760&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数据分析和挖掘有哪些公开的数据来源？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://caffe2.ai/docs/datasets.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Datasets | Caffe2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;大数据，数据挖掘，深度学习，终究绕不开数据集，为此单独开一个页面，持续更新各类数据集，希望可以碰出一些好的思路，用深度学习的方法解决一些实际问题。&lt;/p&gt;
&lt;!-- ![](http://static.mindcont.com/blog/images/ubuntu/prin
    
    </summary>
    
      <category term="深度学习" scheme="http://blog.mindcont.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>Git 常用指令</title>
    <link href="http://blog.mindcont.com/2016/08/18/git-commands/"/>
    <id>http://blog.mindcont.com/2016/08/18/git-commands/</id>
    <published>2016-08-18T13:08:09.000Z</published>
    <updated>2017-07-27T10:10:28.290Z</updated>
    
    <content type="html">&lt;p&gt;Git 是由 Linux 之父 Linus Tovalds 为了更好地管理linux内核开发而创立的分布式版本控制／软件配置管理软件。简单来说，Git 是一个管理你的「代码的历史记录」的工具。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/github.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运行平台&lt;/th&gt;
&lt;th&gt;环境&lt;/th&gt;
&lt;th&gt;链接&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Microsoft Windows [版本 10.0.10240]&lt;/td&gt;
&lt;td&gt;GitHub Desktop (3.1.1.4)&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://desktop.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://desktop.github.com/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ubuntu [版本14.04]&lt;/td&gt;
&lt;td&gt;GitKraken&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://www.gitkraken.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.gitkraken.com/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;常用命令&quot;&gt;常用命令&lt;/h2&gt;
&lt;h3 id=&quot;创建新仓库&quot;&gt;创建新仓库&lt;/h3&gt;
&lt;p&gt;创建新文件夹，打开，然后执行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以创建新的 git 仓库。&lt;/p&gt;
&lt;h3 id=&quot;拉取远程仓库&quot;&gt;拉取远程仓库&lt;/h3&gt;
&lt;p&gt;执行如下命令以创建一个远程仓库的克隆版本：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone username@host:/path/to/repository&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;举个实例&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd /home/pi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/mindcont/caffe.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;工作流&quot;&gt;工作流&lt;/h3&gt;
&lt;p&gt;你的本地仓库由 git 维护的三棵“树”组成。第一个是你的 &lt;strong&gt;工作目录&lt;/strong&gt;，它持有实际文件；第二个是 &lt;strong&gt;缓存区（Index）&lt;/strong&gt;，它像个缓存区域，临时保存你的改动；最后是 &lt;strong&gt;HEAD&lt;/strong&gt;，指向你最近一次提交后的结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://git-scm.com/images/about/index1@2x.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;添加与提交&quot;&gt;添加与提交&lt;/h3&gt;
&lt;p&gt;你可以计划改动（把它们添加到缓存区），使用如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git add &amp;lt;filename&amp;gt; # 添加单个改动的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add * #添加多个改动的文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是 git 基本工作流程的第一步；使用如下命令以实际提交改动：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &amp;quot;代码提交信息&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在，你的改动已经提交到了 HEAD，但是还没到你的远端仓库。执行如下命令以将这些改动提交到远端仓库：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以把 master 换成你想要推送的任何分支&lt;br&gt;
&lt;img src=&quot;https://git-scm.com/images/about/index2@2x.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;分支&quot;&gt;分支&lt;/h3&gt;
&lt;p&gt;分支是用来将特性开发绝缘开来的。在你创建仓库的时候，master 是“默认的”。在其他分支上进行开发，完成后再将它们合并到主分支上。&lt;br&gt;
&lt;img src=&quot;https://camo.githubusercontent.com/1db631d931f4a57a439deb5f747bfc0c3c1098b2/68747470733a2f2f7777772e61746c61737369616e2e636f6d2f6769742f696d616765732f7475746f7269616c732f636f6c6c61626f726174696e672f636f6d706172696e672d776f726b666c6f77732f676974666c6f772d776f726b666c6f772f30352e737667&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;创建一个叫做“feature_x”的分支，并切换过去：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout -b feature_x&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;切换回主分支：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再把新建的分支删掉：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch -d feature_x&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; 除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的。&lt;/p&gt;
&lt;h3 id=&quot;更新与合并&quot;&gt;更新与合并&lt;/h3&gt;
&lt;p&gt;将你本地分支推送到远端仓库，执行：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin &amp;lt;branch&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;要更新你的本地仓库至最新改动，执行：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git pull&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。&lt;br&gt;
要合并其他分支到你的当前分支（例如 master），执行：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git merge &amp;lt;branch&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;两种情况下，git 都会尝试去自动合并改动。不幸的是，自动合并并非次次都能成功，并可能导致 冲突（conflicts）。 这时候就需要你修改这些文件来人肉合并这些 冲突（conflicts） 了。改完之后，你需要执行如下命令以将它们标记为合并成功：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git add &amp;lt;filename&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在合并改动之前，也可以使用如下命令查看：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git diff &amp;lt;source_branch&amp;gt; &amp;lt;target_branch&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;**如果你上面的都没看懂，恭喜你可以略过前面的章节，仅看下面的 **可视化操作 &lt;strong&gt;就可以了。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;可视化操作&quot;&gt;可视化操作&lt;/h2&gt;
&lt;p&gt;这一部分仅推荐两个，Windows 平台下推荐使用 GitHub 官方的 GitHub Desktop ，泛 Linux 下推荐使用 GitKraken 。读者可能存有疑问为什么选择这两个作为推荐，因为我本人正在使用呀～～～～&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;软件&lt;/th&gt;
&lt;th&gt;支持平台&lt;/th&gt;
&lt;th&gt;截图&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GitHub Desktop&lt;/td&gt;
&lt;td&gt;Windows, Mac&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;https://git-scm.com/images/guis/github-desktop@2x.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GitKraken&lt;/td&gt;
&lt;td&gt;Windows, Mac, Linux&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;https://git-scm.com/images/guis/git-kraken@2x.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;疑难杂症&quot;&gt;疑难杂症&lt;/h2&gt;
&lt;h3 id=&quot;删除已同步到远程的commit&quot;&gt;删除已同步到远程的commit&lt;/h3&gt;
&lt;p&gt;经常往GitHub上提交修改的代码，会导致提交次数很多；又或者提交了某些不应该提交测试数据，那麽我们应该如何删除这些提交记录呢？&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## 1、启动 git shell, 切换到项目所在的空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; c://github/android/rubikrobot   &lt;span class=&quot;comment&quot;&gt;#例如项目位于C://GitHub/Android/RubikRobot 目录下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## 2、查看当前提交记录，输入 q退出日志&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## 3、使用git reset 进行撤销操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git reset --hard HEAD~2                   &lt;span class=&quot;comment&quot;&gt;# 取消当前版本之前的两次提交  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push origin HEAD --force              &lt;span class=&quot;comment&quot;&gt;# 强制提交到远程版本库，从而删除之前的两次提交数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;保持fork的同步&quot;&gt;保持Fork的同步&lt;/h3&gt;
&lt;p&gt;在原始Repo有新的commit后，Fork的Repo不会自动与原分支同步。&lt;/p&gt;
&lt;p&gt;前置条件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已Fork&lt;/li&gt;
&lt;li&gt;已在本地clone了Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;步骤&lt;/p&gt;
&lt;p&gt;进入命令行，进入本地Repo目录&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 添加远程分支(仅第一次)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote add upstream https://github.com/akfish/MwCG.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 取回远程分支&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git fetch upstream&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;合并(以更新本地Dev分支为例)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout Dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git merge upstream/Dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;把同步后的分支push到GitHub的remote repo上（可选）&lt;/p&gt;
&lt;h2 id=&quot;参考链接&quot;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/zh/v2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git - 指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/download/gui/linux&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GUI Clients&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/zh/v1/Git-%E5%88%86%E6%94%AF-%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git 分支 - 远程分支&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/zh/v1/Git-%E5%9F%BA%E7%A1%80-%E6%92%A4%E6%B6%88%E6%93%8D%E4%BD%9C&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;了解更多关于git 操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/akfish/MwCG/wiki/%E4%BB%BB%E5%8A%A1%EF%BC%9A%E4%BF%9D%E6%8C%81Fork%E7%9A%84%E5%90%8C%E6%AD%A5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;保持Fork的同步&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Git 是由 Linux 之父 Linus Tovalds 为了更好地管理linux内核开发而创立的分布式版本控制／软件配置管理软件。简单来说，Git 是一个管理你的「代码的历史记录」的工具。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.mindcont.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 14.04 运行 YOLO Demo 记录</title>
    <link href="http://blog.mindcont.com/2016/08/06/run-yolo-demo/"/>
    <id>http://blog.mindcont.com/2016/08/06/run-yolo-demo/</id>
    <published>2016-08-06T11:24:00.000Z</published>
    <updated>2017-07-27T11:08:00.855Z</updated>
    
    <content type="html">&lt;p&gt;YOLO 是一个用来在VOC 2012 数据集上检测物体的框架。它可以检测 20 类物体：&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;人&lt;/li&gt;
&lt;li&gt;鸟, 猫, 牛, 狗, 马, 羊&lt;/li&gt;
&lt;li&gt;飞机, 自行车, 船, 公共汽车, 小汽车, 摩托车, 火车&lt;/li&gt;
&lt;li&gt;瓶，椅子，餐桌，盆花，沙发，电视/显示器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;YOLO is joint work with &lt;a href=&quot;http://homes.cs.washington.edu/~santosh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Santosh&lt;/a&gt;, &lt;a href=&quot;http://www.cs.berkeley.edu/~rbg/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ross&lt;/a&gt;, and &lt;a href=&quot;http://homes.cs.washington.edu/~ali/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ali&lt;/a&gt;, and is described in detail in our &lt;a href=&quot;http://arxiv.org/abs/1506.02640&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;paper&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;video src=&quot;http://static.mindcont.com/video/YOLO_Watches_Nature_Part_2.mp4&quot; controls=&quot;controls&quot; width=&quot;640px&quot; heigt=&quot;480px&quot; preload=&quot;none&quot; poster=&quot;/images/Object-Detection/Yolo/YOLO_Watches_Nature_Part_2.png&quot;&gt;&lt;/video&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装-darknet&quot;&gt;安装 Darknet&lt;/h2&gt;
&lt;h3 id=&quot;下载darknet&quot;&gt;下载Darknet&lt;/h3&gt;
&lt;p&gt;同时按住 Alt + Ctrl + T ,打开命令行终端&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone --recursive https://github.com/pjreddie/darknet.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd darknet&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;修改编译配置文件-makefile&quot;&gt;修改编译配置文件 Makefile&lt;/h3&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gedit Makefile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据你的情况进行修改，例如这里我将使用 GPU 和 cuDNN 进行加速计算，故将他们置为 1&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GPU=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CUDNN=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OPENCV=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DEBUG=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 根据你显卡的计算力确定架构。例如我的显卡是NVIDIA K2200, deviceQuery 是5.0  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARCH= --gpu-architecture=compute_50 --gpu-code=compute_50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;make -j4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;测试&quot;&gt;测试&lt;/h3&gt;
&lt;p&gt;输入下面的指令进行测试Darknet 是否安装成功&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./darknet  imtest data/eagle.jpg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果看到下面的画面，恭喜你安装Darknet 成功！&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/object-detection/Yolo/darknet_test.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;预测&quot;&gt;预测&lt;/h2&gt;
&lt;h3 id=&quot;下载权值文件&quot;&gt;下载权值文件&lt;/h3&gt;
&lt;p&gt;点击下面的网址，分别下载 大中小 三个模型对应已训练好的网络权值文件&lt;br&gt;
&lt;a href=&quot;http://pjreddie.com/media/files/yolo.weights&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pjreddie.com/media/files/yolo.weights&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://pjreddie.com/media/files/yolo-small.weights&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pjreddie.com/media/files/yolo-small.weights&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://pjreddie.com/media/files/yolo-tiny.weights&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pjreddie.com/media/files/yolo-tiny.weights&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后放到darknet/weights目录下，然后在darknet根目录下输入下面的指令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./darknet yolo test cfg/yolo.cfg weights/yolo.weights data/dog.jpg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;日志输出&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;0: Convolutional Layer: 448 x 448 x 3 image, 64 filters -&amp;gt; 224 x 224 x 64 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1: Maxpool Layer: 224 x 224 x 64 image, 2 size, 2 stride&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2: Convolutional Layer: 112 x 112 x 64 image, 192 filters -&amp;gt; 112 x 112 x 192 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3: Maxpool Layer: 112 x 112 x 192 image, 2 size, 2 stride&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4: Convolutional Layer: 56 x 56 x 192 image, 128 filters -&amp;gt; 56 x 56 x 128 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5: Convolutional Layer: 56 x 56 x 128 image, 256 filters -&amp;gt; 56 x 56 x 256 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6: Convolutional Layer: 56 x 56 x 256 image, 256 filters -&amp;gt; 56 x 56 x 256 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7: Convolutional Layer: 56 x 56 x 256 image, 512 filters -&amp;gt; 56 x 56 x 512 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8: Maxpool Layer: 56 x 56 x 512 image, 2 size, 2 stride&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9: Convolutional Layer: 28 x 28 x 512 image, 256 filters -&amp;gt; 28 x 28 x 256 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10: Convolutional Layer: 28 x 28 x 256 image, 512 filters -&amp;gt; 28 x 28 x 512 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11: Convolutional Layer: 28 x 28 x 512 image, 256 filters -&amp;gt; 28 x 28 x 256 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12: Convolutional Layer: 28 x 28 x 256 image, 512 filters -&amp;gt; 28 x 28 x 512 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13: Convolutional Layer: 28 x 28 x 512 image, 256 filters -&amp;gt; 28 x 28 x 256 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14: Convolutional Layer: 28 x 28 x 256 image, 512 filters -&amp;gt; 28 x 28 x 512 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15: Convolutional Layer: 28 x 28 x 512 image, 256 filters -&amp;gt; 28 x 28 x 256 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16: Convolutional Layer: 28 x 28 x 256 image, 512 filters -&amp;gt; 28 x 28 x 512 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17: Convolutional Layer: 28 x 28 x 512 image, 512 filters -&amp;gt; 28 x 28 x 512 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18: Convolutional Layer: 28 x 28 x 512 image, 1024 filters -&amp;gt; 28 x 28 x 1024 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19: Maxpool Layer: 28 x 28 x 1024 image, 2 size, 2 stride&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20: Convolutional Layer: 14 x 14 x 1024 image, 512 filters -&amp;gt; 14 x 14 x 512 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21: Convolutional Layer: 14 x 14 x 512 image, 1024 filters -&amp;gt; 14 x 14 x 1024 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22: Convolutional Layer: 14 x 14 x 1024 image, 512 filters -&amp;gt; 14 x 14 x 512 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23: Convolutional Layer: 14 x 14 x 512 image, 1024 filters -&amp;gt; 14 x 14 x 1024 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24: Convolutional Layer: 14 x 14 x 1024 image, 1024 filters -&amp;gt; 14 x 14 x 1024 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25: Convolutional Layer: 14 x 14 x 1024 image, 1024 filters -&amp;gt; 7 x 7 x 1024 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26: Convolutional Layer: 7 x 7 x 1024 image, 1024 filters -&amp;gt; 7 x 7 x 1024 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27: Convolutional Layer: 7 x 7 x 1024 image, 1024 filters -&amp;gt; 7 x 7 x 1024 image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28: Connected Layer: 50176 inputs, 4096 outputs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29: Connected Layer: 4096 inputs, 1470 outputs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30: Detection Layer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;forced: Using default &amp;apos;0&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Loading weights from weights/yolo.weights...Done!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data/dog.jpg: Predicted in 0.170866 seconds.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;car: 51%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycle: 24%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dog: 25%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;init done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;opengl support available&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/object-detection/Yolo/YOLO_predictions_out.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;多测试两张&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./darknet yolo test cfg/yolo.cfg weights/yolo.weights data/person.jpg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/object-detection/Yolo/YOLO_person_prediction_out.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./darknet yolo test cfg/yolo.cfg weights/yolo.weights data/horses.jpg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/object-detection/Yolo/YOLO_horses_prediction_out.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;实时检测&quot;&gt;实时检测&lt;/h3&gt;
&lt;p&gt;运行这个Demo你需要编译 Darknet with CUDA and OpenCV. 你还需要选择 大中小 适当的模型和其对应的权值文件。通过 ls /dev/vi* 查看usb摄像头设备，如果输出video0则证明可用。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./darknet yolo demo cfg/yolo.cfg weights/yolo.weights&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者将一个小的待检测的视频文件，如test.mp4 放到darknet 根目录下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./darknet yolo demo cfg/yolo.cfg weights/yolo.weights test.mp4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;来实现对视频文件进行实时检测。&lt;/p&gt;
&lt;h3 id=&quot;修改显示阈值&quot;&gt;修改显示阈值&lt;/h3&gt;
&lt;p&gt;YOLO 默认只显示 置信率大于0.2 的预测，可以通过参数 -thresh 0 来制定显示置信率的范围&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./darknet yolo test cfg/yolo.cfg weights/yolo.weights data/dog.jpg -thresh 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/object-detection/Yolo/Screen_Shot_2015-08-14_at_11.42.02_AM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;预测voc2012test数据集&quot;&gt;预测VOC2012test数据集&lt;/h3&gt;
&lt;p&gt;点击下面的链接，下载VOC2012test数据集&lt;br&gt;
&lt;a href=&quot;http://host.robots.ox.ac.uk:8080/eval/downloads/VOC2012test.tar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://host.robots.ox.ac.uk:8080/eval/downloads/VOC2012test.tar&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar xf VOC2012test.tar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp VOCdevkit/VOC2012/ImageSets/Main/test.txt .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成图片文件的全路径&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sed &amp;apos;s?^?&amp;apos;`pwd`&amp;apos;/VOCdevkit/VOC2012/JPEGImages/?; s?$?.jpg?&amp;apos; test.txt &amp;gt; voc.2012.test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将测试文件路径复制到 darknet /data 目录下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mv voc.2012.test &amp;lt;path-to&amp;gt;/darknet/data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行预测&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./darknet yolo valid cfg/yolo.cfg weights/yolo.weights&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/object-detection/Yolo/Yolo_vaild.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/object-detection/Yolo/Yolo_valid_finish.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;而结果在 /darknet/results/下，打开例如 comp4_det_test_bird.txt ，可以依次看到 图片名称，置信率，方框左上角和右下角的坐标&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2008_000004 0.008654 0.000000 24.913101 363.373016 500.000000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008_000005 0.009914 312.701294 66.039398 386.487000 196.171997&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008_000005 0.001622 332.917145 88.719940 395.596405 176.586151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008_000005 0.004571 333.134979 60.575203 423.763519 201.134369&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008_000005 0.010197 410.791443 71.641754 485.329590 204.735779&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008_000005 0.002316 419.207123 126.652931 475.495758 229.286133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008_000005 0.001054 268.657776 188.379456 387.683960 288.772614&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008_000005 0.001442 253.524567 235.698074 394.108795 343.994049&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008_000010 0.002900 34.902084 5.141296 378.781433 371.530365&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008_000011 0.001770 88.507141 60.645809 251.819916 128.710754&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008_000011 0.002937 208.442169 72.542442 356.038971 139.302185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008_000011 0.003189 15.292969 49.904770 209.187149 158.970016&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008_000011 0.001175 350.284515 88.715370 441.157318 154.096954&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008_000011 0.005729 352.224884 69.389618 479.886383 195.413666&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;参考链接&quot;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pjreddie.com/darknet/yolo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YOLO: Real-Time Object Detection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;YOLO 是一个用来在VOC 2012 数据集上检测物体的框架。它可以检测 20 类物体：&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://blog.mindcont.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>Docker 实践二三事</title>
    <link href="http://blog.mindcont.com/2016/07/29/docker-learning/"/>
    <id>http://blog.mindcont.com/2016/07/29/docker-learning/</id>
    <published>2016-07-29T11:28:13.000Z</published>
    <updated>2017-07-27T10:10:28.288Z</updated>
    
    <content type="html">&lt;p&gt;Docker是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。开发者在笔记本上编译测试通过的容器可以批量地在生产环境中部署，包括VMs（虚拟机）、bare metal、OpenStack 集群和其他的基础应用平台。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog.daocloud.io/wp-content/uploads/2015/05/vm-vs-docker-architecture1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;架构&quot;&gt;架构&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/tools/docker/architecture.svg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;以 Ubuntu 14.04 LTS 下为例&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 更新APT镜像源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 安装 apt-transport-https 包支持 https 协议的源。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install apt-transport-https ca-certificates&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install docker.io&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看是否安装成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo docker info&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;常用命令&quot;&gt;常用命令&lt;/h2&gt;
&lt;p&gt;Docker 命令 总的来说分为以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容器生命周期管理 — docker [run|start|stop|restart|kill|rm|pause|unpause]&lt;/li&gt;
&lt;li&gt;容器操作运维 — docker [ps|inspect|top|attach|events|logs|wait|export|port]&lt;/li&gt;
&lt;li&gt;容器rootfs命令 — docker [commit|cp|diff]&lt;/li&gt;
&lt;li&gt;镜像仓库 — docker [login|pull|push|search]&lt;/li&gt;
&lt;li&gt;本地镜像管理 — docker [images|rmi|tag|build|history|save|import]&lt;/li&gt;
&lt;li&gt;其他命令 — docker [info|version]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://static.mindcont.com/blog/images/tools/docker/docker.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; 有点需要切换为root用户后进行常用docker操作，以下命令如未特殊说明，均表示在root账户下进行。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;列出机器上的镜像（images）&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# docker images&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;REPOSITORY               TAG             IMAGE ID        CREATED         VIRTUAL SIZE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ubuntu                   14.10           2185fd50e2ca    13 days ago     236.9 MB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;…&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;其中我们可以根据REPOSITORY来判断这个镜像是来自哪个服务器，如果没有 / 则表示官方镜像，类似于username/repos_name表示Github的个人公共库，类似于regsistory.example.com:5000/repos_name则表示的是私服。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IMAGE ID列其实是缩写，要显示完整则带上--no-trunc选项&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;在docker index中搜索image（search）&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# docker search seanlo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME                DESCRIPTION           STARS     OFFICIAL   AUTOMATED&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;seanloook/centos6   sean&amp;apos;s docker repos         0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;搜索的范围是官方镜像和所有个人公共镜像。NAME列的 / 后面是仓库的名字。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;从docker registry server 中下拉image或repository（pull）&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# docker pull centos&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;上面的命令需要注意，在docker v1.2版本以前，会下载官方镜像的centos仓库里的所有镜像，而从v.13开始官方文档里的说明变了：will pull the centos:latest image, its intermediate layers and any aliases of the same id，也就是只会下载tag为latest的镜像（以及同一images id的其他tag）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;也可以明确指定具体的镜像：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# docker pull centos:centos6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当然也可以从某个人的公共仓库（包括自己是私人仓库）拉取，形如docker pull username/repository&amp;lt;:tag_name&amp;gt; ：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# docker pull seanlook/centos:centos6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果你没有网络，或者从其他私服获取镜像，形如docker pull registry.domain.com:5000/repos:&amp;lt;tag_name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# docker pull dl.dockerpool.com:5000/mongo:latest&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;推送一个image或repository到registry（push）&lt;br&gt;
与上面的pull对应，可以推送到Docker Hub的Public、Private以及私服，但不能推送到Top Level Repository。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# docker push seanlook/mongo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; login name:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; password:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;login success&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;从image启动一个container&lt;br&gt;
当利用 docker run 来创建容器时，Docker 在后台运行的&lt;strong&gt;标准操作包括&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;检查本地是否存在指定的镜像，不存在就从公有仓库下载&lt;/li&gt;
&lt;li&gt;利用镜像创建并启动一个容器&lt;/li&gt;
&lt;li&gt;分配一个文件系统，并在只读的镜像层外面挂载一层可读写层&lt;/li&gt;
&lt;li&gt;从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去&lt;/li&gt;
&lt;li&gt;从地址池配置一个 ip 地址给容器&lt;/li&gt;
&lt;li&gt;执行用户指定的应用程序&lt;/li&gt;
&lt;li&gt;执行完毕后容器被终止&lt;br&gt;
使用image创建container并进入交互模式(&lt;strong&gt;退出即终止&lt;/strong&gt;), 使用 **-i -t **,login shell是/bin/bash&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 创建一个根镜像为ubuntu:14.04 名字为ubuntu的交互式 容器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# docker run -i -t --name ubuntu ubuntu:14.04 /bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 进入容器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root@85cea785dc:~/ ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 退出容器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root@85cea785dc:~/ exit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 启动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root@DeepMind:~/docker start ubuntu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#查看当前正在运行的容器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# docker ps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#查看所有容器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# docker ps -a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 依附到正在运行的容器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root@DeepMind:~/docker attach ubuntu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root@85cea785dc:~/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行出一个container放到后台运行, 使用 **-d **参数&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# docker run -d ubuntu /bin/sh -c &amp;quot;while true; do echo hello world; sleep 2; done&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ae60c4b642058fefcc61ada85a610914bed9f5df0e2aa147100eab85cea785dc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;-P(大写)&lt;strong&gt;表示随机端口，&lt;/strong&gt;-p&lt;/strong&gt; 表示指定端口，如下宿主主机端口5000连接到容器34448端口&lt;br&gt;
&lt;img src=&quot;http://static.mindcont.com/blog/images/tools/docker/docker_digits.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;使用Dockerfile文件 build 生成新的image（镜像）&lt;br&gt;
这里给出github上的一份Dockerfile模板 &lt;a href=&quot;https://github.com/webdevops/Dockerfile/blob/develop/docker/nginx/ubuntu-14.04/Dockerfile&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ubuntu:14.04-niginx&lt;/a&gt;,类似于脚本语言，只不过用来编译镜像而已&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#+++++++++++++++++++++++++++++++++++++++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Dockerfile for webdevops/nginx:ubuntu-14.04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#    -- automatically generated  --&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#+++++++++++++++++++++++++++++++++++++++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 根镜像&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FROM webdevops/base:ubuntu-14.04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建者信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MAINTAINER info@webdevops.io&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LABEL vendor=WebDevOps.io&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LABEL io.webdevops.layout=8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LABEL io.webdevops.version=0.55.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ENV WEB_DOCUMENT_ROOT  /app&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ENV WEB_DOCUMENT_INDEX index.php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ENV WEB_ALIAS_DOMAIN   *.vm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 安装 nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RUN /usr/local/bin/apt-install \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nginx \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;&amp;amp; /opt/docker/bin/provision run --tag bootstrap --role webdevops-nginx \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;&amp;amp; /opt/docker/bin/bootstrap.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 对外开放 80 443 端口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EXPOSE 80 443&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用docker build -t niginx . 对当前目录下的Dockerfile文件进行编译&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# docker build -t niginx .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sending build context to Docker daemon 73.45 MB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sending build context to Docker daemon&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Step 0 : FROM seanlook/nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ---&amp;gt; aa8516fa0bb7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Step 1 : EXPOSE 80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ---&amp;gt; Using cache&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ---&amp;gt; fece07e2b515&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Step 2 : ENTRYPOINT /usr/sbin/nginx -c /etc/nginx/nginx.conf &amp;amp;&amp;amp; /bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ---&amp;gt; Running in e08963fd5afb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ---&amp;gt; d9bbd13f5066&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Removing intermediate container e08963fd5afb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Successfully built d9bbd13f5066&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;删除一个或多个container、image（rm、rmi）&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# docker images            &amp;lt;==&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ubuntu            13.10        195eb90b5349       4 months ago       184.6 MB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ubuntu            saucy        195eb90b5349       4 months ago       184.6 MB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;seanlook/ubuntu   rm_test      195eb90b5349       4 months ago       184.6 MB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;使用195eb90b5349启动、停止一个容器后，删除这个镜像&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# docker rmi 195eb90b5349&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Error response from daemon: Conflict, cannot delete image 195eb90b5349 because it is&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tagged in multiple repositories, use -f to force&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2014/11/04 14:19:00 Error: failed to remove one or more images&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;删除seanlook仓库中的tag     &amp;lt;==&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# docker rmi seanlook/ubuntu:rm_test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Untagged: seanlook/ubuntu:rm_test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;现在删除镜像，还会由于container的存在不能rmi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# docker rmi 195eb90b5349&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Error response from daemon: Conflict, cannot delete 195eb90b5349 because the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; container eef3648a6e77 is using it, use -f to force&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2014/11/04 14:24:15 Error: failed to remove one or more images&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;先删除由这个镜像启动的容器    &amp;lt;==&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# docker rm eef3648a6e77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;删除镜像                    &amp;lt;==&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# docker rmi 195eb90b5349&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Deleted: 195eb90b534950d334188c3627f860fbdf898e224d8a0a11ec54ff453175e081&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Deleted: 209ea56fda6dc2fb013e4d1e40cb678b2af91d1b54a71529f7df0bd867adc961&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Deleted: 0f4aac48388f5d65a725ccf8e7caada42f136026c566528a5ee9b02467dac90a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Deleted: fae16849ebe23b48f2bedcc08aaabd45408c62b531ffd8d3088592043d5e7364&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Deleted: f127542f0b6191e99bb015b672f5cf48fa79d974784ac8090b11aeac184eaaff&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;参考链接&quot;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/understanding-docker/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Docker Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.daocloud.io/faq/docker101&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Docker 入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://yeasy.gitbooks.io/docker_practice/content/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Docker —— 从入门到实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dockone.io/article/133&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Docker终极指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.docker.org.cn/page/resources.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Docker 中文资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000000751601&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker常用管理命令（上）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000000759971&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker常用管理命令（下）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Docker是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。开发者在笔记本上编译测试通过的容器可以批量地在生产环境中部署，包括VMs（虚拟机）、bare metal、OpenStack 集群和其他的基础应用平台。&lt;/p&gt;
&lt;p&gt;&lt;img s
    
    </summary>
    
      <category term="Linux" scheme="http://blog.mindcont.com/categories/Linux/"/>
    
    
  </entry>
  
</feed>
